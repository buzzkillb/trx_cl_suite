##################################################################
### tcls_tx2txt.sh: script to de-serialize/decode Bitcoin trx  ###
##################################################################
VVerbose and Verbose output turned on
##########################################
### Check if necessary tools are there ###
##########################################
 awk      - yes 
 bc       - yes 
 dc       - yes 
 openssl  - yes 
 sed      - yes 
 tr       - yes 
###############################################
### Check if network is required and active ###
###############################################
working with this TX_id: 19312fd6b177257bbc90187040066c3b1e2a398dfa953658d5d068f2119ad45f
network interface is active, good
trying to fetch data from blockchain.info
raw trx is this:

###################
### so let's go ###
###################
 
VERSION
 01000000
TX_IN COUNT [var_int]: hex=76, decimal=118
TX_IN[0]
 TX_IN[0] OutPoint hash (char[32])
  11885DCE05707D3903F25D37D281A7845A6648AEBD4AE5252D9336C8560CF082
 TX_IN[0] OutPoint index (uint32_t)
  hex=02000000, reversed=00000002, decimal=2
 TX_IN[0] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[0] Script Sig (uchar[])
  00483045022100E996EF0D2C7CFAC8DAB0AE6167746E002D2CDBB37063ACAE77975C5A91D75F510220191A1AC69A9175D4045A6A5B608500B43622200B59163FEC136C31C534DF499801483045022100DE0F233E67EE30EC20961577F48636BF0F66F197863BBDACA69EE2963AE7506502205AC34EC732DC89CFB93DC1AFAE1465379F2EF144AC560624F804BDB6D8187575014C695221030E6B8E6E187E3E2BD8E3563893042022ED557E97921586B697DF74667973406421035D702A4C104BD1979A9522D66A6813CD97E8AFD4CDF90BB9E4D733D5413AD72C2103DB31D09131680CA6F8EA89DC63AFDC8F8FE104720C7A1CC6B674DD467BB5E58453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00E996EF0D2C7CFA:C8DAB0AE6167746E
        002D2CDBB37063AC:AE77975C5A91D75F
        51
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        191A1AC69A9175D4:045A6A5B608500B4
        3622200B59163FEC:136C31C534DF4998
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00DE0F233E67EE30:EC20961577F48636
        BF0F66F197863BBD:ACA69EE2963AE750
        65
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        5AC34EC732DC89CF:B93DC1AFAE146537
        9F2EF144AC560624:F804BDB6D8187575
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        030E6B8E6E187E3E:2BD8E35638930420
        22ED557E97921586:B697DF7466797340
        64
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CLUCegUxakUu6Qf1wBDbHvjTCRtgu6EZh
    21: OP_DATA_0x21: compressed pub key
        035D702A4C104BD1:979A9522D66A6813
        CD97E8AFD4CDF90B:B9E4D733D5413AD7
        2C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1PekF8xkgroh6cDtqFavt9HpugxWfN3jYx
    21: OP_DATA_0x21: compressed pub key
        03DB31D09131680C:A6F8EA89DC63AFDC
        8F8FE104720C7A1C:C6B674DD467BB5E5
        84
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1DkGDBnqg5wMM5zambHSNC8rE7EJyXxCTd
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221030E6B8E6E18:7E3E2BD8E3563893
        042022ED557E9792:1586B697DF746679
        73406421035D702A:4C104BD1979A9522
        D66A6813CD97E8AF:D4CDF90BB9E4D733
        D5413AD72C2103DB:31D09131680CA6F8
        EA89DC63AFDC8F8F:E104720C7A1CC6B6
        74DD467BB5E58453:AE
        corresponding bitcoin address is:    32hq7NSSPFtQHiRPo66MigYhfGwrLCAa9M
 TX_IN[0] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[1]
 TX_IN[1] OutPoint hash (char[32])
  924F6E1177190FB312A83A7207E24628DF264D317447B8D0A45CED8A48606997
 TX_IN[1] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[1] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[1] Script Sig (uchar[])
  00483045022100A8E1583757ED467F0E8F61A16279339804C1C733C82CFEE78F32F05D071CCD5902200B641F5F0167DB3B69E32122443DCB867DFC7E1E041DC06745BA52B39B1BCA3201483045022100BD6924EB6F84FAC0DD6599E670D711633A632B8C802912DC0D9F1877AC8A0FB802205A19C9857387A7D5E6CD0329E6FCC960E60BC47015AEA9AFAE82AB722A79A1D7014C695221022BCA5514CA665B229F6182AE9AD81B110495ACB99EBE40BAE1F1BD52BC38EF1C2102259313B8E0763FC16F2AB7EEB09CB46AAB7B9F4C62610FB57C0528D728FF291E2102275A0914209B1993207C8A5A32788DA37FE6CB51A341DD33FDCE253E4F3A40FC53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A8E1583757ED46:7F0E8F61A1627933
        9804C1C733C82CFE:E78F32F05D071CCD
        59
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0B641F5F0167DB3B:69E32122443DCB86
        7DFC7E1E041DC067:45BA52B39B1BCA32
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00BD6924EB6F84FA:C0DD6599E670D711
        633A632B8C802912:DC0D9F1877AC8A0F
        B8
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        5A19C9857387A7D5:E6CD0329E6FCC960
        E60BC47015AEA9AF:AE82AB722A79A1D7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        022BCA5514CA665B:229F6182AE9AD81B
        110495ACB99EBE40:BAE1F1BD52BC38EF
        1C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    12eEry3QD4YkYxkjJtGXMNVHiPmakdgWsX
    21: OP_DATA_0x21: compressed pub key
        02259313B8E0763F:C16F2AB7EEB09CB4
        6AAB7B9F4C62610F:B57C0528D728FF29
        1E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LKE1GnrDatTaPgtFfvUr8B4uZNVVUTLZo
    21: OP_DATA_0x21: compressed pub key
        02275A0914209B19:93207C8A5A32788D
        A37FE6CB51A341DD:33FDCE253E4F3A40
        FC
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13kxqqBc7UXWcAQhxX3QAsokjMpbC9QfHm
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221022BCA5514CA:665B229F6182AE9A
        D81B110495ACB99E:BE40BAE1F1BD52BC
        38EF1C2102259313:B8E0763FC16F2AB7
        EEB09CB46AAB7B9F:4C62610FB57C0528
        D728FF291E210227:5A0914209B199320
        7C8A5A32788DA37F:E6CB51A341DD33FD
        CE253E4F3A40FC53:AE
        corresponding bitcoin address is:    3NNHeVou7dCTosTR9Mnmv1ioA8TvXoK8ic
 TX_IN[1] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[2]
 TX_IN[2] OutPoint hash (char[32])
  96CE1110C584A3658D855260229C778238D6C1C5306BC4446494E8440EBA5F2B
 TX_IN[2] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[2] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[2] Script Sig (uchar[])
  0047304402200CECC9DA736ABDDAF85600A7E5207846089111D0A36A0839962EF166EE044A90022064DBB4DEB4F9347C503FB5944323F636DB09EAC9E192E180C7F7570E7275510901473044022063A3E2CBFC55972A991911AA35218D0799BD56CA304403A180EB6E735D1E0AE902205323EEA3B37BDED388981673006928815E4B60C95C40C97D31C4DA3AC2809649014C695221024EBDC51CF6A561102C70AB3323683A03F25E6B565A5CD3DF89BEA7DAC507F95A2102D4345AA1C99FE5B92679492836152A213222FDEFA4469AA3001BA5FD9845FC692102F637DE6E52EB298474CA4E3956F5033016193A887AFACE1C43A21DCE8A34B77E53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        0CECC9DA736ABDDA:F85600A7E5207846
        089111D0A36A0839:962EF166EE044A90
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        64DBB4DEB4F9347C:503FB5944323F636
        DB09EAC9E192E180:C7F7570E72755109
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        63A3E2CBFC55972A:991911AA35218D07
        99BD56CA304403A1:80EB6E735D1E0AE9
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        5323EEA3B37BDED3:8898167300692881
        5E4B60C95C40C97D:31C4DA3AC2809649
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        024EBDC51CF6A561:102C70AB3323683A
        03F25E6B565A5CD3:DF89BEA7DAC507F9
        5A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Cos1ehu4dWNNKdeDcpbmeHff1ebrwvPob
    21: OP_DATA_0x21: compressed pub key
        02D4345AA1C99FE5:B92679492836152A
        213222FDEFA4469A:A3001BA5FD9845FC
        69
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17468S7eHhX9MJpYwZMeyiJERZ4NeA9WR9
    21: OP_DATA_0x21: compressed pub key
        02F637DE6E52EB29:8474CA4E3956F503
        3016193A887AFACE:1C43A21DCE8A34B7
        7E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    14YUfAtR5pZ9sR1shAxEToYe7ngozA3ooS
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221024EBDC51CF6:A561102C70AB3323
        683A03F25E6B565A:5CD3DF89BEA7DAC5
        07F95A2102D4345A:A1C99FE5B9267949
        2836152A213222FD:EFA4469AA3001BA5
        FD9845FC692102F6:37DE6E52EB298474
        CA4E3956F5033016:193A887AFACE1C43
        A21DCE8A34B77E53:AE
        corresponding bitcoin address is:    37eC7cjp9LK21rmPUku18j8eCrt739b55M
 TX_IN[2] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[3]
 TX_IN[3] OutPoint hash (char[32])
  E23391A0A3A03D8D4B37B9CB5615B57A81810FC94B9E2478D5E9B87D840F958C
 TX_IN[3] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[3] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[3] Script Sig (uchar[])
  0047304402207F1CD8CC20C5D060A6C37A6A195AA7C0FE4CF46C4557951A23C71E60985CC73B02203857C452AC2E8030669D59EA08F19BA001B587B979725C680420B3D89026A0DC014830450221009759CF7EF53C4D4D70616EE30A4E5F2095B72C74377BA693D2FF348A088E4D4502201BA9CA589279E73CECB5EF66BCA7D0389FE5C757F67ED97C9FA936E8C42882B9014C695221038316C651F933BE5C4C4AC334ED88E253DC2F83BBD421179E8D9986DA770CEAAD210346727161F0775E336185FDF873D2FFBAA418FCB61381EE9758639C1E355FC87A21026AC55FFA7B15B27843EA75CBF4EB0FCE7FBB4FA093A65C34A7F45297BFE1B3A353AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        7F1CD8CC20C5D060:A6C37A6A195AA7C0
        FE4CF46C4557951A:23C71E60985CC73B
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        3857C452AC2E8030:669D59EA08F19BA0
        01B587B979725C68:0420B3D89026A0DC
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009759CF7EF53C4D:4D70616EE30A4E5F
        2095B72C74377BA6:93D2FF348A088E4D
        45
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        1BA9CA589279E73C:ECB5EF66BCA7D038
        9FE5C757F67ED97C:9FA936E8C42882B9
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        038316C651F933BE:5C4C4AC334ED88E2
        53DC2F83BBD42117:9E8D9986DA770CEA
        AD
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NxZx7JPiKr52xe1vUsdnUxTd9SttP64Ms
    21: OP_DATA_0x21: compressed pub key
        0346727161F0775E:336185FDF873D2FF
        BAA418FCB61381EE:9758639C1E355FC8
        7A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1A9ALpRgvSYQc2XhYE8aAp4Atecw9T7mJF
    21: OP_DATA_0x21: compressed pub key
        026AC55FFA7B15B2:7843EA75CBF4EB0F
        CE7FBB4FA093A65C:34A7F45297BFE1B3
        A3
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Ep6LpShjxq4UzVQc58FV1gMdbvtsLSCaW
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221038316C651F9:33BE5C4C4AC334ED
        88E253DC2F83BBD4:21179E8D9986DA77
        0CEAAD2103467271:61F0775E336185FD
        F873D2FFBAA418FC:B61381EE9758639C
        1E355FC87A21026A:C55FFA7B15B27843
        EA75CBF4EB0FCE7F:BB4FA093A65C34A7
        F45297BFE1B3A353:AE
        corresponding bitcoin address is:    37Le1BAUxBowykAxchWQQmiFf5fwWUfDgB
 TX_IN[3] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[4]
 TX_IN[4] OutPoint hash (char[32])
  954C0FA9DC720692F308AE56D885A929B01E89692BA50018D1B2A3BD97589547
 TX_IN[4] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[4] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[4] Script Sig (uchar[])
  004730440220129A9A9BF7ED6EBB7E8A1C810B8B528AE58C2937DB9BF80C08C1C8FB8030B6D902202B7C7AD55AC90CDBBA501F2DD5BF585DF0CBF582693B51B7028D8D1A820E6E0601473044022074BC9BDD2744E6C7FB8B24C0CF73CCEBEF37ABD7A878570E7624B0E9F2A9284A02205943C123BC0B25C3AEB2F98DA1C4CB45AFD830E29C2CC74426F39B1B40F013E0014C69522103BA5D74A6E76530B8A0789CA56F02D0003AAD5ED9AC5056C98BCEB3C142EEDF76210384A9229DD4FF7C0FB985D8ACE92502605545C57E17F666B76EF7FDCEC53039C821039ACEBE0A51B3137953BD8A964457B1412BE88E33D230D10FDDD825CCC0E1DC2E53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        129A9A9BF7ED6EBB:7E8A1C810B8B528A
        E58C2937DB9BF80C:08C1C8FB8030B6D9
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        2B7C7AD55AC90CDB:BA501F2DD5BF585D
        F0CBF582693B51B7:028D8D1A820E6E06
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        74BC9BDD2744E6C7:FB8B24C0CF73CCEB
        EF37ABD7A878570E:7624B0E9F2A9284A
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        5943C123BC0B25C3:AEB2F98DA1C4CB45
        AFD830E29C2CC744:26F39B1B40F013E0
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03BA5D74A6E76530:B8A0789CA56F02D0
        003AAD5ED9AC5056:C98BCEB3C142EEDF
        76
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19KcVnbvU4gRWvEUEn2MzSnrcfWeqWy8A8
    21: OP_DATA_0x21: compressed pub key
        0384A9229DD4FF7C:0FB985D8ACE92502
        605545C57E17F666:B76EF7FDCEC53039
        C8
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MeZp7UYiL6GMowpSUCSQwp3qkPk3Wp6vu
    21: OP_DATA_0x21: compressed pub key
        039ACEBE0A51B313:7953BD8A964457B1
        412BE88E33D230D1:0FDDD825CCC0E1DC
        2E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1J2vYyLKtkWGKyzEKjAWNfxe5BiLqbrVj8
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103BA5D74A6E7:6530B8A0789CA56F
        02D0003AAD5ED9AC:5056C98BCEB3C142
        EEDF76210384A922:9DD4FF7C0FB985D8
        ACE92502605545C5:7E17F666B76EF7FD
        CEC53039C821039A:CEBE0A51B3137953
        BD8A964457B1412B:E88E33D230D10FDD
        D825CCC0E1DC2E53:AE
        corresponding bitcoin address is:    33kXUL6e5eCaaSRHEWwnUEcXeGi3w2rc5t
 TX_IN[4] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[5]
 TX_IN[5] OutPoint hash (char[32])
  A6C0D1167E193F51A7ECA4E3E5915C47D8C3AAC2FA4D24BD00AA331A370EB54E
 TX_IN[5] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[5] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[5] Script Sig (uchar[])
  0047304402207D6498D166D81DB35E6CC1277544CE416962134B84679538E07F5A287FEA8240022072F05BB6D0767D3EA545E6E65C7C71DEEEDAF6760B8B1969B323FA9A6F7D323101483045022100EAC600C2A8E437B793B33380B8D380EE5B720C8B3C05ADAB7CD24DAED61F778902201F87059EE9503BD20B19AA4E87A367F3CBDE4C1E255F931C45B82491653A95A4014C69522103DEDFC5C08966431E71C15EAA29D6190883258AC68A9AF17A5A2B12D3F0F268E921039A148FE171773019C5702CE16028B7B938171A851D9DCB71F65DB1C4E4535577210281578855D0C3876656640C0407A27A2F480D285EF766D4D02539292F9EC1FBEC53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        7D6498D166D81DB3:5E6CC1277544CE41
        6962134B84679538:E07F5A287FEA8240
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        72F05BB6D0767D3E:A545E6E65C7C71DE
        EEDAF6760B8B1969:B323FA9A6F7D3231
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00EAC600C2A8E437:B793B33380B8D380
        EE5B720C8B3C05AD:AB7CD24DAED61F77
        89
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        1F87059EE9503BD2:0B19AA4E87A367F3
        CBDE4C1E255F931C:45B82491653A95A4
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03DEDFC5C0896643:1E71C15EAA29D619
        0883258AC68A9AF1:7A5A2B12D3F0F268
        E9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KBSBZCChC3owiJdJaCDkiHsW6wJWhCd2Q
    21: OP_DATA_0x21: compressed pub key
        039A148FE1717730:19C5702CE16028B7
        B938171A851D9DCB:71F65DB1C4E45355
        77
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Ek1oHpeaL1K3JSim6qqsHLQWvis3BuSqE
    21: OP_DATA_0x21: compressed pub key
        0281578855D0C387:6656640C0407A27A
        2F480D285EF766D4:D02539292F9EC1FB
        EC
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EfUU3K25HJdm2uD9Q1WP4CsGyoxUpARAY
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103DEDFC5C089:66431E71C15EAA29
        D6190883258AC68A:9AF17A5A2B12D3F0
        F268E921039A148F:E171773019C5702C
        E16028B7B938171A:851D9DCB71F65DB1
        C4E4535577210281:578855D0C3876656
        640C0407A27A2F48:0D285EF766D4D025
        39292F9EC1FBEC53:AE
        corresponding bitcoin address is:    3N8G3tLBFKgcwR3wXczFCsjau89CqgngSp
 TX_IN[5] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[6]
 TX_IN[6] OutPoint hash (char[32])
  214DEA00252168FD2EDFB752FF140CBFF325BC96D54EF32D193F69AA3CAE80A0
 TX_IN[6] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[6] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[6] Script Sig (uchar[])
  0047304402202CB1DC9A65409A081EA80ACC60862E14ADF0264722F59D7C681414EAD6F6A6850220313534BB017EE4A26C55D915A16BC3538509578E1D6959684EEFB6135BC447190147304402205A5A77E1AAA8D651648F24F90978566A7F5E8962435D89E73BEA321E6BFFEBEF02201DC2C8A601A91ABC7B12DF739CBF32EC37BAAB3E05DDF33C2D6EFB290A4E78DA014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        2CB1DC9A65409A08:1EA80ACC60862E14
        ADF0264722F59D7C:681414EAD6F6A685
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        313534BB017EE4A2:6C55D915A16BC353
        8509578E1D695968:4EEFB6135BC44719
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        5A5A77E1AAA8D651:648F24F90978566A
        7F5E8962435D89E7:3BEA321E6BFFEBEF
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        1DC2C8A601A91ABC:7B12DF739CBF32EC
        37BAAB3E05DDF33C:2D6EFB290A4E78DA
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[6] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[7]
 TX_IN[7] OutPoint hash (char[32])
  E8188CF03B824BC517C9FCF692A276C36C20251504530EF10EEF4CB36A678DE0
 TX_IN[7] OutPoint index (uint32_t)
  hex=03000000, reversed=00000003, decimal=3
 TX_IN[7] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[7] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        0F560580C482076E:EFDD67B4063A1BF4
        17699BF3159C1D9C:32E6F85C2CC45D3F
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        444F6B75455D5C4C:52F2BCF9CD8006A0
        448B440F54B79298:F2702164957664E7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        138040F109B3A429:36319E600016E662
        FA7ADE7BE4B5D786:50968AC6A088B868
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        30EB1D07BF880D75:A02588BB235A38A4
        10D690729117BF5B:85E5497413F42A3E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        028A05B114D26E39:EB0AF8F9D7789E24
        2441CEAA1795B01B:8CCA4A2191D67551
        36
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LdCLctnoCCDKcHYFnZHXJK3L625aHuTZi
    21: OP_DATA_0x21: compressed pub key
        03B2825B562D3EBA:010A004FA2587828
        A519B386FFD8F6E5:1A49BBE9A9CEEA0B
        BD
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NA3VzEvizh1FWcKpsTVG7uXjyW53RD8pm
    21: OP_DATA_0x21: compressed pub key
        036D32593677CE6F:65F04ACD07C02C99
        B49430F755FE5F67:7C0423957D6B8B95
        C4
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15nqRKhf3iQLcLKwt6oStfs4WYEUAYknPa
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221028A05B114D2:6E39EB0AF8F9D778
        9E242441CEAA1795:B01B8CCA4A2191D6
        7551362103B2825B:562D3EBA010A004F
        A2587828A519B386:FFD8F6E51A49BBE9
        A9CEEA0BBD21036D:32593677CE6F65F0
        4ACD07C02C99B494:30F755FE5F677C04
        23957D6B8B95C453:AE
        corresponding bitcoin address is:    3Nn39mundMXv4nkHUD33UEHY4fRh9dhjEr
 TX_IN[7] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[8]
 TX_IN[8] OutPoint hash (char[32])
  74379D4C787B1B6AD0EBB9BAC977D2D2951083D30EF232ADC94F2B0DBF90919F
 TX_IN[8] OutPoint index (uint32_t)
  hex=02000000, reversed=00000002, decimal=2
 TX_IN[8] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[8] Script Sig (uchar[])
  00473044022011A6A9CAA41A07A5FAC09E9B3662F50D1BBFBA852B227ABE66B05382E80C6AF6022004E8C44E45EDD2D42995923D1A4D563149E110E99C42171F163CB6E9B949758F014830450221009ED7FE20BF455B64A7949389F5840CFC5BBEE12C9B1B9DC4AF90FF2FB5A3E31802206497E4972167B36B3678A8D83FFB57E58843B4801E18F191E7F7FC7D484FD3A0014C69522102F5EF8538D5126AA19F7E4036D5F798E88BFAF6B992ACDBC85D5CCBE1FD73C55421025483D28935E9C6AA1A2CEA6E1541C41B6B45C39DC5C7EE279EAA6404C73EA1AF21023CF6892F70B6736F15274D7DE19713C7F550BB421ADCAE8930761520149FD2AC53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        11A6A9CAA41A07A5:FAC09E9B3662F50D
        1BBFBA852B227ABE:66B05382E80C6AF6
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        04E8C44E45EDD2D4:2995923D1A4D5631
        49E110E99C42171F:163CB6E9B949758F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009ED7FE20BF455B:64A7949389F5840C
        FC5BBEE12C9B1B9D:C4AF90FF2FB5A3E3
        18
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6497E4972167B36B:3678A8D83FFB57E5
        8843B4801E18F191:E7F7FC7D484FD3A0
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02F5EF8538D5126A:A19F7E4036D5F798
        E88BFAF6B992ACDB:C85D5CCBE1FD73C5
        54
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16k4bX1KtBXEYe2yUMU4UXnDZ1LN91hYEu
    21: OP_DATA_0x21: compressed pub key
        025483D28935E9C6:AA1A2CEA6E1541C4
        1B6B45C39DC5C7EE:279EAA6404C73EA1
        AF
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Crburg7WhczDW3f9SpHUQLgmunz4eFkJb
    21: OP_DATA_0x21: compressed pub key
        023CF6892F70B673:6F15274D7DE19713
        C7F550BB421ADCAE:8930761520149FD2
        AC
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EAi6FVX7CFNUen9URsBA3Hz2iC6CFGXbW
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102F5EF8538D5:126AA19F7E4036D5
        F798E88BFAF6B992:ACDBC85D5CCBE1FD
        73C55421025483D2:8935E9C6AA1A2CEA
        6E1541C41B6B45C3:9DC5C7EE279EAA64
        04C73EA1AF21023C:F6892F70B6736F15
        274D7DE19713C7F5:50BB421ADCAE8930
        761520149FD2AC53:AE
        corresponding bitcoin address is:    37YACzZbL6p9V5kNBoEiqpAwJ7WfU1WEeW
 TX_IN[8] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[9]
 TX_IN[9] OutPoint hash (char[32])
  A06173E89D08A458EF5907EF42F2D43F6B1DF635D5713DDE9723CD57BBA803A5
 TX_IN[9] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[9] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[9] Script Sig (uchar[])
  0048304502210085268771C7FDAF1839BA05FBCC260B1099FB269D94BA4891EA96F8CA8B8C6B780220174E03222807E3169F15A85F71FAB86E663244514090773664B1B17CFE7E308E01483045022100B9FE3C5A2F2016AA45025D6CCB14B33575A61D80C51659854FDCFC427AAE495F02206555B13ED2EA603EA1E1F749636AA8B1DC5F1C9BC3D52C89ADF30754528B9C51014C69522102E006F27511D438467305CF0021AC699676F672D44F624C7DA632F5D3E9A4B0EB210229D1BB5F64FE095F0211ACAD67AC5786C15194413F8BE80CA4E2DBA0B97D01AE2103A1D735DD720D7DA66F63EB5BF01F06AADBEF2E5F0BDB1CE906E9CDC9239C856D53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        0085268771C7FDAF:1839BA05FBCC260B
        1099FB269D94BA48:91EA96F8CA8B8C6B
        78
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        174E03222807E316:9F15A85F71FAB86E
        6632445140907736:64B1B17CFE7E308E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B9FE3C5A2F2016:AA45025D6CCB14B3
        3575A61D80C51659:854FDCFC427AAE49
        5F
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6555B13ED2EA603E:A1E1F749636AA8B1
        DC5F1C9BC3D52C89:ADF30754528B9C51
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02E006F27511D438:467305CF0021AC69
        9676F672D44F624C:7DA632F5D3E9A4B0
        EB
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Jq7T4VdJRFyuyxdnWWfsrBbJ6fkBZ6QAd
    21: OP_DATA_0x21: compressed pub key
        0229D1BB5F64FE09:5F0211ACAD67AC57
        86C15194413F8BE8:0CA4E2DBA0B97D01
        AE
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1C8rpKZrzckRbWd1ewKnKQQFwczdd9Udwz
    21: OP_DATA_0x21: compressed pub key
        03A1D735DD720D7D:A66F63EB5BF01F06
        AADBEF2E5F0BDB1C:E906E9CDC9239C85
        6D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HqBMw7kgC4k4agUVhEuoV2u4eRMchXuF5
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102E006F27511:D438467305CF0021
        AC699676F672D44F:624C7DA632F5D3E9
        A4B0EB210229D1BB:5F64FE095F0211AC
        AD67AC5786C15194:413F8BE80CA4E2DB
        A0B97D01AE2103A1:D735DD720D7DA66F
        63EB5BF01F06AADB:EF2E5F0BDB1CE906
        E9CDC9239C856D53:AE
        corresponding bitcoin address is:    37y17BNaMLrk5JNKeZL3edk2m679BnEdiG
 TX_IN[9] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[10]
 TX_IN[10] OutPoint hash (char[32])
  36B63400834287EC04F592F6719EB96A59AA3BB13BF6D63DFCB647AD54E468A3
 TX_IN[10] OutPoint index (uint32_t)
  hex=04000000, reversed=00000004, decimal=4
 TX_IN[10] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[10] Script Sig (uchar[])
  004730440220714AC3E149357DCDEF10A6A55EF2D1638EE0333C81F62FF2F412F2A58268EE75022036783F9B88A8A33B410A146099442A4DF0E5E8E5CBE827197B691E5B6AC298AE01473044022021EEF706D6C15A671D9BC40BCD1678722FDD52ECDBED0921C327C9D4E5D9FC11022028281696649672D063F9417C3188F8DB5C97E797F7485041F8496D067C2D10B1014C695221037C4BDEF03133D83B9BAF3172A8B36F42E83748731629CC18AA1531CE6DDDEA62210281E9A04A5E1D9DA79B962FB00B863606AC3A145D8EEC4B6046C2A7FC12EBB18621020467F2C13E90981AC583F62A4EB569C6351EE60AB2DC4A952030991EE9A58F5B53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        714AC3E149357DCD:EF10A6A55EF2D163
        8EE0333C81F62FF2:F412F2A58268EE75
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        36783F9B88A8A33B:410A146099442A4D
        F0E5E8E5CBE82719:7B691E5B6AC298AE
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        21EEF706D6C15A67:1D9BC40BCD167872
        2FDD52ECDBED0921:C327C9D4E5D9FC11
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        28281696649672D0:63F9417C3188F8DB
        5C97E797F7485041:F8496D067C2D10B1
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        037C4BDEF03133D8:3B9BAF3172A8B36F
        42E83748731629CC:18AA1531CE6DDDEA
        62
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    12SNDrwsPChArEaZGTvz5LVWe7gtSTDD9G
    21: OP_DATA_0x21: compressed pub key
        0281E9A04A5E1D9D:A79B962FB00B8636
        06AC3A145D8EEC4B:6046C2A7FC12EBB1
        86
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LGtoDoFecRX6ZiqQmZWNPo67KfX9AY796
    21: OP_DATA_0x21: compressed pub key
        020467F2C13E9098:1AC583F62A4EB569
        C6351EE60AB2DC4A:952030991EE9A58F
        5B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KXLmXMmACaeMg2xBzrYTdDC2dBGMmxu6X
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221037C4BDEF031:33D83B9BAF3172A8
        B36F42E837487316:29CC18AA1531CE6D
        DDEA62210281E9A0:4A5E1D9DA79B962F
        B00B863606AC3A14:5D8EEC4B6046C2A7
        FC12EBB186210204:67F2C13E90981AC5
        83F62A4EB569C635:1EE60AB2DC4A9520
        30991EE9A58F5B53:AE
        corresponding bitcoin address is:    34WGTaWWnuyWDmGUncVZTbzLYCH2dVNwKN
 TX_IN[10] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[11]
 TX_IN[11] OutPoint hash (char[32])
  86F8884FCF0C18A7B67E8A0988CB7694DE639E07F865A8E88DFB1DE847E595E1
 TX_IN[11] OutPoint index (uint32_t)
  hex=10000000, reversed=00000010, decimal=16
 TX_IN[11] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[11] Script Sig (uchar[])
  00473044022058759AC1D8D3AB4360987063691AD714D0F31AC40E1B977B44E4BC9E8F844DDC02204B6EB23A9AB716D31BABF180675D0C220E17C14E585F125DB6FE1B8DC15D9BDD014830450221008A1A99C99687899555A03C3E5A3294223652D8BAED0179841AE95D5CABF32E8B02203E78402DD77DBA4490FD5ACCF3C1F2BAB687446FC97F5D1F274ECB863E7D015B014C6952210258EF3DFAEC9F706522CBF59DDB228B74C0B2704920483B62AF049D95E3569C0C210301BEF683944221A157176E8DC10B8B5C373412B3BDD07F238864EE890795E9CD21020B5D190EF744E404C2B2A1AE7135E3D13B64D1997F47C26E920FB5DDD9E86F6953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        58759AC1D8D3AB43:60987063691AD714
        D0F31AC40E1B977B:44E4BC9E8F844DDC
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4B6EB23A9AB716D3:1BABF180675D0C22
        0E17C14E585F125D:B6FE1B8DC15D9BDD
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008A1A99C9968789:9555A03C3E5A3294
        223652D8BAED0179:841AE95D5CABF32E
        8B
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3E78402DD77DBA44:90FD5ACCF3C1F2BA
        B687446FC97F5D1F:274ECB863E7D015B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0258EF3DFAEC9F70:6522CBF59DDB228B
        74C0B2704920483B:62AF049D95E3569C
        0C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    14ErGd8YAe7qWDDkAYCU14zSsgkA2FA9Gr
    21: OP_DATA_0x21: compressed pub key
        0301BEF683944221:A157176E8DC10B8B
        5C373412B3BDD07F:238864EE890795E9
        CD
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    162QT42nuGjzRTsEHYcPMnpnv2vQFbwEuA
    21: OP_DATA_0x21: compressed pub key
        020B5D190EF744E4:04C2B2A1AE7135E3
        D13B64D1997F47C2:6E920FB5DDD9E86F
        69
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1943KwWCiEGDscFXzLpLBebnViJvkwUy82
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210258EF3DFAEC:9F706522CBF59DDB
        228B74C0B2704920:483B62AF049D95E3
        569C0C210301BEF6:83944221A157176E
        8DC10B8B5C373412:B3BDD07F238864EE
        890795E9CD21020B:5D190EF744E404C2
        B2A1AE7135E3D13B:64D1997F47C26E92
        0FB5DDD9E86F6953:AE
        corresponding bitcoin address is:    33jLRTSAg6peMhBxZ29CDDXi3oFmh6gnnm
 TX_IN[11] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[12]
 TX_IN[12] OutPoint hash (char[32])
  44DFEA67583E796B098128072A732968896A0F4FA14804D9D6104F89979B8AB5
 TX_IN[12] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[12] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[12] Script Sig (uchar[])
  004830450221008ABDD655E6EA6CF213D02CF7A206648220F1AD828885E98F4FA44027150CC9D102206DB0046794A05811517452D6F4F20363A8DAD8DA7B2509999FCDBD8485F5908F01473044022013BD60FD6C00190AC2CD9D2261CC2254CCB5E212FCA61A6EC140C0AC45AE328B022018E7497F2F456EDCD8FBB2759E6666289032A66901BD047328F96062A5675811014C6952210366439BA0066E364F4C6DCD2BEEEF4872798C90D36AEA156CA71C78F0B54D512121037389911B75600D4D96886E6875ADF2614CE91751106D12F4893EBFC0FA0FB1212102D1A5B7D4CE9582C7E0088DFCF6EF5470EE9B43E44827B47F0DB037AAF5CD757153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008ABDD655E6EA6C:F213D02CF7A20664
        8220F1AD828885E9:8F4FA44027150CC9
        D1
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6DB0046794A05811:517452D6F4F20363
        A8DAD8DA7B250999:9FCDBD8485F5908F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        13BD60FD6C00190A:C2CD9D2261CC2254
        CCB5E212FCA61A6E:C140C0AC45AE328B
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        18E7497F2F456EDC:D8FBB2759E666628
        9032A66901BD0473:28F96062A5675811
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0366439BA0066E36:4F4C6DCD2BEEEF48
        72798C90D36AEA15:6CA71C78F0B54D51
        21
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    12xhXm9aPRaQ6XWktbTUXbjC1sRY7dPiKa
    21: OP_DATA_0x21: compressed pub key
        037389911B75600D:4D96886E6875ADF2
        614CE91751106D12:F4893EBFC0FA0FB1
        21
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FDtRiiAE75vuQ6moqSEiJU7uGBARQV2Pf
    21: OP_DATA_0x21: compressed pub key
        02D1A5B7D4CE9582:C7E0088DFCF6EF54
        70EE9B43E44827B4:7F0DB037AAF5CD75
        71
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Du2N89KEbiCmPFC8kWGp2kJEAW7ujxNHv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210366439BA006:6E364F4C6DCD2BEE
        EF4872798C90D36A:EA156CA71C78F0B5
        4D51212103738991:1B75600D4D96886E
        6875ADF2614CE917:51106D12F4893EBF
        C0FA0FB1212102D1:A5B7D4CE9582C7E0
        088DFCF6EF5470EE:9B43E44827B47F0D
        B037AAF5CD757153:AE
        corresponding bitcoin address is:    3L5XSGicK9Pn5KsV9idd9pdNxoNQDLsnuJ
 TX_IN[12] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[13]
 TX_IN[13] OutPoint hash (char[32])
  B80518C186C5ACD033AC3ABB895B77FDC52D127089AF3810C018B557C60BDA3F
 TX_IN[13] OutPoint index (uint32_t)
  hex=02000000, reversed=00000002, decimal=2
 TX_IN[13] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[13] Script Sig (uchar[])
  004730440220339D82AB97FBFDCE23B5D52A4A7EB278FF708904B4E3C2CFEF3F766461859B48022016A01A1EEF6D88CE23576DDBAEF26120110E15F6E7FC0CA0795D9A28A3BB85AA01473044022066991C8F65055C557E88D15C396EC752656721E6583C175FBEDB7F2C02D9E3380220043C97180D7D11DF42ACA819714C4D5EAEDC18A9BF8329E77C9F28EC647FC6D8014C69522103DD55D05A9B6BA1411379F5D23FA6606F52106875479E2C86F5CFFA7622B502E02103FA23F6634E4D747661AF941C17C4A3E90770F39D85045FDEE888F14CED2345AA21029F73F46464AC5B425C7844C3D94CEEE8EF05674FC00B9D831BE18E01A5D8585253AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        339D82AB97FBFDCE:23B5D52A4A7EB278
        FF708904B4E3C2CF:EF3F766461859B48
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        16A01A1EEF6D88CE:23576DDBAEF26120
        110E15F6E7FC0CA0:795D9A28A3BB85AA
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        66991C8F65055C55:7E88D15C396EC752
        656721E6583C175F:BEDB7F2C02D9E338
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        043C97180D7D11DF:42ACA819714C4D5E
        AEDC18A9BF8329E7:7C9F28EC647FC6D8
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03DD55D05A9B6BA1:411379F5D23FA660
        6F52106875479E2C:86F5CFFA7622B502
        E0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    137useURauA78ikCDCbgoRBC5xrUC4ewau
    21: OP_DATA_0x21: compressed pub key
        03FA23F6634E4D74:7661AF941C17C4A3
        E90770F39D85045F:DEE888F14CED2345
        AA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1AqYJTGswvCsuVrwvYNwy1wSoGMXdprpFp
    21: OP_DATA_0x21: compressed pub key
        029F73F46464AC5B:425C7844C3D94CEE
        E8EF05674FC00B9D:831BE18E01A5D858
        52
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NfJLKdtjXieLbQ5EkUEaG1BSHdMPiELCa
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103DD55D05A9B:6BA1411379F5D23F
        A6606F5210687547:9E2C86F5CFFA7622
        B502E02103FA23F6:634E4D747661AF94
        1C17C4A3E90770F3:9D85045FDEE888F1
        4CED2345AA21029F:73F46464AC5B425C
        7844C3D94CEEE8EF:05674FC00B9D831B
        E18E01A5D8585253:AE
        corresponding bitcoin address is:    36jWsMtwD94saVoRQp8LaFuhhrLLAfbvy4
 TX_IN[13] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[14]
 TX_IN[14] OutPoint hash (char[32])
  EA88723AF0AB4545AE0D80E9C9DE3723D7389135A70B8E265F40119A9FAEF1B4
 TX_IN[14] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[14] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[14] Script Sig (uchar[])
  00483045022100AC042C83498751EC34D2634A272732672C36CCC1F603D198239CD609CD3AD8DE02207F00D9BF12E4FD54F6C883D55D57F122A30CFECC4924703C6F5EA8897A5FB3D701473044022053E31CB42699DD74BDD3AF1779AFEDB4EF689C5565D62D663B60F7976B2327EC022073AE4E34C60433A83CE76C5C08310320EF36097331530A4A59830BFC7E8179B1014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00AC042C83498751:EC34D2634A272732
        672C36CCC1F603D1:98239CD609CD3AD8
        DE
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        7F00D9BF12E4FD54:F6C883D55D57F122
        A30CFECC4924703C:6F5EA8897A5FB3D7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        53E31CB42699DD74:BDD3AF1779AFEDB4
        EF689C5565D62D66:3B60F7976B2327EC
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        73AE4E34C60433A8:3CE76C5C08310320
        EF36097331530A4A:59830BFC7E8179B1
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[14] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[15]
 TX_IN[15] OutPoint hash (char[32])
  D07E0DB403B52EC1B99EF2463B0EAA70571BDA151FFA2E5094A6C06273450916
 TX_IN[15] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[15] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[15] Script Sig (uchar[])
  00483045022100ABE72C3907F2E9FF8CAEC4EE5C0FE2955F1A6A1154A91CB534C8EE25F28E71F402203F33E7A76E5F5C180ECBEBD7A24D4041BBFC6D92E237CF281B477C0A2DC1BE4501473044022060695D0483A6F2F5A3C343F756AC2F3757B8046D28558F638FD6D1EEBFAFA39E022079DCF1374D216EEE5247F8A6CE1FF19ABBA66F4BE2DEBBEC9A6EDA940ECBC97B014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00ABE72C3907F2E9:FF8CAEC4EE5C0FE2
        955F1A6A1154A91C:B534C8EE25F28E71
        F4
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3F33E7A76E5F5C18:0ECBEBD7A24D4041
        BBFC6D92E237CF28:1B477C0A2DC1BE45
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        60695D0483A6F2F5:A3C343F756AC2F37
        57B8046D28558F63:8FD6D1EEBFAFA39E
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        79DCF1374D216EEE:5247F8A6CE1FF19A
        BBA66F4BE2DEBBEC:9A6EDA940ECBC97B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[15] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[16]
 TX_IN[16] OutPoint hash (char[32])
  89223EBF6CFE934B733DBD421421AC5D26E0D7153E946144FFB17E3C99F06F4A
 TX_IN[16] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[16] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[16] Script Sig (uchar[])
  004830450221009D42E86FB743E31FDBA316A74F75C7D8E8F205E804BDE991E29C827C74BD6BA302207E496B9ECD121D77094742F610ED00A9C860C74D9020F4C591343884B12EC008014730440220536A289EC43AAE8D2365C0B4027F1B1D212DF627685580326C869AD820CBC95202201B2DB9962BDEF9C225F9F82EE8944E172B20B1B102502A926AC33EAF4C385C57014C69522103D2276E5EC219F6EA987572D728640605840522B7F954DF9BDD0BE791755B24E62103C6B8B816B8BC771EF67720DE11092BD9717F8A2D62D2E0FD2161EC69952F362E21038AC1692718A04798E574F756F7CCF622953CE2C54FB6CD37384FACDE8077BE1553AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009D42E86FB743E3:1FDBA316A74F75C7
        D8E8F205E804BDE9:91E29C827C74BD6B
        A3
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        7E496B9ECD121D77:094742F610ED00A9
        C860C74D9020F4C5:91343884B12EC008
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        536A289EC43AAE8D:2365C0B4027F1B1D
        212DF62768558032:6C869AD820CBC952
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        1B2DB9962BDEF9C2:25F9F82EE8944E17
        2B20B1B102502A92:6AC33EAF4C385C57
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03D2276E5EC219F6:EA987572D7286406
        05840522B7F954DF:9BDD0BE791755B24
        E6
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13ot9PWnfwAdhCsYRrogij1W8PRUNMDqK9
    21: OP_DATA_0x21: compressed pub key
        03C6B8B816B8BC77:1EF67720DE11092B
        D9717F8A2D62D2E0:FD2161EC69952F36
        2E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LvvDbUUVFcsfB2Vzjocba7tyYMMV28LEE
    21: OP_DATA_0x21: compressed pub key
        038AC1692718A047:98E574F756F7CCF6
        22953CE2C54FB6CD:37384FACDE8077BE
        15
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    152K8q3B3j3ourf9xyQHkgUvVJL64uNQk6
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103D2276E5EC2:19F6EA987572D728
        640605840522B7F9:54DF9BDD0BE79175
        5B24E62103C6B8B8:16B8BC771EF67720
        DE11092BD9717F8A:2D62D2E0FD2161EC
        69952F362E21038A:C1692718A04798E5
        74F756F7CCF62295:3CE2C54FB6CD3738
        4FACDE8077BE1553:AE
        corresponding bitcoin address is:    3PqbcqdmzvJyJz4AyvwxJDqdboYDftu84e
 TX_IN[16] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[17]
 TX_IN[17] OutPoint hash (char[32])
  A54AC2A818BD960E50C3F645B361EF5EB2458C612ACE297E04782F54136845C0
 TX_IN[17] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[17] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[17] Script Sig (uchar[])
  00473044022047DFBEF2E8C09DF589E7100A9273CD632E1F726F3492814F1F60373F0BD66405022012C4AFB13203BACED7C4DC467BAEB3D726A028BF960345C58F791B4BF6C8862301483045022100CC66D84A116A20602E3D065DF490B2355B66DF119F226A46759BFC59E656B986022064B5ADF3F24472F59D939C9CEBD0BA7CEFD21FB25E6DDA56E486AEDF6B8A5902014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        47DFBEF2E8C09DF5:89E7100A9273CD63
        2E1F726F3492814F:1F60373F0BD66405
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        12C4AFB13203BACE:D7C4DC467BAEB3D7
        26A028BF960345C5:8F791B4BF6C88623
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00CC66D84A116A20:602E3D065DF490B2
        355B66DF119F226A:46759BFC59E656B9
        86
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        64B5ADF3F24472F5:9D939C9CEBD0BA7C
        EFD21FB25E6DDA56:E486AEDF6B8A5902
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[17] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[18]
 TX_IN[18] OutPoint hash (char[32])
  FFBBB8C83FAEF7BD235FC8E6ABA541019151AF4B9B059CD335BD4765F1A34AF6
 TX_IN[18] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[18] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[18] Script Sig (uchar[])
  00483045022100A998DB44684DEE08A7B6DF015F60B0D393C1556DB5F5F79ACCB36F3AE96815A002207EA2DC754296E758F6616BDE6E19D3D86DAF82843FF2E64E6FA2D2D36C912E6D014830450221009F3CCBC414C0A3566278F6A7F7CAFF1BE4B12FAF169F53F51C4588DF0C5A92A202203B9FF5046A8F1DED00ABF353CB8D55EF5700E03AC4C77C950B70CCC4B1B3F702014C69522103388F3AC4CA218087B9B3688DFD0EF04E811CD992812816DD04455631B03EA2C92103FD2006EF10F1230E1D76B4E91C89318C77307F089F99C757FCF58AB30AF741192102193580CD9FA0CB8F7B68B5D0916513E77A99073F4D132074A959C3BD5536394953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A998DB44684DEE:08A7B6DF015F60B0
        D393C1556DB5F5F7:9ACCB36F3AE96815
        A0
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        7EA2DC754296E758:F6616BDE6E19D3D8
        6DAF82843FF2E64E:6FA2D2D36C912E6D
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009F3CCBC414C0A3:566278F6A7F7CAFF
        1BE4B12FAF169F53:F51C4588DF0C5A92
        A2
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3B9FF5046A8F1DED:00ABF353CB8D55EF
        5700E03AC4C77C95:0B70CCC4B1B3F702
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03388F3AC4CA2180:87B9B3688DFD0EF0
        4E811CD992812816:DD04455631B03EA2
        C9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LgkDCYGnGPeJDvywhy9Lv9h7FrgLmnuFE
    21: OP_DATA_0x21: compressed pub key
        03FD2006EF10F123:0E1D76B4E91C8931
        8C77307F089F99C7:57FCF58AB30AF741
        19
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NQvvnv9vkN4oTCGsPrRofso4SPc4Avgou
    21: OP_DATA_0x21: compressed pub key
        02193580CD9FA0CB:8F7B68B5D0916513
        E77A99073F4D1320:74A959C3BD553639
        49
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MffbH5LNKb8QDL8tkhHjHdQwV2xsHK5Tk
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103388F3AC4CA:218087B9B3688DFD
        0EF04E811CD99281:2816DD04455631B0
        3EA2C92103FD2006:EF10F1230E1D76B4
        E91C89318C77307F:089F99C757FCF58A
        B30AF74119210219:3580CD9FA0CB8F7B
        68B5D0916513E77A:99073F4D132074A9
        59C3BD5536394953:AE
        corresponding bitcoin address is:    3JRdLNdygtezVAKz8yi3TDvUe8vXHkkZ8h
 TX_IN[18] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[19]
 TX_IN[19] OutPoint hash (char[32])
  EF088F714D83820981665735C91EB623D5ADFC73E3DED2D5C98890361AEB1E91
 TX_IN[19] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[19] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[19] Script Sig (uchar[])
  00483045022100C8D5FD94ADDA6BAEAA67985C0A583703F2080189892E928A46A3B9333AF8EC020220080F1EE526E8EE26504475621EDA63C7364A184BA13612973BC84BDCC5EB537A01483045022100B9CB42C6E7D6293AE8BF8F66B2D91E6D12A89D97CF5F9799864D9D941C564A7D022051B946431234C495B2A2B5148245B8483EAC23478AC6FD9BA12BB8F761C3C0AD014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C8D5FD94ADDA6B:AEAA67985C0A5837
        03F2080189892E92:8A46A3B9333AF8EC
        02
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        080F1EE526E8EE26:504475621EDA63C7
        364A184BA1361297:3BC84BDCC5EB537A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B9CB42C6E7D629:3AE8BF8F66B2D91E
        6D12A89D97CF5F97:99864D9D941C564A
        7D
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        51B946431234C495:B2A2B5148245B848
        3EAC23478AC6FD9B:A12BB8F761C3C0AD
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[19] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[20]
 TX_IN[20] OutPoint hash (char[32])
  795DBE1B3BAB625C890830AA1632470B7BBD061E938998BE91C45231844ECBAF
 TX_IN[20] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[20] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[20] Script Sig (uchar[])
  00483045022100B037751F027A6EE67EFDD1A8C1AF70CE1D26A8E2F5E56BEC2769FA9FBFE317C702206FA02C91427D4976E3797BC35A36F6C33CF015B3A6D592D00007C63B86FCE7F801483045022100985D79F174697B2FCC46F8DA1BD24A2FC1150B1A13AAE651D776A33E2BE834EB02201EB868FBC1BF7FB288DE662BB101AE903F64B8A3CD8D27AB43284AEA8ADD5F39014C695221036C2D3E276F1E435A187435B3DA17B395664CD81F9D94B4226A19DB3E81A1F80A2102FBD91FA9E1686F2865A091D49EFFA461EB9B4C0F01941305612B2A5856437B6B2102DF1E4CE39AF9F617245187F2572FCBE249841F8DEC681F1AA20D1135CD197DF853AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B037751F027A6E:E67EFDD1A8C1AF70
        CE1D26A8E2F5E56B:EC2769FA9FBFE317
        C7
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6FA02C91427D4976:E3797BC35A36F6C3
        3CF015B3A6D592D0:0007C63B86FCE7F8
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00985D79F174697B:2FCC46F8DA1BD24A
        2FC1150B1A13AAE6:51D776A33E2BE834
        EB
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        1EB868FBC1BF7FB2:88DE662BB101AE90
        3F64B8A3CD8D27AB:43284AEA8ADD5F39
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        036C2D3E276F1E43:5A187435B3DA17B3
        95664CD81F9D94B4:226A19DB3E81A1F8
        0A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19YuY2yWXVG1qHPFBEkyDPFM89QvfpRW54
    21: OP_DATA_0x21: compressed pub key
        02FBD91FA9E1686F:2865A091D49EFFA4
        61EB9B4C0F019413:05612B2A5856437B
        6B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16pCWsvTQJ91F7KBCuBK8NhV1noHe2TvyH
    21: OP_DATA_0x21: compressed pub key
        02DF1E4CE39AF9F6:17245187F2572FCB
        E249841F8DEC681F:1AA20D1135CD197D
        F8
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1DyL3mnjQEW7MPeBDcGpwswtjV9X1xvPMd
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221036C2D3E276F:1E435A187435B3DA
        17B395664CD81F9D:94B4226A19DB3E81
        A1F80A2102FBD91F:A9E1686F2865A091
        D49EFFA461EB9B4C:0F01941305612B2A
        5856437B6B2102DF:1E4CE39AF9F61724
        5187F2572FCBE249:841F8DEC681F1AA2
        0D1135CD197DF853:AE
        corresponding bitcoin address is:    37vEcoW9Qu1DxN5kZw1y99CDSF6QamonuX
 TX_IN[20] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[21]
 TX_IN[21] OutPoint hash (char[32])
  58E44C892A8FE49767E862A5A7231FEEE1A70B79996FA9C0B4824155FE0E9D5B
 TX_IN[21] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[21] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[21] Script Sig (uchar[])
  00483045022100C2F67BC95DDD625F2EA4BD06FD3A6F2A0247B33E65B3A3734C9B245C26115BA602203E95A5D6DE9261FFD2A5BAAF33C0E2A9D1E237A3CFF1F2415E5D2E872AB837E40147304402206518C9E84CF4A120DCA0E6D6F8105B7E5ADED3CE70858AAD72C0D7F4C269AF4F02205665BFE0A1E6A965E455FD7CB31A01D6F4A0F7E5388AC18FCA363F0ED333EA0C014C6952210295068487E4B0E59BA2ED0895D703AF6B45018C470D46E952DF56B30D371A0B322103457CC0C1447AA4373906D86508292AE941DA66B3FEFC70EBCF4CC34ED9A33A84210248173A7D08D007EF3E5819F4B0F972899170E334482E5FDB602FD94467552E2F53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C2F67BC95DDD62:5F2EA4BD06FD3A6F
        2A0247B33E65B3A3:734C9B245C26115B
        A6
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3E95A5D6DE9261FF:D2A5BAAF33C0E2A9
        D1E237A3CFF1F241:5E5D2E872AB837E4
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        6518C9E84CF4A120:DCA0E6D6F8105B7E
        5ADED3CE70858AAD:72C0D7F4C269AF4F
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        5665BFE0A1E6A965:E455FD7CB31A01D6
        F4A0F7E5388AC18F:CA363F0ED333EA0C
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0295068487E4B0E5:9BA2ED0895D703AF
        6B45018C470D46E9:52DF56B30D371A0B
        32
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MziXTMrVJi7zFbKQDLWSvCBuu3JkhFnuY
    21: OP_DATA_0x21: compressed pub key
        03457CC0C1447AA4:373906D86508292A
        E941DA66B3FEFC70:EBCF4CC34ED9A33A
        84
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Ng9PsrUFy8fMXQNJXvZDQsMxTyEe1Jb1F
    21: OP_DATA_0x21: compressed pub key
        0248173A7D08D007:EF3E5819F4B0F972
        899170E334482E5F:DB602FD94467552E
        2F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15KNq8grSv4jmMpdc5c4QYmSkU6ZMMrXpr
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210295068487E4:B0E59BA2ED0895D7
        03AF6B45018C470D:46E952DF56B30D37
        1A0B322103457CC0:C1447AA4373906D8
        6508292AE941DA66:B3FEFC70EBCF4CC3
        4ED9A33A84210248:173A7D08D007EF3E
        5819F4B0F9728991:70E334482E5FDB60
        2FD94467552E2F53:AE
        corresponding bitcoin address is:    3H9zRZzNUZKRG7HwqMwXEt3F984BZTvv94
 TX_IN[21] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[22]
 TX_IN[22] OutPoint hash (char[32])
  2B5F3E77D145F58691AB3A5DD3C270DF1DA763713AAB8F356C0B45B392FF7EC9
 TX_IN[22] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[22] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[22] Script Sig (uchar[])
  004730440220344F470A41A808AD3608E148BDE88991B94FF7688708E060AC3DAA9E91A00BBA0220062F5D3A952AA92CDDB7B5EFC43ABB55222D367EACF4382179B733EA2F686F4A014830450221008E887B6D1EA807C84ACE6690E4C7361DB98B9A391DA04D587D1FCA0BE95502FE02207BFE3238F55F2D2B996EBD68A2FCB168D970B9F4E6BECFD9B96A195DDEA68A9E014C695221033818ECDD8E48C9B6CD44EA219D017B237E1F8BA81C75C51B376F1E6C66AC1B6D210361750155318E7D76F95B8143DF3605C9B60B4C4C6BB0A5A3C38D75F4BD7238D621026E0FF504C01C048C065F76C5C19C108EEBD887FF6CF0742E4EECE298669C781C53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        344F470A41A808AD:3608E148BDE88991
        B94FF7688708E060:AC3DAA9E91A00BBA
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        062F5D3A952AA92C:DDB7B5EFC43ABB55
        222D367EACF43821:79B733EA2F686F4A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008E887B6D1EA807:C84ACE6690E4C736
        1DB98B9A391DA04D:587D1FCA0BE95502
        FE
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        7BFE3238F55F2D2B:996EBD68A2FCB168
        D970B9F4E6BECFD9:B96A195DDEA68A9E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        033818ECDD8E48C9:B6CD44EA219D017B
        237E1F8BA81C75C5:1B376F1E6C66AC1B
        6D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1F7hHYY3PN4kDBQZHAeTDVYtvBwFhQARm2
    21: OP_DATA_0x21: compressed pub key
        0361750155318E7D:76F95B8143DF3605
        C9B60B4C4C6BB0A5:A3C38D75F4BD7238
        D6
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1A9WuWkHFBUE5sEmdccas2dvcW2CgHCecM
    21: OP_DATA_0x21: compressed pub key
        026E0FF504C01C04:8C065F76C5C19C10
        8EEBD887FF6CF074:2E4EECE298669C78
        1C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Bum2P2SPCKiqbaTPjp9rTFBdGiZnRDs2M
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221033818ECDD8E:48C9B6CD44EA219D
        017B237E1F8BA81C:75C51B376F1E6C66
        AC1B6D2103617501:55318E7D76F95B81
        43DF3605C9B60B4C:4C6BB0A5A3C38D75
        F4BD7238D621026E:0FF504C01C048C06
        5F76C5C19C108EEB:D887FF6CF0742E4E
        ECE298669C781C53:AE
        corresponding bitcoin address is:    37y5fVth9kfPPX6dVLjcRyDedZ42GpGDY1
 TX_IN[22] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[23]
 TX_IN[23] OutPoint hash (char[32])
  93E4FBAB24CD78872717410AD42787897FD84FC247B4DBEF732A341D36579486
 TX_IN[23] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[23] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[23] Script Sig (uchar[])
  0047304402204A94589FC923F4D7905C59EF07DE3DFCF1A365B7590F223BA61A7024CEFD94FC0220765E0492AA8278B389D61A91795145C504BA5066D9F95A1A1DA82BC6FEE7D35901483045022100CD6A4EA60BB240A728599CFBC997014A3998F6619038B8B85B997D87F52F472D022047D821E4E12BA3E7DF9FE19015CB7DAFA6C1C334AF14B398CF5CE62D4F02B27A014C695221027477F5966D2CBF5D15FAE7F4058CBDD4E59A626FE02356C53E69FD0132CB124E2102444E86C8A5846D16B094CC2D571D922BB7B730C2483A050E288B9D2274D581492102CF142FC85738D4B27556E3F5AB0A203DE2B5C7E01A5891A6FE62A026D18D941A53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        4A94589FC923F4D7:905C59EF07DE3DFC
        F1A365B7590F223B:A61A7024CEFD94FC
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        765E0492AA8278B3:89D61A91795145C5
        04BA5066D9F95A1A:1DA82BC6FEE7D359
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00CD6A4EA60BB240:A728599CFBC99701
        4A3998F6619038B8:B85B997D87F52F47
        2D
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        47D821E4E12BA3E7:DF9FE19015CB7DAF
        A6C1C334AF14B398:CF5CE62D4F02B27A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        027477F5966D2CBF:5D15FAE7F4058CBD
        D4E59A626FE02356:C53E69FD0132CB12
        4E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1G9ftKrpAhzGZcsayzu7bCTpiJw95xPXqp
    21: OP_DATA_0x21: compressed pub key
        02444E86C8A5846D:16B094CC2D571D92
        2BB7B730C2483A05:0E288B9D2274D581
        49
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1PGi8Fcn4FXRpDDUQExvn4h4h57MSYzXJ4
    21: OP_DATA_0x21: compressed pub key
        02CF142FC85738D4:B27556E3F5AB0A20
        3DE2B5C7E01A5891:A6FE62A026D18D94
        1A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    166Unj9Z2ckUDR2RbjSHSsgkyvVFg4YdZa
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221027477F5966D:2CBF5D15FAE7F405
        8CBDD4E59A626FE0:2356C53E69FD0132
        CB124E2102444E86:C8A5846D16B094CC
        2D571D922BB7B730:C2483A050E288B9D
        2274D581492102CF:142FC85738D4B275
        56E3F5AB0A203DE2:B5C7E01A5891A6FE
        62A026D18D941A53:AE
        corresponding bitcoin address is:    3JGwwrbUV2BcQrayrxBMzVoNaG54f5Stsb
 TX_IN[23] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[24]
 TX_IN[24] OutPoint hash (char[32])
  8E9CFBC64BAE5A5FE1DECFB0D790F4A27D00FB49FBA0371E50366901AE49630F
 TX_IN[24] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[24] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[24] Script Sig (uchar[])
  00483045022100A002CFDB48C4948417D4E5BD552257EB120D16465D43E07C7DACB2F41D13BA35022042FB6315ED7CB3F62F521D648AE8C152E0563C36A2E783A09C8A76284456FC01014730440220560E1D00C00DF2A774B5E08A30C1C5E44DD372EE7672DF13710DDE4EC44F75410220796C03AD09D69D4B028441AD4427C70C9CCE561606EA4D68403EB14F504C1832014C6952210266CB4ED4029107504FFBA28F3AA93CFB7D7197D5885C1E543521D2E404B73855210391C91DEA1A4F5D4B62FCDFD27447D4EBC9D6302CCAA0D19FB119BD23D32F608B2103BF47EC95773FE5F52C61EB99F3B2812D1B3851A98D1567E81FD3071260A6A02853AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A002CFDB48C494:8417D4E5BD552257
        EB120D16465D43E0:7C7DACB2F41D13BA
        35
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        42FB6315ED7CB3F6:2F521D648AE8C152
        E0563C36A2E783A0:9C8A76284456FC01
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        560E1D00C00DF2A7:74B5E08A30C1C5E4
        4DD372EE7672DF13:710DDE4EC44F7541
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        796C03AD09D69D4B:028441AD4427C70C
        9CCE561606EA4D68:403EB14F504C1832
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0266CB4ED4029107:504FFBA28F3AA93C
        FB7D7197D5885C1E:543521D2E404B738
        55
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EgJYkBKC6JsXLX76hSjjSfjJpmpLw4Zgm
    21: OP_DATA_0x21: compressed pub key
        0391C91DEA1A4F5D:4B62FCDFD27447D4
        EBC9D6302CCAA0D1:9FB119BD23D32F60
        8B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KHEtmBcG2EBizJZrm2Ma955XttSAz77oR
    21: OP_DATA_0x21: compressed pub key
        03BF47EC95773FE5:F52C61EB99F3B281
        2D1B3851A98D1567:E81FD3071260A6A0
        28
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Fbbmfxk6DzufX3pSrq6y9Xe1TNfEZxU6x
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210266CB4ED402:9107504FFBA28F3A
        A93CFB7D7197D588:5C1E543521D2E404
        B73855210391C91D:EA1A4F5D4B62FCDF
        D27447D4EBC9D630:2CCAA0D19FB119BD
        23D32F608B2103BF:47EC95773FE5F52C
        61EB99F3B2812D1B:3851A98D1567E81F
        D3071260A6A02853:AE
        corresponding bitcoin address is:    3G9fcLR1emqxm5hEcPVbr6rGCyY8VZVoEG
 TX_IN[24] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[25]
 TX_IN[25] OutPoint hash (char[32])
  4D23E0B25CE239AD18E6B1DB460F0DC6B48D5986E3C62D4CC309AB1BA2997CC4
 TX_IN[25] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[25] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[25] Script Sig (uchar[])
  00473044022010C40410FFAFDB1A5781C6FE92834AA8904C2ED1DB17A32B4EBBF8A13AA3BD9E022041D9567D93D9E73C2797AE609A78C8396845A9711562B7DCE6E7511CE23335050147304402200F6AD257007E83C2B923DA99CA845B21926922C129699D8A9A1B384D83F7A7B102200D3D08BF4CF5EDF3F87DABE754FE9379D309A4F31EE54BD7D3D96C804ECF217C014C6952210396662D263E15A0956EA08BCB3D7BFD5808DF4053E130395DB00AFC020A68A18E2103334F6D247738AC1C5BB3E39E76FEFC70F0E433E31D545B2875871AD18F0FE3E72102B3574980A58A4684B9EC7E4FBD1EC3A0AA025D061CFDDF2362468B0E5890556553AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        10C40410FFAFDB1A:5781C6FE92834AA8
        904C2ED1DB17A32B:4EBBF8A13AA3BD9E
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        41D9567D93D9E73C:2797AE609A78C839
        6845A9711562B7DC:E6E7511CE2333505
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        0F6AD257007E83C2:B923DA99CA845B21
        926922C129699D8A:9A1B384D83F7A7B1
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        0D3D08BF4CF5EDF3:F87DABE754FE9379
        D309A4F31EE54BD7:D3D96C804ECF217C
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0396662D263E15A0:956EA08BCB3D7BFD
        5808DF4053E13039:5DB00AFC020A68A1
        8E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17MhbbPKDJv8nUharKe1XTHrRHM4PgPyFx
    21: OP_DATA_0x21: compressed pub key
        03334F6D247738AC:1C5BB3E39E76FEFC
        70F0E433E31D545B:2875871AD18F0FE3
        E7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MzWATzNCwfsLqzHhtyMr1g6XkzSSCjU5F
    21: OP_DATA_0x21: compressed pub key
        02B3574980A58A46:84B9EC7E4FBD1EC3
        A0AA025D061CFDDF:2362468B0E589055
        65
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EikTtm6HvBH6yg1dhQ6JDEEK67FNC5zKo
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210396662D263E:15A0956EA08BCB3D
        7BFD5808DF4053E1:30395DB00AFC020A
        68A18E2103334F6D:247738AC1C5BB3E3
        9E76FEFC70F0E433:E31D545B2875871A
        D18F0FE3E72102B3:574980A58A4684B9
        EC7E4FBD1EC3A0AA:025D061CFDDF2362
        468B0E5890556553:AE
        corresponding bitcoin address is:    3MZ1UNfsv57xUUjMMEPgqGyDoau9Rduqbv
 TX_IN[25] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[26]
 TX_IN[26] OutPoint hash (char[32])
  D4C4A255D438E9287A5E672657F599C3A4BEFE4CE9A77F5C87F4B598D0F6B064
 TX_IN[26] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[26] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[26] Script Sig (uchar[])
  00483045022100EC050E16A78ABC450B2C419D084B301B07A3C50CE777C6E77FDC72EC86C6EF880220553CD32A14FF8FF4A0834AFD81CA7EF10BA9CFCD3BFAE67931DF7665C757C4B7014730440220088D84AB5E97619B31275B6330759C270E480CBAC87FF4458841465C0D8CDD230220385524F7B206EFB53DD59C8EF041C33C632183A7483F58C77BF9C5AE748B1DE5014C695221038509F606CD178E18F43B5870A75B3FE3F76DBE53AD176BCF68C281AC9CC03AB12102F7D31F0C6B1116F305AADEBD51E975AE7459BB3696B325998C84609FD9F467A121030CB5492DC429F20EA558AFD71D855914892D90E539D06567889EFE34FEF70B5153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00EC050E16A78ABC:450B2C419D084B30
        1B07A3C50CE777C6:E77FDC72EC86C6EF
        88
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        553CD32A14FF8FF4:A0834AFD81CA7EF1
        0BA9CFCD3BFAE679:31DF7665C757C4B7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        088D84AB5E97619B:31275B6330759C27
        0E480CBAC87FF445:8841465C0D8CDD23
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        385524F7B206EFB5:3DD59C8EF041C33C
        632183A7483F58C7:7BF9C5AE748B1DE5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        038509F606CD178E:18F43B5870A75B3F
        E3F76DBE53AD176B:CF68C281AC9CC03A
        B1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FGEqKBmQVtjkHGgxs2AgW4LiEXamc33FV
    21: OP_DATA_0x21: compressed pub key
        02F7D31F0C6B1116:F305AADEBD51E975
        AE7459BB3696B325:998C84609FD9F467
        A1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CD64TXHkgoLh1rMgFWf7sJfJJMWyMEyRW
    21: OP_DATA_0x21: compressed pub key
        030CB5492DC429F2:0EA558AFD71D8559
        14892D90E539D065:67889EFE34FEF70B
        51
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13YHBCHon85LJZwPrT8fnQDy6NUbiuREFr
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221038509F606CD:178E18F43B5870A7
        5B3FE3F76DBE53AD:176BCF68C281AC9C
        C03AB12102F7D31F:0C6B1116F305AADE
        BD51E975AE7459BB:3696B325998C8460
        9FD9F467A121030C:B5492DC429F20EA5
        58AFD71D85591489:2D90E539D0656788
        9EFE34FEF70B5153:AE
        corresponding bitcoin address is:    3KkGWQCRCZZYjwqcPhQidc5mQfQ45m5HuV
 TX_IN[26] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[27]
 TX_IN[27] OutPoint hash (char[32])
  851CEE6FB51ACCB60A1421F95A47D1682DE48254B413947B20AE7552C6F0E040
 TX_IN[27] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[27] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[27] Script Sig (uchar[])
  00483045022100D63532CD8183DC085951BD15619F8118C2D062D106969D0B8FFEC4A225138D4C0220302F88FF59D7F0CFA6B2EBA08F72475711F2C05CE583C65602448DAB5AE6F68001473044022070D5421EA551C442045E68EC951F9DF88BB1D52A8397BFB190E7DF4FD1593B75022010768C86A823B8FA0CE0F86F45FFEBF73AA5A32C34B1D615E66AE028D7DEF8B2014C69522103A07D7555E8A4362DB1ECD4FCC6E80977C91175E74913A93A0BFA814929D27B5B210359D403B7C9CCA12695CBDC8AC3F6A9DE84C82E33F53F2169614B9EB7EE736857210243AAB8B3198D62688A9197E2AFD1524E82DFF981058CB51FA924EBD0D6ABBABE53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00D63532CD8183DC:085951BD15619F81
        18C2D062D106969D:0B8FFEC4A225138D
        4C
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        302F88FF59D7F0CF:A6B2EBA08F724757
        11F2C05CE583C656:02448DAB5AE6F680
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        70D5421EA551C442:045E68EC951F9DF8
        8BB1D52A8397BFB1:90E7DF4FD1593B75
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        10768C86A823B8FA:0CE0F86F45FFEBF7
        3AA5A32C34B1D615:E66AE028D7DEF8B2
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03A07D7555E8A436:2DB1ECD4FCC6E809
        77C91175E74913A9:3A0BFA814929D27B
        5B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1mWq3GQgjtryxRZJnEdEd8qizgpHbn9ms
    21: OP_DATA_0x21: compressed pub key
        0359D403B7C9CCA1:2695CBDC8AC3F6A9
        DE84C82E33F53F21:69614B9EB7EE7368
        57
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MpUWzNa4FmqoacRAjugJHYkoR6XynguTJ
    21: OP_DATA_0x21: compressed pub key
        0243AAB8B3198D62:688A9197E2AFD152
        4E82DFF981058CB5:1FA924EBD0D6ABBA
        BE
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19zyc31e9nerBSDdbeTUnrfZo62pH3HJQy
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103A07D7555E8:A4362DB1ECD4FCC6
        E80977C91175E749:13A93A0BFA814929
        D27B5B210359D403:B7C9CCA12695CBDC
        8AC3F6A9DE84C82E:33F53F2169614B9E
        B7EE736857210243:AAB8B3198D62688A
        9197E2AFD1524E82:DFF981058CB51FA9
        24EBD0D6ABBABE53:AE
        corresponding bitcoin address is:    3CyvqrEH8hxovkjPo6yFiKEauKfRxvepLh
 TX_IN[27] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[28]
 TX_IN[28] OutPoint hash (char[32])
  6DEE660791B7EAF66762A830F85B3FD9D7A756CEF01E8725CBEDEE239C9F2F51
 TX_IN[28] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[28] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[28] Script Sig (uchar[])
  00483045022100C0558B9371A5196DDC84856AB5BD1508C082913FD7E30A0AB69F12CEA2A8340402202E57D6DECACB420BF17FD2B0A4788364DE4F101CB88D0CACACF6FC4AF91E4AC20147304402204015EDECDA85111793107EB38E4F0F55C83BA2742B3D6620B98B9686399444530220275E09FBA9D0A0B00639794B4FB20AFE83EBEC1199FFFD91D95F975EC438033F014C69522102DD06D0872711A0D4CC74F7531F5B0429DC325B6B0D27DD34F4C20B2B9FAF7A942103DC77ACD9E030773D6C975A5ED9BF2C37E62164164A05FB82F16E05EA5510F13221036EDA4AFB73EE3CF388A2CDDEA2822ED73AE61AEB84E33AC0257907084A6FE78D53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C0558B9371A519:6DDC84856AB5BD15
        08C082913FD7E30A:0AB69F12CEA2A834
        04
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        2E57D6DECACB420B:F17FD2B0A4788364
        DE4F101CB88D0CAC:ACF6FC4AF91E4AC2
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        4015EDECDA851117:93107EB38E4F0F55
        C83BA2742B3D6620:B98B968639944453
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        275E09FBA9D0A0B0:0639794B4FB20AFE
        83EBEC1199FFFD91:D95F975EC438033F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02DD06D0872711A0:D4CC74F7531F5B04
        29DC325B6B0D27DD:34F4C20B2B9FAF7A
        94
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1BrhG12HaSxmyvJiaN3JaHpGRdCMeTmD2J
    21: OP_DATA_0x21: compressed pub key
        03DC77ACD9E03077:3D6C975A5ED9BF2C
        37E62164164A05FB:82F16E05EA5510F1
        32
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CDxcQ7X57FA6y3BxmqUt3TodFut7HMhxK
    21: OP_DATA_0x21: compressed pub key
        036EDA4AFB73EE3C:F388A2CDDEA2822E
        D73AE61AEB84E33A:C0257907084A6FE7
        8D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NyPM9gsz1v5NjabtFiHLe6CvRVhf5wGwG
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102DD06D08727:11A0D4CC74F7531F
        5B0429DC325B6B0D:27DD34F4C20B2B9F
        AF7A942103DC77AC:D9E030773D6C975A
        5ED9BF2C37E62164:164A05FB82F16E05
        EA5510F13221036E:DA4AFB73EE3CF388
        A2CDDEA2822ED73A:E61AEB84E33AC025
        7907084A6FE78D53:AE
        corresponding bitcoin address is:    3LkAaBr5yA8niHFZgGU5we5ze8PgoEPiCC
 TX_IN[28] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[29]
 TX_IN[29] OutPoint hash (char[32])
  9D4FDCA365CF7BF7FE4B00E003AD2301FD78C88894172B9459E99960CA37397C
 TX_IN[29] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[29] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[29] Script Sig (uchar[])
  00473044022000D0C1980BE4576B5184F1AD92D42072782221E4C20CE2EBBD287F36E444E2B102201D7B12E7AD5569103617EC842EB99195BA85D4B9E1545734C536AEBC8B410E3F014730440220705B61547EFCBD90DF1D2AF6E1D4717578B4F2044A6549C66D39094FE03160EC02204F67EE7DD4D887BB4036A321EAE1A65341F0FF5A47EA900163E9BFC18FED070F014C69522102AAAFF396F401EAF6A59128D96BCB3717EC330450159CF0F55E2005ECFDF2C28B21033C53EC3DFF4B951505EB9DE532DF5F6A212FB1558F81B31E89C2205CB53C38E821022CF04934DF9FDC7324B4CBB504E4ED558864D0136682CB33ED3D596DA4BFF20553AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        00D0C1980BE4576B:5184F1AD92D42072
        782221E4C20CE2EB:BD287F36E444E2B1
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        1D7B12E7AD556910:3617EC842EB99195
        BA85D4B9E1545734:C536AEBC8B410E3F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        705B61547EFCBD90:DF1D2AF6E1D47175
        78B4F2044A6549C6:6D39094FE03160EC
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4F67EE7DD4D887BB:4036A321EAE1A653
        41F0FF5A47EA9001:63E9BFC18FED070F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02AAAFF396F401EA:F6A59128D96BCB37
        17EC330450159CF0:F55E2005ECFDF2C2
        8B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13AmN72noaSiHvuWPs8h5VbJ1yoU4MTyUi
    21: OP_DATA_0x21: compressed pub key
        033C53EC3DFF4B95:1505EB9DE532DF5F
        6A212FB1558F81B3:1E89C2205CB53C38
        E8
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MaLEDBeHKVujRGcMkF2CC5z9fndgsJBha
    21: OP_DATA_0x21: compressed pub key
        022CF04934DF9FDC:7324B4CBB504E4ED
        558864D0136682CB:33ED3D596DA4BFF2
        05
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KY5eY2tCJ5Wc9k5Uxd9FRHsUnsJPzsBmk
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102AAAFF396F4:01EAF6A59128D96B
        CB3717EC33045015:9CF0F55E2005ECFD
        F2C28B21033C53EC:3DFF4B951505EB9D
        E532DF5F6A212FB1:558F81B31E89C220
        5CB53C38E821022C:F04934DF9FDC7324
        B4CBB504E4ED5588:64D0136682CB33ED
        3D596DA4BFF20553:AE
        corresponding bitcoin address is:    3GZWpr3cw3sVeALaRoiXb8uZUzNFxBBRna
 TX_IN[29] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[30]
 TX_IN[30] OutPoint hash (char[32])
  C15F9932FDA30FBF7FF53E754115C5C173467A6E56E0EB5AB60038EDEBA916E3
 TX_IN[30] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[30] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[30] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C1E4FC433C98B3:E4C081CB2D6FA776
        610A14A8FAF48DA4:ADFC051EDEC12276
        0A
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6AFB23075385F62A:5E00D86BF8BF8EF0
        224F61C611FE8080:E21892F04AA0557F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        0086A3160D3477F1:7F9603B5C96150AD
        343B855A11964641:380C67F8E082CECF
        EF
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6CF8DB3FF098548D:F2DD62EE744659A9
        E844C0D85058142C:D2B791B26FBF9161
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        039E55923C50689D:6BD52CC9CF957C1E
        1400F4FB0EDE5EA1:4BDE03DD51A71C3C
        86
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Mretd3YBAw2mtig78pYXDTeT8TjGR8Cek
    21: OP_DATA_0x21: compressed pub key
        03AD355AA17736B5:69BA3955B8625729
        40825646615450D9:61C3D2B9221150F3
        E7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MNiAUhoUzGCvmYgKFuGEGdideFuwfhgtm
    21: OP_DATA_0x21: compressed pub key
        02F08F166225B2D3:8F352013BA3D4BB4
        DEA158867A2D3297:957AA3A983D79752
        83
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KoSWMJdP3ZS35AmZVkYvgNrg1Umdt39Su
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221039E55923C50:689D6BD52CC9CF95
        7C1E1400F4FB0EDE:5EA14BDE03DD51A7
        1C3C862103AD355A:A17736B569BA3955
        B862572940825646:615450D961C3D2B9
        221150F3E72102F0:8F166225B2D38F35
        2013BA3D4BB4DEA1:58867A2D3297957A
        A3A983D797528353:AE
        corresponding bitcoin address is:    3DBpG6YAQHws4ntYbwvV1S9tAyWJvYMpso
 TX_IN[30] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[31]
 TX_IN[31] OutPoint hash (char[32])
  DB8F57136E0C053BC626B960EF8E967BCF372517369FF4F25BD90BCF3A54A19D
 TX_IN[31] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[31] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[31] Script Sig (uchar[])
  00483045022100EDA7912A3D32CB17B29F9EB3E6EF39582162A07CA001E4BCCA5E874FBF353D2F0220522BB31F3A587E6835B7C7F34C3963DC65AE4A81D892C8F27335A077F4BE28E501473044022020D5CEB36171C5B147C9C4694DA49CE3DEC3DDA18A93B54F793C368ADD84B1C5022023D8DFC56C3FC8B897E168D6CAADDA64CD21AC76EC6F24ABFAD4F3B6A92DEA69014C695221038862C3E45BF749AEF668BF6F96FF823E695FDEE5FC23A487B47FA8529140932F21035BB69C490858F66E0A900FC7E11BFEC9F9900493F4C8AFE516BC60E82C0B0A412102C742942B451CD2C2E9BE61543324A43ECC597CD2B16B70C07884BF4812203ACE53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00EDA7912A3D32CB:17B29F9EB3E6EF39
        582162A07CA001E4:BCCA5E874FBF353D
        2F
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        522BB31F3A587E68:35B7C7F34C3963DC
        65AE4A81D892C8F2:7335A077F4BE28E5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        20D5CEB36171C5B1:47C9C4694DA49CE3
        DEC3DDA18A93B54F:793C368ADD84B1C5
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        23D8DFC56C3FC8B8:97E168D6CAADDA64
        CD21AC76EC6F24AB:FAD4F3B6A92DEA69
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        038862C3E45BF749:AEF668BF6F96FF82
        3E695FDEE5FC23A4:87B47FA852914093
        2F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16W6WYtsnStyTyVykw7z2pk9RWozYtCBwn
    21: OP_DATA_0x21: compressed pub key
        035BB69C490858F6:6E0A900FC7E11BFE
        C9F9900493F4C8AF:E516BC60E82C0B0A
        41
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17NMg82gUs8cqdMkN8fBu1iUSeR5jJ39Yx
    21: OP_DATA_0x21: compressed pub key
        02C742942B451CD2:C2E9BE61543324A4
        3ECC597CD2B16B70:C07884BF4812203A
        CE
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1G3n3nUHebV4srRsAJJ2oNyusjKTBjyCSd
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221038862C3E45B:F749AEF668BF6F96
        FF823E695FDEE5FC:23A487B47FA85291
        40932F21035BB69C:490858F66E0A900F
        C7E11BFEC9F99004:93F4C8AFE516BC60
        E82C0B0A412102C7:42942B451CD2C2E9
        BE61543324A43ECC:597CD2B16B70C078
        84BF4812203ACE53:AE
        corresponding bitcoin address is:    3JXHEB1AsofDJpAHGbUuorVpTuzVtJxuiF
 TX_IN[31] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[32]
 TX_IN[32] OutPoint hash (char[32])
  407F70BA5DF54C2F64C98FF58FF122B01A6B8E45AFF094425DE5613B62DA82F9
 TX_IN[32] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[32] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[32] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        671456B49F91FFF7:522B8C74EF05E73D
        5C8AC1C56861A89A:DE47E941C31CE15A
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        15520381334673AF:E1F5680567D0EA41
        1A2FC61DA7B84E35:98D33CA952FDF44D
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B64A2B03F1773F:3EC539D2445A9506
        3703C5B15140C3FB:D3A93E4FE45315D6
        69
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        7B2887D3901DF357:71D7441E400C6B79
        C825D6501A7DBBE8:FB8074C0167C5487
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[32] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[33]
 TX_IN[33] OutPoint hash (char[32])
  D9E1356D2D750AED3415D3F65BA4614EF619E248876F68740EE36ED269D198F2
 TX_IN[33] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[33] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[33] Script Sig (uchar[])
  00473044022027114826117ECFC293D9F39C825BB1A1480CC7EF94556747ADC3CC20A45F0369022006E8351B015F1BDCE8B6A24E437E54FC6EF877E9967192B42078B9D6110DB23301483045022100D646FDE78D2F8FBE0D9A4BDDE769E46606A5CAFDE5BEF6B370A3F4FAA53E5BF1022043BBC2143E34C7E863C4FCD1C77F3C0395AF246EF8ECAEC2AE3CD54CEEA7E4C9014C6952210350639F217AC02C1024755FD468C4C03B328C4170A36E01C2198E7A31C30FE2BE2102C39ABD129B6377BDEED0AE97366D6E317EE7DB3249FDE711B9844284701C0A7B21030B4EFD19A3845DE78D25FA3470E44F28F9B52DFA779E470BEFDCCFEC0CBBAB8653AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        27114826117ECFC2:93D9F39C825BB1A1
        480CC7EF94556747:ADC3CC20A45F0369
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        06E8351B015F1BDC:E8B6A24E437E54FC
        6EF877E9967192B4:2078B9D6110DB233
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00D646FDE78D2F8F:BE0D9A4BDDE769E4
        6606A5CAFDE5BEF6:B370A3F4FAA53E5B
        F1
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        43BBC2143E34C7E8:63C4FCD1C77F3C03
        95AF246EF8ECAEC2:AE3CD54CEEA7E4C9
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0350639F217AC02C:1024755FD468C4C0
        3B328C4170A36E01:C2198E7A31C30FE2
        BE
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1H3D4gYGdXKjT9GMGUJtm9buFu2TUwFfDs
    21: OP_DATA_0x21: compressed pub key
        02C39ABD129B6377:BDEED0AE97366D6E
        317EE7DB3249FDE7:11B9844284701C0A
        7B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1DfpMbs4jUSM1ZXgiiNGzAENWs5tVre1DF
    21: OP_DATA_0x21: compressed pub key
        030B4EFD19A3845D:E78D25FA3470E44F
        28F9B52DFA779E47:0BEFDCCFEC0CBBAB
        86
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1PgxE28Qf3sx4UbuHmaQMpnGfxCPB6ednP
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210350639F217A:C02C1024755FD468
        C4C03B328C4170A3:6E01C2198E7A31C3
        0FE2BE2102C39ABD:129B6377BDEED0AE
        97366D6E317EE7DB:3249FDE711B98442
        84701C0A7B21030B:4EFD19A3845DE78D
        25FA3470E44F28F9:B52DFA779E470BEF
        DCCFEC0CBBAB8653:AE
        corresponding bitcoin address is:    3MSfkNGWhAa1D7ARRoB5inL75Bb6fvjt1Y
 TX_IN[33] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[34]
 TX_IN[34] OutPoint hash (char[32])
  D7370DF05A38810402C52CA3ABE162513E2FCDC3E8965995C773039679D64700
 TX_IN[34] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[34] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[34] Script Sig (uchar[])
  00483045022100942CE477CF69789B113D176ED14978AE802CE096A3454FA36F0728EA5370690902200A48C2AE4DA1E5CE1E3EA85CEC694D52688D78FF1B0BF669C8F47B6A1FF5461B01483045022100889C0895FD791300F6D4253E4E4016A8D45C1192366BC3CF3A306C237B9A27F702207551569980EC193560229FADF9D38196838DE8251F88F6E28DD9B27737B793D4014C6952210359FB132E3DE774922B521E095EE1E2E9430B3B8035596063EC5B5E502BD7588E2103B28FB6C56AA89227E0FC9B5127D58719B00BAC5EEE40DB62385602C06BABB58D21035A839988EEDAC1005D70FEF316637772EBAEAA0F7D25D4A7F86F2B81CF540F8753AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00942CE477CF6978:9B113D176ED14978
        AE802CE096A3454F:A36F0728EA537069
        09
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0A48C2AE4DA1E5CE:1E3EA85CEC694D52
        688D78FF1B0BF669:C8F47B6A1FF5461B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00889C0895FD7913:00F6D4253E4E4016
        A8D45C1192366BC3:CF3A306C237B9A27
        F7
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        7551569980EC1935:60229FADF9D38196
        838DE8251F88F6E2:8DD9B27737B793D4
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0359FB132E3DE774:922B521E095EE1E2
        E9430B3B80355960:63EC5B5E502BD758
        8E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1B3LEmmvnZPLchBuEZz8KauWbrSFL2JcrL
    21: OP_DATA_0x21: compressed pub key
        03B28FB6C56AA892:27E0FC9B5127D587
        19B00BAC5EEE40DB:62385602C06BABB5
        8D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KnACNo7jXjki5SPzBPd1ydX4iV4TdA7bi
    21: OP_DATA_0x21: compressed pub key
        035A839988EEDAC1:005D70FEF3166377
        72EBAEAA0F7D25D4:A7F86F2B81CF540F
        87
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1mDjTeUESp2TdYNj87xTSEnQhsHDqaZY9
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210359FB132E3D:E774922B521E095E
        E1E2E9430B3B8035:596063EC5B5E502B
        D7588E2103B28FB6:C56AA89227E0FC9B
        5127D58719B00BAC:5EEE40DB62385602
        C06BABB58D21035A:839988EEDAC1005D
        70FEF316637772EB:AEAA0F7D25D4A7F8
        6F2B81CF540F8753:AE
        corresponding bitcoin address is:    3Frr8yHpJWqJqdxUyrobQcTFy2vD7xhnZx
 TX_IN[34] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[35]
 TX_IN[35] OutPoint hash (char[32])
  D5D6FEF8256795D68BA454032DCB525FED43388A93808A024001216EC8CE9C72
 TX_IN[35] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[35] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[35] Script Sig (uchar[])
  00483045022100E613C296C86BC5C1B191AE1F2EC7B2FF5D1CDE6A4954BF2911EBF53471AFDC7402206435BEB1204913F057E3A9C4C42AC9DC472BFB047E08E4E483D5A8990846355E0147304402205301039E7AC952D03FBD786BCDD1C3BDE85EFA030B018DBC0B0D7EFF591B4C1902205D12A86BE89FD44A1E1EBD7DA366927E364B52887574E641AA571693B4CAD1AC014C69522103A66487D61047687517536F2C0E585EBD88E5E444CD308D61A7364557BD8D08372102EEA46C189742CB5727A833607A17F415741153E16EC788A7E9F1AD307A27F0AF21020F08D220D4DE9116A190EAD504A7BC425A7AAC42A56281DD105B79AAEA79285453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00E613C296C86BC5:C1B191AE1F2EC7B2
        FF5D1CDE6A4954BF:2911EBF53471AFDC
        74
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6435BEB1204913F0:57E3A9C4C42AC9DC
        472BFB047E08E4E4:83D5A8990846355E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        5301039E7AC952D0:3FBD786BCDD1C3BD
        E85EFA030B018DBC:0B0D7EFF591B4C19
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        5D12A86BE89FD44A:1E1EBD7DA366927E
        364B52887574E641:AA571693B4CAD1AC
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03A66487D6104768:7517536F2C0E585E
        BD88E5E444CD308D:61A7364557BD8D08
        37
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    121qDxhS1ShEuVjwMFFBcV5j8GYxZrnGPv
    21: OP_DATA_0x21: compressed pub key
        02EEA46C189742CB:5727A833607A17F4
        15741153E16EC788:A7E9F1AD307A27F0
        AF
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1P6yaLgnKbSqXopkoXvRRXVeanR7Kr83HY
    21: OP_DATA_0x21: compressed pub key
        020F08D220D4DE91:16A190EAD504A7BC
        425A7AAC42A56281:DD105B79AAEA7928
        54
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1SpEVonjvC7rUZDRL8HnFjpN7LJAWafMu
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103A66487D610:47687517536F2C0E
        585EBD88E5E444CD:308D61A7364557BD
        8D08372102EEA46C:189742CB5727A833
        607A17F415741153:E16EC788A7E9F1AD
        307A27F0AF21020F:08D220D4DE9116A1
        90EAD504A7BC425A:7AAC42A56281DD10
        5B79AAEA79285453:AE
        corresponding bitcoin address is:    3QCBidDFZezoDBv26zwWxXjSjBmJMkrr9m
 TX_IN[35] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[36]
 TX_IN[36] OutPoint hash (char[32])
  613EEE2D2006D80F64D4BDC301B1AFA03E7ED56FCFC165DF9CD85C0F18D1191C
 TX_IN[36] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[36] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[36] Script Sig (uchar[])
  00483045022100EA200043A063E7905FF75957FE19CACD18C1445C855291DA48FA172C8B28F94302201FE276411CADF464E6559F426471E04282A83FFC4435CAC0D1779CAA5C1A5A0A014830450221008501FFFA7F67E6E87633463326348C85D79AEF128AF08CC683E960E973E40CB0022065CC0EA84237F8802829E57A4995C8904CE032E277BF02A7570E177101D6C0B7014C6952210250D8643311BBE223988D28528F2524034A4A095542EE8E45AE380424DD65E9102103E6B46BEA3BAEE7ACF8BA01CD3AEA5494A64D68A4B093094681DE87DEA2BD5A0A2103D40A538AF2B60CA7D13CEAFC2968CDFF7F33AFDBC85EEEF17DDE72E5E793A14253AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00EA200043A063E7:905FF75957FE19CA
        CD18C1445C855291:DA48FA172C8B28F9
        43
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        1FE276411CADF464:E6559F426471E042
        82A83FFC4435CAC0:D1779CAA5C1A5A0A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008501FFFA7F67E6:E87633463326348C
        85D79AEF128AF08C:C683E960E973E40C
        B0
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        65CC0EA84237F880:2829E57A4995C890
        4CE032E277BF02A7:570E177101D6C0B7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0250D8643311BBE2:23988D28528F2524
        034A4A095542EE8E:45AE380424DD65E9
        10
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1P5BuGkBHfH7s6DnRzQ61BJZsAUUxBoFts
    21: OP_DATA_0x21: compressed pub key
        03E6B46BEA3BAEE7:ACF8BA01CD3AEA54
        94A64D68A4B09309:4681DE87DEA2BD5A
        0A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1DpMo3CYyRcmTttdBbD2bdCNRCkrzpvM4H
    21: OP_DATA_0x21: compressed pub key
        03D40A538AF2B60C:A7D13CEAFC2968CD
        FF7F33AFDBC85EEE:F17DDE72E5E793A1
        42
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LeVFvidPuD2FNQQHCXcp9PnBjbcGvTQoA
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210250D8643311:BBE223988D28528F
        2524034A4A095542:EE8E45AE380424DD
        65E9102103E6B46B:EA3BAEE7ACF8BA01
        CD3AEA5494A64D68:A4B093094681DE87
        DEA2BD5A0A2103D4:0A538AF2B60CA7D1
        3CEAFC2968CDFF7F:33AFDBC85EEEF17D
        DE72E5E793A14253:AE
        corresponding bitcoin address is:    3DCN6PvMq8QmPDQ655QpNYsNK3emo5kJHH
 TX_IN[36] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[37]
 TX_IN[37] OutPoint hash (char[32])
  C90595776C7886D1D2CA10831F7085F49F07AF08BD7B376CB4002E7F1DF98500
 TX_IN[37] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[37] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[37] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        1698822A2AED5565:088D32F182D7B257
        28461737112050A1:E681A9B738DF7B4C
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        64BCBE70F3C91C3A:B96ED6E1FD5A5D2A
        155EAD7EFE91A26B:5F6512C37584E05B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008A921E18AD6D5C:02A074C90A7657E4
        24E6C718E290C50F:CA0A380C20C66667
        35
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        33443136724D4246:9472868C75093D99
        EE9335876D7E53D8:2EF4C453BC027093
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02D597D21B180EE7:BA232F8E56EDA2C7
        634788BB57F149DC:9D0B41F37ED10415
        04
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15921u9Bx6hqJuJDaApHpRqDuhHULzd1UQ
    21: OP_DATA_0x21: compressed pub key
        02F84B2D46B91BA1:96751B472EE46722
        F41BF1205110F872:07327AEC7F9557BF
        FF
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1ANwpZGN6E2yudHj3NMFTiVs6RarFWRs1V
    21: OP_DATA_0x21: compressed pub key
        036F07B6B883E8EB:34915CB8A29B7246
        BEE4EDD056A488E3:3B83CE9F0769B8D1
        F9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NwbiNGQr14GBRk8ymX9zytBJRWCTZWF3J
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102D597D21B18:0EE7BA232F8E56ED
        A2C7634788BB57F1:49DC9D0B41F37ED1
        0415042102F84B2D:46B91BA196751B47
        2EE46722F41BF120:5110F87207327AEC
        7F9557BFFF21036F:07B6B883E8EB3491
        5CB8A29B7246BEE4:EDD056A488E33B83
        CE9F0769B8D1F953:AE
        corresponding bitcoin address is:    3FBrGuWbiCxMbkYFEcR2AbmuakZWBYZZLP
 TX_IN[37] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[38]
 TX_IN[38] OutPoint hash (char[32])
  B312EDD37299D2BD66296DAA8ABE8988DE5FB427A9E444EAC4EA13C7C554D410
 TX_IN[38] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[38] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[38] Script Sig (uchar[])
  0047304402202677B6A0407D1097F1DDF08B931E842462C00FBF7C965B92FC874FAE6BC5DBC0022024D2F99FBAE5810DD4A9705957ED93DBD9DC3E9326704F164783DE4EF7CFA60D01483045022100827427E635C34C6B53A31DC2C90186656A950DA12BB999612148BEA1EF9355E3022026375BAE83BBB8A945CBC47DEA7A247283109AD91D45EEB7E06E21E71DE028EE014C69522102847CDF25CB3929BD5201B6691120E2532EC2E20921ADC94BFEEF084607867A2C2103D95105624C2B3FAB39EEA4917564C3EEC40499120050F14B975AE741AB63598F21037F710D5E7FA2E2929DDFC0F7475A02B1B6EE106D6D0AB12211D3CFB484D3052953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        2677B6A0407D1097:F1DDF08B931E8424
        62C00FBF7C965B92:FC874FAE6BC5DBC0
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        24D2F99FBAE5810D:D4A9705957ED93DB
        D9DC3E9326704F16:4783DE4EF7CFA60D
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00827427E635C34C:6B53A31DC2C90186
        656A950DA12BB999:612148BEA1EF9355
        E3
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        26375BAE83BBB8A9:45CBC47DEA7A2472
        83109AD91D45EEB7:E06E21E71DE028EE
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02847CDF25CB3929:BD5201B6691120E2
        532EC2E20921ADC9:4BFEEF084607867A
        2C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    191hkuSKiuQpnrEzNbdW9XkYgPBpt5BAyh
    21: OP_DATA_0x21: compressed pub key
        03D95105624C2B3F:AB39EEA4917564C3
        EEC40499120050F1:4B975AE741AB6359
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Fom5x5g6PuoAdNCRWLWvk2SbfQdhUSJ3L
    21: OP_DATA_0x21: compressed pub key
        037F710D5E7FA2E2:929DDFC0F7475A02
        B1B6EE106D6D0AB1:2211D3CFB484D305
        29
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HSCVBy4EnhRzMjvXN3s9UkT3MBv4sHHBj
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102847CDF25CB:3929BD5201B66911
        20E2532EC2E20921:ADC94BFEEF084607
        867A2C2103D95105:624C2B3FAB39EEA4
        917564C3EEC40499:120050F14B975AE7
        41AB63598F21037F:710D5E7FA2E2929D
        DFC0F7475A02B1B6:EE106D6D0AB12211
        D3CFB484D3052953:AE
        corresponding bitcoin address is:    3PZFGbVMwKpzuk8inQtVCWQGEjjmEQZa6F
 TX_IN[38] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[39]
 TX_IN[39] OutPoint hash (char[32])
  95C63FC613395E79978B3D53CAF7231E68A1105FEBC41D86F2A7F563E4466B63
 TX_IN[39] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[39] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[39] Script Sig (uchar[])
  0047304402200A5E646DBC66E2C443F2D5FA844D2AB85A03F956C2A6D2C452FD111361D30FF002207BD3815ADCBA7628893B8FD3CAB6801B1B089940B888CCD2DF22F3FE02AB17A00147304402207564C57E083D794F3D6B7CDFEC936A789028366937944DBD6563A56E9C1199810220012E534E4B471ACDB98B5AE980951A0BB3AABB0B6D9D79CE1E3E303256FAB718014C69522102266FE79B4A975FAB0CEADAD4E89A2A6DFEC7F78A50CB3EDAFC0F2C4159A4D64A2103194B7A31668F0067923296694DF3B93EA3053A145557F323D0600FE7B2666FE1210349D7E6C35E2289CE034886F1CB1E71F03906FDC4F8838BA3E12E21381EA06D3453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        0A5E646DBC66E2C4:43F2D5FA844D2AB8
        5A03F956C2A6D2C4:52FD111361D30FF0
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        7BD3815ADCBA7628:893B8FD3CAB6801B
        1B089940B888CCD2:DF22F3FE02AB17A0
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        7564C57E083D794F:3D6B7CDFEC936A78
        9028366937944DBD:6563A56E9C119981
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        012E534E4B471ACD:B98B5AE980951A0B
        B3AABB0B6D9D79CE:1E3E303256FAB718
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02266FE79B4A975F:AB0CEADAD4E89A2A
        6DFEC7F78A50CB3E:DAFC0F2C4159A4D6
        4A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CZUfKHCe5R3GMfNkDQ7xgJJjarok89uim
    21: OP_DATA_0x21: compressed pub key
        03194B7A31668F00:67923296694DF3B9
        3EA3053A145557F3:23D0600FE7B2666F
        E1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EEhMp1mYrJupRbmRMuZxedzFEc7EBV8Le
    21: OP_DATA_0x21: compressed pub key
        0349D7E6C35E2289:CE034886F1CB1E71
        F03906FDC4F8838B:A3E12E21381EA06D
        34
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1P6kZqtnbugtiQuAqKrvkKkPNoiTiGdmAY
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102266FE79B4A:975FAB0CEADAD4E8
        9A2A6DFEC7F78A50:CB3EDAFC0F2C4159
        A4D64A2103194B7A:31668F0067923296
        694DF3B93EA3053A:145557F323D0600F
        E7B2666FE1210349:D7E6C35E2289CE03
        4886F1CB1E71F039:06FDC4F8838BA3E1
        2E21381EA06D3453:AE
        corresponding bitcoin address is:    3CpXFqjNeU8j7JKBHgewGTKGXUpG3GPT5m
 TX_IN[39] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[40]
 TX_IN[40] OutPoint hash (char[32])
  549B2B38E646BA32DD1839015F2E41D118FC70070E428C2763A9E79456E99A0F
 TX_IN[40] OutPoint index (uint32_t)
  hex=15000000, reversed=00000015, decimal=21
 TX_IN[40] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[40] Script Sig (uchar[])
  00483045022100DCC8EFC32B1F2452C343737D7971E7311CC1731AE29AE882338546703D1EB1F502203FA4758C0205FBC6257685A73652ED78B7B4A4C682BE35073B7DBC5C660E4BFB014830450221009707B4370FD316ACF3EEAA5751DEB91D91B4EC0BF3D6C9B9CD0003865CCE55DF02206E50BBFD0CD401214826A36009CC1D0578F70FAFF60635FABDCF8EF4624E83BA014C69522102A906BF029A1513B8340099408C2CDC8CA8BBD5C0703DC480A978DF8873A8AD7E2102096DED245CBCC0C61F50B016E7B3252F41BDCAC76CB3CA0F69EBE44B4502A4ED210266084D36463F0290693C68419ACD6E5446896353135C919B8CEC575E26E52D9F53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00DCC8EFC32B1F24:52C343737D7971E7
        311CC1731AE29AE8:82338546703D1EB1
        F5
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3FA4758C0205FBC6:257685A73652ED78
        B7B4A4C682BE3507:3B7DBC5C660E4BFB
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009707B4370FD316:ACF3EEAA5751DEB9
        1D91B4EC0BF3D6C9:B9CD0003865CCE55
        DF
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6E50BBFD0CD40121:4826A36009CC1D05
        78F70FAFF60635FA:BDCF8EF4624E83BA
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02A906BF029A1513:B8340099408C2CDC
        8CA8BBD5C0703DC4:80A978DF8873A8AD
        7E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1GWiRDZjcpQB4D8tcu6sSoWnQiTFmHUMGY
    21: OP_DATA_0x21: compressed pub key
        02096DED245CBCC0:C61F50B016E7B325
        2F41BDCAC76CB3CA:0F69EBE44B4502A4
        ED
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CfZvtJfu4LuQioGEEtAcSvDRhoFvWpe4F
    21: OP_DATA_0x21: compressed pub key
        0266084D36463F02:90693C68419ACD6E
        5446896353135C91:9B8CEC575E26E52D
        9F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    12wR67CvHV4RDkXqk8LRHK2isNHj1fdmRF
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102A906BF029A:1513B8340099408C
        2CDC8CA8BBD5C070:3DC480A978DF8873
        A8AD7E2102096DED:245CBCC0C61F50B0
        16E7B3252F41BDCA:C76CB3CA0F69EBE4
        4B4502A4ED210266:084D36463F029069
        3C68419ACD6E5446:896353135C919B8C
        EC575E26E52D9F53:AE
        corresponding bitcoin address is:    3QGhLMpk2UmqCKEpmq68ZDxoy7PDt71ACM
 TX_IN[40] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[41]
 TX_IN[41] OutPoint hash (char[32])
  A7000195F19EC26964BECF1309A57DF249578654124166990B18202A3C60A455
 TX_IN[41] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[41] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[41] Script Sig (uchar[])
  00473044022071AC99CCB56C646FB71803EA70E0286608D0991AC14858592B98431EF02C8F53022026F3CD2C002FBC01C4216F7CD5C2224A281EFBE0BF25B07C81509EEC2C58F07001483045022100D36312EA7872869B28B47B4E2F26F316811EB64CD069EF7F5B0D2C26D53B884B02201C7836951A4C444CD1D514D207C2259FDC82B8E86055B6499E14BCBACADCF1B1014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        71AC99CCB56C646F:B71803EA70E02866
        08D0991AC1485859:2B98431EF02C8F53
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        26F3CD2C002FBC01:C4216F7CD5C2224A
        281EFBE0BF25B07C:81509EEC2C58F070
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00D36312EA787286:9B28B47B4E2F26F3
        16811EB64CD069EF:7F5B0D2C26D53B88
        4B
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        1C7836951A4C444C:D1D514D207C2259F
        DC82B8E86055B649:9E14BCBACADCF1B1
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[41] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[42]
 TX_IN[42] OutPoint hash (char[32])
  5DEB649ECEB9162AAF51999AF6E6AAB4B41ADFEB6FF2E2453FC5A230B9E96A90
 TX_IN[42] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[42] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[42] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        7BBFC37A902C5760:8068FB28AFEB86B1
        994F9D552D742A74:09C1F46039BD2FBC
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        5DE78FC6D6D28908:9352B83C311BDE44
        9D8731A4A94186A5:BC159BC0C25ACB74
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        038119AB55481905:9E4D98405910888E
        8D3A7F15DDCF3877:9806EDBC462F46F6
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        6468A7FC995DE780:3112A8439D9A27BF
        117B2059B60F5BE4:12686BCD1E2E8257
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[42] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[43]
 TX_IN[43] OutPoint hash (char[32])
  C3EC70CE964CCE8D0CF52D72B8E92F2241BBC5E85E818FBC84EEBA8EE7C9CC52
 TX_IN[43] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[43] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[43] Script Sig (uchar[])
  0047304402200BC2506319205C38CFED156C31684B20727E84EEB00A54EE72F0C798BD6D0FF20220011A291C88FE89CF94D9932E8A13FFC26AAA528AC468AB73DFF15ED00B7C3DFB01473044022012CBB13B6F0374ACD77E8B89E6B1638563D50563600B4B1B7B184B30ABB9BE9B022040B8D0B4EC47071BFB1ADEE951330562FD71F60BC4AF84DA5CF8F4B8862F837A014C6952210269C03068BD12350B09D84C6282DE0A89913856C69F4FC7B6DA3963D2EEF9278F210209BC0749A7FD8E6AC716F3D358DB9409BD714714C2CF500A16A362FA14E0D92821037D13021C7133B1ECE977FBA5E75A360BC1D8672B98A5BA2FF6128A3244810B3053AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        0BC2506319205C38:CFED156C31684B20
        727E84EEB00A54EE:72F0C798BD6D0FF2
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        011A291C88FE89CF:94D9932E8A13FFC2
        6AAA528AC468AB73:DFF15ED00B7C3DFB
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        12CBB13B6F0374AC:D77E8B89E6B16385
        63D50563600B4B1B:7B184B30ABB9BE9B
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        40B8D0B4EC47071B:FB1ADEE951330562
        FD71F60BC4AF84DA:5CF8F4B8862F837A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0269C03068BD1235:0B09D84C6282DE0A
        89913856C69F4FC7:B6DA3963D2EEF927
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19HrG6QAtn53QiPimpWyHzp3CRdyDShJJp
    21: OP_DATA_0x21: compressed pub key
        0209BC0749A7FD8E:6AC716F3D358DB94
        09BD714714C2CF50:0A16A362FA14E0D9
        28
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Bsz84i7vcDCRFcev8nQtXt91neP5VusaC
    21: OP_DATA_0x21: compressed pub key
        037D13021C7133B1:ECE977FBA5E75A36
        0BC1D8672B98A5BA:2FF6128A3244810B
        30
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Hfadiqr3BEMN9SrtsAGFxtr4d85FPivVw
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210269C03068BD:12350B09D84C6282
        DE0A89913856C69F:4FC7B6DA3963D2EE
        F9278F210209BC07:49A7FD8E6AC716F3
        D358DB9409BD7147:14C2CF500A16A362
        FA14E0D92821037D:13021C7133B1ECE9
        77FBA5E75A360BC1:D8672B98A5BA2FF6
        128A3244810B3053:AE
        corresponding bitcoin address is:    3Bv8bsg8DaNByAq8BMecof8WGCPDJE6VN4
 TX_IN[43] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[44]
 TX_IN[44] OutPoint hash (char[32])
  F5310146EA182CD0227AE43666AA47510053B5C35677C24DDCD6F334F155AF86
 TX_IN[44] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[44] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[44] Script Sig (uchar[])
  00483045022100A7CEEE6FAD1273FD4E919B06D7CEB8618A66AC66E92DCC44CE76CFEEEC5EA5B502200D16C7611AE225CE0464E7AE05596CEBFFAD25F684C98AC4869F4462F2237C5F0147304402204E95C449CF34E52489C1E1F52A3170703D31C8FE5D4E7B8EDA9046191D9EACC20220735F8AC7D4EE389CC8A8107488E09AE1FAF085609B25F935B85C7462E8C73322014C69522102DEC60139738AEA98A63331B1D0C15ECFB2220346EA92DEE37C92695D8A9C409A2103A49D40AF9A0A8423C13CFC243148FCF67E2A0B74B48EDFE0589B561066BEF43F2103EFFD3064ADDAAB53ACD4F7C912C2D66D21C079F048B1C6D7A2C364167DFDF1C753AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A7CEEE6FAD1273:FD4E919B06D7CEB8
        618A66AC66E92DCC:44CE76CFEEEC5EA5
        B5
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0D16C7611AE225CE:0464E7AE05596CEB
        FFAD25F684C98AC4:869F4462F2237C5F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        4E95C449CF34E524:89C1E1F52A317070
        3D31C8FE5D4E7B8E:DA9046191D9EACC2
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        735F8AC7D4EE389C:C8A8107488E09AE1
        FAF085609B25F935:B85C7462E8C73322
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02DEC60139738AEA:98A63331B1D0C15E
        CFB2220346EA92DE:E37C92695D8A9C40
        9A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Dug3WzrjVpTfJHnPvBjsXpevdZ38Xtjm1
    21: OP_DATA_0x21: compressed pub key
        03A49D40AF9A0A84:23C13CFC243148FC
        F67E2A0B74B48EDF:E0589B561066BEF4
        3F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KU2wMhsyJUi4kXNHQ7rjWbHf7aeF2YpJo
    21: OP_DATA_0x21: compressed pub key
        03EFFD3064ADDAAB:53ACD4F7C912C2D6
        6D21C079F048B1C6:D7A2C364167DFDF1
        C7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    18uPfj77cNyB8QtimV6NKscnGy4zRnxhG
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102DEC6013973:8AEA98A63331B1D0
        C15ECFB2220346EA:92DEE37C92695D8A
        9C409A2103A49D40:AF9A0A8423C13CFC
        243148FCF67E2A0B:74B48EDFE0589B56
        1066BEF43F2103EF:FD3064ADDAAB53AC
        D4F7C912C2D66D21:C079F048B1C6D7A2
        C364167DFDF1C753:AE
        corresponding bitcoin address is:    35BnrNkEbsdcRLXkqrRwPPZXAiMG3ia9Z9
 TX_IN[44] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[45]
 TX_IN[45] OutPoint hash (char[32])
  79AFDCFE4B75E8ACA35A2E360B2B3B7186C1F5E2A0842865B04D55609E22DA17
 TX_IN[45] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[45] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[45] Script Sig (uchar[])
  00483045022100D9DD3FFA33AD2AD351C168EF84F41B64E7148A6E497A33FA3916EAD811D27D5B02205B898426F6067259C762BB8F2323C34CB971B0CEF2819CA3FB9009CF36E9A78101483045022100C485FE402F6114F5A46D9C8843984FF9F3EDEE0F971CA3A97A9B4D5B49910B4A02206A80F5D1C881D09B21670D27403B96CEC47F16D76B66FCB9A2DF702DC13CE7F6014C69522102766FC2763906223CDF19E2C6CDC2255EADF40817DA27EC0F2643B011FDE6E7FA21031D281F6324C7BABD69E3B3478B96FC33F012A6278179F631BBB6557DA95ECB7C2102F373BF4E0DDAE911B0BCB3F24CCC9F7EDAC9622B67CA1AA19CBE95A1FF74ADC953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00D9DD3FFA33AD2A:D351C168EF84F41B
        64E7148A6E497A33:FA3916EAD811D27D
        5B
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        5B898426F6067259:C762BB8F2323C34C
        B971B0CEF2819CA3:FB9009CF36E9A781
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C485FE402F6114:F5A46D9C8843984F
        F9F3EDEE0F971CA3:A97A9B4D5B49910B
        4A
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6A80F5D1C881D09B:21670D27403B96CE
        C47F16D76B66FCB9:A2DF702DC13CE7F6
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02766FC276390622:3CDF19E2C6CDC225
        5EADF40817DA27EC:0F2643B011FDE6E7
        FA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17BLErT54jGpP5Je8qiMgKe8wE3FGuK8n9
    21: OP_DATA_0x21: compressed pub key
        031D281F6324C7BA:BD69E3B3478B96FC
        33F012A6278179F6:31BBB6557DA95ECB
        7C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17p2GpdtadHrBtKNgnhky1tNQ8qj2BCptx
    21: OP_DATA_0x21: compressed pub key
        02F373BF4E0DDAE9:11B0BCB3F24CCC9F
        7EDAC9622B67CA1A:A19CBE95A1FF74AD
        C9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1J87dKELsETg5x7VkjcoMycpwHdsizXhR3
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102766FC27639:06223CDF19E2C6CD
        C2255EADF40817DA:27EC0F2643B011FD
        E6E7FA21031D281F:6324C7BABD69E3B3
        478B96FC33F012A6:278179F631BBB655
        7DA95ECB7C2102F3:73BF4E0DDAE911B0
        BCB3F24CCC9F7EDA:C9622B67CA1AA19C
        BE95A1FF74ADC953:AE
        corresponding bitcoin address is:    3BknH5KGAwZsKAfMSUhH6FYU7GebsdsrHr
 TX_IN[45] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[46]
 TX_IN[46] OutPoint hash (char[32])
  AB471F88CD98FDCDD87F5A90D29D6A20BFDC69BDAC5CAFEC881873E7FDC0BEAA
 TX_IN[46] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[46] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[46] Script Sig (uchar[])
  0047304402203B9D73D2A70FA376BDA8F957B0E2988DE1071D003A6206F6E084B3EEFB1E275C022036A6AFD51FCF5746231221FE5E93F667173D12780C7155E79E78013192B17110014830450221008B9F878A3FDA4E2676621E18517B3613F0F6EB7A951D832231AB48734797066E022019A4130ECF12761EEC62CCB24C0E450B240EAF02632C27A0DA45CFD5822F0DF0014C69522102715450F4C38EE196F8028836D7FA2414668291065B2AFBAA5D78CC9927B22B0D2103BAB8FCC829A00A050FA8402CD848714AA7E1513178442A85A63446D44E7074E02103914F8241383BAED4C93AA6305B28050FEB4D337AB83C3E407A2C58DEBC7FA51953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        3B9D73D2A70FA376:BDA8F957B0E2988D
        E1071D003A6206F6:E084B3EEFB1E275C
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        36A6AFD51FCF5746:231221FE5E93F667
        173D12780C7155E7:9E78013192B17110
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008B9F878A3FDA4E:2676621E18517B36
        13F0F6EB7A951D83:2231AB4873479706
        6E
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        19A4130ECF12761E:EC62CCB24C0E450B
        240EAF02632C27A0:DA45CFD5822F0DF0
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02715450F4C38EE1:96F8028836D7FA24
        14668291065B2AFB:AA5D78CC9927B22B
        0D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1AsqfUCR2KrJE6sLvydpDCFuecKi3w2RyW
    21: OP_DATA_0x21: compressed pub key
        03BAB8FCC829A00A:050FA8402CD84871
        4AA7E1513178442A:85A63446D44E7074
        E0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1L8hhFfEd8fXkvQzDLUy2yw8hvSGibeg46
    21: OP_DATA_0x21: compressed pub key
        03914F8241383BAE:D4C93AA6305B2805
        0FEB4D337AB83C3E:407A2C58DEBC7FA5
        19
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EBhmtASkyuwKFxx3meyhBn1jkoLrRgWka
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102715450F4C3:8EE196F8028836D7
        FA2414668291065B:2AFBAA5D78CC9927
        B22B0D2103BAB8FC:C829A00A050FA840
        2CD848714AA7E151:3178442A85A63446
        D44E7074E0210391:4F8241383BAED4C9
        3AA6305B28050FEB:4D337AB83C3E407A
        2C58DEBC7FA51953:AE
        corresponding bitcoin address is:    31kLYneGjN9zmzE4wBQKAnh2tj3thMamBY
 TX_IN[46] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[47]
 TX_IN[47] OutPoint hash (char[32])
  53CD02C7E6227C3982E70BC5F7990FEE981EA144625494D3E6343F80209B94CB
 TX_IN[47] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[47] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[47] Script Sig (uchar[])
  00483045022100A375447B77C8FC9EAFDD16E041933A8680BFBCDAE20AEF1ED769A5D4B38FD63E02203786FC61ABC1EC217653C424FC1086B3E197EDC4CBC4E3486643C08E3805B48001473044022017EF6F3895A7F50CA0C6E115E5DDE4AFC92D412CC7740D62510695CDD8F1CE6B02200BD2E13F3FE10818CA00E93C3F7FD69E30A3CFF71D3BE52ECF6D050FE3B39FEB014C69522102A0F260BBF1799CCAB0028E9A431F8289466E8688FE853AE5132CFAA288C2D51F2103F76EC96D3FBE3956962C8C91F68A0E3F0D486D7EDA0630BD45C0A93978718E552103B5E0715C937A329F527C1BEF713C864BD52ACB991756303135D371A884407E7353AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A375447B77C8FC:9EAFDD16E041933A
        8680BFBCDAE20AEF:1ED769A5D4B38FD6
        3E
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3786FC61ABC1EC21:7653C424FC1086B3
        E197EDC4CBC4E348:6643C08E3805B480
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        17EF6F3895A7F50C:A0C6E115E5DDE4AF
        C92D412CC7740D62:510695CDD8F1CE6B
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        0BD2E13F3FE10818:CA00E93C3F7FD69E
        30A3CFF71D3BE52E:CF6D050FE3B39FEB
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02A0F260BBF1799C:CAB0028E9A431F82
        89466E8688FE853A:E5132CFAA288C2D5
        1F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MsGDr8L2QtS7ma3o4yFjJss7ZMKPLAfx
    21: OP_DATA_0x21: compressed pub key
        03F76EC96D3FBE39:56962C8C91F68A0E
        3F0D486D7EDA0630:BD45C0A93978718E
        55
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    14pQi7xFkV5p1JUGspNKjjqSK8wDk7A4p9
    21: OP_DATA_0x21: compressed pub key
        03B5E0715C937A32:9F527C1BEF713C86
        4BD52ACB99175630:3135D371A884407E
        73
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    18WcBkvvRfhsvPz3EHDeRV9KJH3DKwgDHA
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102A0F260BBF1:799CCAB0028E9A43
        1F8289466E8688FE:853AE5132CFAA288
        C2D51F2103F76EC9:6D3FBE3956962C8C
        91F68A0E3F0D486D:7EDA0630BD45C0A9
        3978718E552103B5:E0715C937A329F52
        7C1BEF713C864BD5:2ACB991756303135
        D371A884407E7353:AE
        corresponding bitcoin address is:    3DTMfFECPBfav13wPeYpqaXfoC1VP94KHt
 TX_IN[47] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[48]
 TX_IN[48] OutPoint hash (char[32])
  665040B4A3FAD9DA016973C1D6A32F973057602E03F231EACBCAA23AE775D9F9
 TX_IN[48] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[48] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[48] Script Sig (uchar[])
  004830450221008F55860CBE2EF49B6864FFC6114589F9C5DC297A68589D4952D13B5A94B645DB022001A1B8021AD1788EA9D06F352C86B272B0F5E50C87A125FEF8FAC29210D551CC0147304402206D39945515B86D1C2665C017331BE74D0059FD32DA88CE352F183930113FD67C022058F0EA3464E0E104D36589BE5634E5CE07E4133DA1398D1DC63D99F793B373A5014C69522103DD55D05A9B6BA1411379F5D23FA6606F52106875479E2C86F5CFFA7622B502E02103FA23F6634E4D747661AF941C17C4A3E90770F39D85045FDEE888F14CED2345AA21029F73F46464AC5B425C7844C3D94CEEE8EF05674FC00B9D831BE18E01A5D8585253AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008F55860CBE2EF4:9B6864FFC6114589
        F9C5DC297A68589D:4952D13B5A94B645
        DB
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        01A1B8021AD1788E:A9D06F352C86B272
        B0F5E50C87A125FE:F8FAC29210D551CC
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        6D39945515B86D1C:2665C017331BE74D
        0059FD32DA88CE35:2F183930113FD67C
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        58F0EA3464E0E104:D36589BE5634E5CE
        07E4133DA1398D1D:C63D99F793B373A5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03DD55D05A9B6BA1:411379F5D23FA660
        6F52106875479E2C:86F5CFFA7622B502
        E0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    137useURauA78ikCDCbgoRBC5xrUC4ewau
    21: OP_DATA_0x21: compressed pub key
        03FA23F6634E4D74:7661AF941C17C4A3
        E90770F39D85045F:DEE888F14CED2345
        AA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1AqYJTGswvCsuVrwvYNwy1wSoGMXdprpFp
    21: OP_DATA_0x21: compressed pub key
        029F73F46464AC5B:425C7844C3D94CEE
        E8EF05674FC00B9D:831BE18E01A5D858
        52
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NfJLKdtjXieLbQ5EkUEaG1BSHdMPiELCa
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103DD55D05A9B:6BA1411379F5D23F
        A6606F5210687547:9E2C86F5CFFA7622
        B502E02103FA23F6:634E4D747661AF94
        1C17C4A3E90770F3:9D85045FDEE888F1
        4CED2345AA21029F:73F46464AC5B425C
        7844C3D94CEEE8EF:05674FC00B9D831B
        E18E01A5D8585253:AE
        corresponding bitcoin address is:    36jWsMtwD94saVoRQp8LaFuhhrLLAfbvy4
 TX_IN[48] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[49]
 TX_IN[49] OutPoint hash (char[32])
  702BDE72372228D3FD155CA2F8A5697371DAF9B33BC9C1EA2ED96720C7AEA4A2
 TX_IN[49] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[49] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[49] Script Sig (uchar[])
  00483045022100E4D17C8D6104EA278F6ACED14C9309E7D7666C2CA17F7BC4A769137A86ABEE9902200D35BC0A3F214048087997B51BEC12A48D3405C9A39D375ACB3D486DE88775EC0147304402207411946671757EBC9E2C0C6F3FDA0B144153D8C8D3E248A5F02E3F9170F670AD0220410BB922E589F7B510166A3587ADF81ECC0DB833009CC7CBE976A8CA5F7ED104014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00E4D17C8D6104EA:278F6ACED14C9309
        E7D7666C2CA17F7B:C4A769137A86ABEE
        99
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0D35BC0A3F214048:087997B51BEC12A4
        8D3405C9A39D375A:CB3D486DE88775EC
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        7411946671757EBC:9E2C0C6F3FDA0B14
        4153D8C8D3E248A5:F02E3F9170F670AD
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        410BB922E589F7B5:10166A3587ADF81E
        CC0DB833009CC7CB:E976A8CA5F7ED104
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[49] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[50]
 TX_IN[50] OutPoint hash (char[32])
  8E93E4DC73B62BA5CE149B2B4ADBD22EC03D60D054D9E1E7229433DF568E6F6D
 TX_IN[50] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[50] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[50] Script Sig (uchar[])
  0048304502210090E64545C4B0CA7B11E500A85CE2EEFAFF7315E0A12D4A8009AA42FBD0EA384902200AD52B7E52A9BCEF543A30ABEE1B26DF6E007BA0A8405F8EEA00BDBF7A4289B50147304402202423C066953AD8754774BFC11175417031527E6A100BAAEE45376A7ED359710502207D8C5F47C35407054040E07B421B92E032606657C4F2A65D5464D3AB193D25B0014C6952210338C0E41283B95F07718E58AA6CD0B3C7721DA83C11A2C0ECAE66E06BCE673C62210225C48DB7F79DFBB6FB0FFD6365B17E0D23423AFF7A270B2694DA75B888B8885D21020C4689E21BE44DA9CBC0BB5D4F207EAA4112FE1D95014C2E9E6588F79AF7CBC853AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        0090E64545C4B0CA:7B11E500A85CE2EE
        FAFF7315E0A12D4A:8009AA42FBD0EA38
        49
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0AD52B7E52A9BCEF:543A30ABEE1B26DF
        6E007BA0A8405F8E:EA00BDBF7A4289B5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        2423C066953AD875:4774BFC111754170
        31527E6A100BAAEE:45376A7ED3597105
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        7D8C5F47C3540705:4040E07B421B92E0
        32606657C4F2A65D:5464D3AB193D25B0
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0338C0E41283B95F:07718E58AA6CD0B3
        C7721DA83C11A2C0:ECAE66E06BCE673C
        62
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1sQrt7op4cfgWhrDX3wEQerh5jKEbHJYn
    21: OP_DATA_0x21: compressed pub key
        0225C48DB7F79DFB:B6FB0FFD6365B17E
        0D23423AFF7A270B:2694DA75B888B888
        5D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15Z3FDWXZZhsDSYumDR84CeqeGThK52ykr
    21: OP_DATA_0x21: compressed pub key
        020C4689E21BE44D:A9CBC0BB5D4F207E
        AA4112FE1D95014C:2E9E6588F79AF7CB
        C8
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NHZ4cLhFxnH5P5cbYhkXcvSfp7XAGJ4Bh
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210338C0E41283:B95F07718E58AA6C
        D0B3C7721DA83C11:A2C0ECAE66E06BCE
        673C62210225C48D:B7F79DFBB6FB0FFD
        6365B17E0D23423A:FF7A270B2694DA75
        B888B8885D21020C:4689E21BE44DA9CB
        C0BB5D4F207EAA41:12FE1D95014C2E9E
        6588F79AF7CBC853:AE
        corresponding bitcoin address is:    3M8dq2oA9GgqWHxS4bNGNZVkFzLpTFL32n
 TX_IN[50] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[51]
 TX_IN[51] OutPoint hash (char[32])
  BF08CA7EA6F0EAA339BEBC29BB43265D51EC576CED517D9308E2A961190D6D2B
 TX_IN[51] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[51] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[51] Script Sig (uchar[])
  00483045022100F70224FF000A6D42FB863E8C3796FA3C8F4908DF4643BCB6A22562E8BA05C2E70220358DA09996AAD69852E986C80BFE28B3194C8761FD77559B3255A97E1A2DD605014730440220196C687228C40F382CC2BAF72E8EB67C81896A15E05CAC23932547C29FE0A1FD022045EFA35327C8FA82F3A92C2073EC118C3D34CFFFE6F4D1D7C284A81EE49E485B014C69522102517ECBDD34DAD93430F085561B4D11A1DBD320BD81B5BA454969812EB7B23C142103F58D9CEAFCD3029331D67F9E027636508DC4F33B415BEAFC154C32F3A2D200AB2103487D6654A5ADBCC8BEB3C50C839805E8B99EB557A3280219302FA888EC13A5B153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00F70224FF000A6D:42FB863E8C3796FA
        3C8F4908DF4643BC:B6A22562E8BA05C2
        E7
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        358DA09996AAD698:52E986C80BFE28B3
        194C8761FD77559B:3255A97E1A2DD605
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        196C687228C40F38:2CC2BAF72E8EB67C
        81896A15E05CAC23:932547C29FE0A1FD
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        45EFA35327C8FA82:F3A92C2073EC118C
        3D34CFFFE6F4D1D7:C284A81EE49E485B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02517ECBDD34DAD9:3430F085561B4D11
        A1DBD320BD81B5BA:454969812EB7B23C
        14
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Q3TifpkAoah7RMfTNNtJTagLMRgde1fJU
    21: OP_DATA_0x21: compressed pub key
        03F58D9CEAFCD302:9331D67F9E027636
        508DC4F33B415BEA:FC154C32F3A2D200
        AB
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1heqhARf4Re4F9K8UtMcZBLkZvKkZ2M25
    21: OP_DATA_0x21: compressed pub key
        03487D6654A5ADBC:C8BEB3C50C839805
        E8B99EB557A32802:19302FA888EC13A5
        B1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    12dD8bbErdkUYBiRn78uyNjKKZDP9PmHLY
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102517ECBDD34:DAD93430F085561B
        4D11A1DBD320BD81:B5BA454969812EB7
        B23C142103F58D9C:EAFCD3029331D67F
        9E027636508DC4F3:3B415BEAFC154C32
        F3A2D200AB210348:7D6654A5ADBCC8BE
        B3C50C839805E8B9:9EB557A328021930
        2FA888EC13A5B153:AE
        corresponding bitcoin address is:    35H5nJgGtBvoJYa6KQ1z4DP379XFgiQh9w
 TX_IN[51] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[52]
 TX_IN[52] OutPoint hash (char[32])
  BB83CF247A20460EAA7F32D65316FF9B061713E2DFB32C35BE689BE9DA135CF2
 TX_IN[52] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[52] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[52] Script Sig (uchar[])
  00483045022100B370A089D828884F25CE54864EF86A480182E7B1A813DB0900FE37B6B6145DC00220034ECE11D3D948B0F50E2B6A3E629512C0D5BC81D3F0709461CA67C40D8B0C1A0147304402203601BAADDEF0C76317F44828A84EC357CA8ACC262236BA44D5148388EDEF0AA302206B23B8DE722E44832B365FB288F723978005174BF68CD534B68D411CFEC6FDE7014C69522103DD55D05A9B6BA1411379F5D23FA6606F52106875479E2C86F5CFFA7622B502E02103FA23F6634E4D747661AF941C17C4A3E90770F39D85045FDEE888F14CED2345AA21029F73F46464AC5B425C7844C3D94CEEE8EF05674FC00B9D831BE18E01A5D8585253AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B370A089D82888:4F25CE54864EF86A
        480182E7B1A813DB:0900FE37B6B6145D
        C0
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        034ECE11D3D948B0:F50E2B6A3E629512
        C0D5BC81D3F07094:61CA67C40D8B0C1A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        3601BAADDEF0C763:17F44828A84EC357
        CA8ACC262236BA44:D5148388EDEF0AA3
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        6B23B8DE722E4483:2B365FB288F72397
        8005174BF68CD534:B68D411CFEC6FDE7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03DD55D05A9B6BA1:411379F5D23FA660
        6F52106875479E2C:86F5CFFA7622B502
        E0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    137useURauA78ikCDCbgoRBC5xrUC4ewau
    21: OP_DATA_0x21: compressed pub key
        03FA23F6634E4D74:7661AF941C17C4A3
        E90770F39D85045F:DEE888F14CED2345
        AA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1AqYJTGswvCsuVrwvYNwy1wSoGMXdprpFp
    21: OP_DATA_0x21: compressed pub key
        029F73F46464AC5B:425C7844C3D94CEE
        E8EF05674FC00B9D:831BE18E01A5D858
        52
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NfJLKdtjXieLbQ5EkUEaG1BSHdMPiELCa
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103DD55D05A9B:6BA1411379F5D23F
        A6606F5210687547:9E2C86F5CFFA7622
        B502E02103FA23F6:634E4D747661AF94
        1C17C4A3E90770F3:9D85045FDEE888F1
        4CED2345AA21029F:73F46464AC5B425C
        7844C3D94CEEE8EF:05674FC00B9D831B
        E18E01A5D8585253:AE
        corresponding bitcoin address is:    36jWsMtwD94saVoRQp8LaFuhhrLLAfbvy4
 TX_IN[52] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[53]
 TX_IN[53] OutPoint hash (char[32])
  5C9A3816FA20DE65CC1CFE0F380642270892FE79A3BBB792C950637D9F041C79
 TX_IN[53] OutPoint index (uint32_t)
  hex=9B000000, reversed=0000009B, decimal=155
 TX_IN[53] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[53] Script Sig (uchar[])
  00483045022100A45947FE0AE6CD2A65D4FF3FDC1E5E0D19445E6572EBA2D5F4C6690986C5F04402203B60E49DB3FD407A49F24A2F721DF437B0CB995C92F25D25CC2A796DB947305C01483045022100E925E8CD229979B2CC943D7FBB20B8E3C8466A6FD31DE523024015E8DD754C39022004E92CA4BA3B9395796D9810DEF71A9918CFD0637AE2F91C983137D41457AAB9014C69522102B89B97FCE9D8D888ED88E61B4FE3EE250C4F4756D9DBEDAFBF7B21D4175EE82C210240AC96122A198E5C54924CC219A5DA5D533AAF20DEA9CB6F9CEEBAACC217D260210219ECB8CC5687CD3B3260A083971E1E80219E326314F84D090C44394520DD13F753AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A45947FE0AE6CD:2A65D4FF3FDC1E5E
        0D19445E6572EBA2:D5F4C6690986C5F0
        44
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3B60E49DB3FD407A:49F24A2F721DF437
        B0CB995C92F25D25:CC2A796DB947305C
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00E925E8CD229979:B2CC943D7FBB20B8
        E3C8466A6FD31DE5:23024015E8DD754C
        39
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        04E92CA4BA3B9395:796D9810DEF71A99
        18CFD0637AE2F91C:983137D41457AAB9
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02B89B97FCE9D8D8:88ED88E61B4FE3EE
        250C4F4756D9DBED:AFBF7B21D4175EE8
        2C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16eAhvPjTEZshE6uQyUV2pyRJBm6BoZXYN
    21: OP_DATA_0x21: compressed pub key
        0240AC96122A198E:5C54924CC219A5DA
        5D533AAF20DEA9CB:6F9CEEBAACC217D2
        60
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MoCY6CemQS76wHRQUZzuzAMUd4urDP9F1
    21: OP_DATA_0x21: compressed pub key
        0219ECB8CC5687CD:3B3260A083971E1E
        80219E326314F84D:090C44394520DD13
        F7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13LUDu3GRwBTECDucA7PQeYFh1Pgvqb3S3
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102B89B97FCE9:D8D888ED88E61B4F
        E3EE250C4F4756D9:DBEDAFBF7B21D417
        5EE82C210240AC96:122A198E5C54924C
        C219A5DA5D533AAF:20DEA9CB6F9CEEBA
        ACC217D260210219:ECB8CC5687CD3B32
        60A083971E1E8021:9E326314F84D090C
        44394520DD13F753:AE
        corresponding bitcoin address is:    3Q7n9qtLpqiFqnYT4PbirnRGpyofob1q3v
 TX_IN[53] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[54]
 TX_IN[54] OutPoint hash (char[32])
  2AB487EAA69571BBADEC34DFA88185C58DF9C1A437DC34D0E48903701766F230
 TX_IN[54] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[54] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[54] Script Sig (uchar[])
  004730440220054C8AEE22F6A61CE267B7BF5BFAC516D6A7DE52421286DEC36FCB52DB9B11B002204E6E273265BC9B77C29EAC7B2D720E87EC1EDBB901D7031B939D2054DB8FC013014830450221009BF9AC5B3FC4598F0DB94AC658B29C7A24C5C71AA8F3B1083FD1E6ADA5B61223022044E2FD3EBBD439C30A366145FF0DC776DF4E73AC771E18BAC7B07807993B675C014C6952210329EBF31A08AA16A74034666E3CA53D39772E0F3FC666A5D92AF34B8BD17C68A0210252989D3D0B2DA1FBF638F98AF37589EECA30E303140790D882B3089F825542782102F2F0247E44D106937B153937653617AA3D34B0711E655EDF97E39FADECA7E5B353AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        054C8AEE22F6A61C:E267B7BF5BFAC516
        D6A7DE52421286DE:C36FCB52DB9B11B0
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4E6E273265BC9B77:C29EAC7B2D720E87
        EC1EDBB901D7031B:939D2054DB8FC013
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009BF9AC5B3FC459:8F0DB94AC658B29C
        7A24C5C71AA8F3B1:083FD1E6ADA5B612
        23
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        44E2FD3EBBD439C3:0A366145FF0DC776
        DF4E73AC771E18BA:C7B07807993B675C
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0329EBF31A08AA16:A74034666E3CA53D
        39772E0F3FC666A5:D92AF34B8BD17C68
        A0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NynWqQEkhJvXwirheUv4AJaJmXGX5Bpnb
    21: OP_DATA_0x21: compressed pub key
        0252989D3D0B2DA1:FBF638F98AF37589
        EECA30E303140790:D882B3089F825542
        78
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1AUKZ3G1Tn9KrpST5T3UJZRBBZfB2Z9rMB
    21: OP_DATA_0x21: compressed pub key
        02F2F0247E44D106:937B153937653617
        AA3D34B0711E655E:DF97E39FADECA7E5
        B3
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KtGtoJnVU2LqBzWcMgBrPFqVXdkUj1jre
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210329EBF31A08:AA16A74034666E3C
        A53D39772E0F3FC6:66A5D92AF34B8BD1
        7C68A0210252989D:3D0B2DA1FBF638F9
        8AF37589EECA30E3:03140790D882B308
        9F825542782102F2:F0247E44D106937B
        153937653617AA3D:34B0711E655EDF97
        E39FADECA7E5B353:AE
        corresponding bitcoin address is:    3NAavdhcYv7TRXKqU8mTJG8YSQ9ob3F8AN
 TX_IN[54] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[55]
 TX_IN[55] OutPoint hash (char[32])
  F2449B7B785C3DDD5232DBF9442E84D11392237CA30F1C030B2657E8C400B1A5
 TX_IN[55] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[55] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[55] Script Sig (uchar[])
  00483045022100985928A37497A6E7B1C1562AAC92C51B100C8C6C57A6FF13236FEB37827A1307022062CB3517F99CF56D12449B860B58E937D645F0B2DECA6A77AE6CF2335C2A220E01473044022020CB5BA210093A628550B4E7E915143EE139EADAED7B402EABBC9B420437D865022053BF642B6E384EC0CF473F2559B5983269A0C96C380AEBF2BD710E7B979631F6014C695221038F748C06A3F6076FC6F4AD3C0B426CFD3170CDC0F2A5FFA7041B95B9263F9461210373239F30DBA4835500365C9155EBD0283720806E3735B6359E3A1D1CD11FA6D62102FF6B9DF1F2ECA67947B5C19115FDCB6CC4A874E33BDC1512BB4717E14BFDDFB153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00985928A37497A6:E7B1C1562AAC92C5
        1B100C8C6C57A6FF:13236FEB37827A13
        07
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        62CB3517F99CF56D:12449B860B58E937
        D645F0B2DECA6A77:AE6CF2335C2A220E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        20CB5BA210093A62:8550B4E7E915143E
        E139EADAED7B402E:ABBC9B420437D865
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        53BF642B6E384EC0:CF473F2559B59832
        69A0C96C380AEBF2:BD710E7B979631F6
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        038F748C06A3F607:6FC6F4AD3C0B426C
        FD3170CDC0F2A5FF:A7041B95B9263F94
        61
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16fWps7FCQSzf7MGtSa8G9PiSm5zVSK5J9
    21: OP_DATA_0x21: compressed pub key
        0373239F30DBA483:5500365C9155EBD0
        283720806E3735B6:359E3A1D1CD11FA6
        D6
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19ZPR6oMENnq94TC68A5rX8TY6a5pyS5cS
    21: OP_DATA_0x21: compressed pub key
        02FF6B9DF1F2ECA6:7947B5C19115FDCB
        6CC4A874E33BDC15:12BB4717E14BFDDF
        B1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Egpc7wLHBkbHUZXbUGgZvBL8kVAmunWYc
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221038F748C06A3:F6076FC6F4AD3C0B
        426CFD3170CDC0F2:A5FFA7041B95B926
        3F9461210373239F:30DBA4835500365C
        9155EBD028372080:6E3735B6359E3A1D
        1CD11FA6D62102FF:6B9DF1F2ECA67947
        B5C19115FDCB6CC4:A874E33BDC1512BB
        4717E14BFDDFB153:AE
        corresponding bitcoin address is:    3D3rA11SMJ4Yod2arnqKPhJ3PxPFtJ1Hor
 TX_IN[55] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[56]
 TX_IN[56] OutPoint hash (char[32])
  AEFBD187CA1F8B3D793F9E3B2BCDDC34D0EB3C15C33B4A689356B0AB665B40A9
 TX_IN[56] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[56] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[56] Script Sig (uchar[])
  0047304402201E98B56FAAD048AAE50AF6571597899D5286E78C3E88BF3535A09215020687990220750C29A29BD0D260A8935A78A747F84A49CC93B51263087C1FD15A50237C11E701473044022003E948D5454D6D93A7A33FA383C1401B5678799C6729F13B15CD88BC7A7C85A90220655B7ECD2CA0EE08DD354D38609D83CC90008A0BF6A8639180896900F46614C9014C695221031E0ACA76A9347B835C4B53AE038F33BCF4DFB88F9E8CE52AA190AEDF5F68F06E2102DB34FAB8E2FFB0AD56812B467377052A5BA8D2FDA28DB84D63DABE5C6A47E67821032BD9C8E7B0E3ECAEDC559B52C99B33D35E530E0180C5F05FEF2830665FC98F3853AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        1E98B56FAAD048AA:E50AF6571597899D
        5286E78C3E88BF35:35A0921502068799
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        750C29A29BD0D260:A8935A78A747F84A
        49CC93B51263087C:1FD15A50237C11E7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        03E948D5454D6D93:A7A33FA383C1401B
        5678799C6729F13B:15CD88BC7A7C85A9
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        655B7ECD2CA0EE08:DD354D38609D83CC
        90008A0BF6A86391:80896900F46614C9
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        031E0ACA76A9347B:835C4B53AE038F33
        BCF4DFB88F9E8CE5:2AA190AEDF5F68F0
        6E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16rvviRT97cobqoqtrJmxyy2pA3sWWiYnq
    21: OP_DATA_0x21: compressed pub key
        02DB34FAB8E2FFB0:AD56812B46737705
        2A5BA8D2FDA28DB8:4D63DABE5C6A47E6
        78
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KMadtAXdCdpzDtvoDLCT7dmyDHdP7AFKA
    21: OP_DATA_0x21: compressed pub key
        032BD9C8E7B0E3EC:AEDC559B52C99B33
        D35E530E0180C5F0:5FEF2830665FC98F
        38
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1B8iTCD3LARZrygkdkmQUK8E4ZzuWNT5Wa
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221031E0ACA76A9:347B835C4B53AE03
        8F33BCF4DFB88F9E:8CE52AA190AEDF5F
        68F06E2102DB34FA:B8E2FFB0AD56812B
        467377052A5BA8D2:FDA28DB84D63DABE
        5C6A47E67821032B:D9C8E7B0E3ECAEDC
        559B52C99B33D35E:530E0180C5F05FEF
        2830665FC98F3853:AE
        corresponding bitcoin address is:    38aU4SsLdZiqSorauEkWES1bNbxRxtNoFL
 TX_IN[56] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[57]
 TX_IN[57] OutPoint hash (char[32])
  8DEE7D06A8577D500449EED9582CA697BFB18CFCBA5DE86E69B4AB9602671D4B
 TX_IN[57] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[57] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[57] Script Sig (uchar[])
  00483045022100C767933490B40DC826FE78FA20E8FB0C4E072594DCC0C929B75D78AA7223C8200220688D787F98BCFB8EDF597E8BD8C1C737181C315A7D4C8DE6B761DA2116A5A39D014730440220749BDAE9DD8594C0257256457613B0FA801D35551CD6F16EC51541A822BD0E6402204AAE3483297A56E7FEE6D5E4C98C2064E1CD6310827FB84332DA4376647465B9014C69522103396742BB1BC1F6D018E8B823D0E309CEDE2017EF52176E5AC146A53411F2E65B2103381FE91F38B7AE1559B0E0E28F833DC18612E26A44C8006520D6C4448C8949732102122A55A0B970DAC91810991BDD26EC169AA26CF87650D3FCB1E56BF5C2D153BD53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C767933490B40D:C826FE78FA20E8FB
        0C4E072594DCC0C9:29B75D78AA7223C8
        20
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        688D787F98BCFB8E:DF597E8BD8C1C737
        181C315A7D4C8DE6:B761DA2116A5A39D
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        749BDAE9DD8594C0:257256457613B0FA
        801D35551CD6F16E:C51541A822BD0E64
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4AAE3483297A56E7:FEE6D5E4C98C2064
        E1CD6310827FB843:32DA4376647465B9
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03396742BB1BC1F6:D018E8B823D0E309
        CEDE2017EF52176E:5AC146A53411F2E6
        5B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1h1mwVRgJ4rfRtnHLyUcRr5T6LSR2ouRH
    21: OP_DATA_0x21: compressed pub key
        03381FE91F38B7AE:1559B0E0E28F833D
        C18612E26A44C800:6520D6C4448C8949
        73
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HX634nVxPcMoSoqBjGR3T7i763hgS1qS9
    21: OP_DATA_0x21: compressed pub key
        02122A55A0B970DA:C91810991BDD26EC
        169AA26CF87650D3:FCB1E56BF5C2D153
        BD
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1BJHGvtp4o3RjjvLH3krWMcg43gRrAYKqG
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103396742BB1B:C1F6D018E8B823D0
        E309CEDE2017EF52:176E5AC146A53411
        F2E65B2103381FE9:1F38B7AE1559B0E0
        E28F833DC18612E2:6A44C8006520D6C4
        448C894973210212:2A55A0B970DAC918
        10991BDD26EC169A:A26CF87650D3FCB1
        E56BF5C2D153BD53:AE
        corresponding bitcoin address is:    381TUU4W43DaMUxVSYq9sV5dg28zQEC1F4
 TX_IN[57] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[58]
 TX_IN[58] OutPoint hash (char[32])
  6C0227D90621B61FD2D484F853219FED9A3E9F8CFDE208EF59CA88A13C58B1EE
 TX_IN[58] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[58] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[58] Script Sig (uchar[])
  00483045022100C96BD4BD81912E2AB346CCFE557CF6657B4FDE91D34884DF264E0C44C0774957022006D02BEEA6027325149DD28EA20F9E61540DF1F5D6D93ABE7A2D63DEDE1C7192014730440220469A41C53D1A28E8D795FB2F91E787C36F5BDC36391B2EA7A5566D14050CF24B02203818E34BA655ACC6AD47402F118F36209D942BFC49BE2ACB871BF16F1565ECC7014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C96BD4BD81912E:2AB346CCFE557CF6
        657B4FDE91D34884:DF264E0C44C07749
        57
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        06D02BEEA6027325:149DD28EA20F9E61
        540DF1F5D6D93ABE:7A2D63DEDE1C7192
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        469A41C53D1A28E8:D795FB2F91E787C3
        6F5BDC36391B2EA7:A5566D14050CF24B
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        3818E34BA655ACC6:AD47402F118F3620
        9D942BFC49BE2ACB:871BF16F1565ECC7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[58] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[59]
 TX_IN[59] OutPoint hash (char[32])
  BF0EEB18C94BC6781145D74DA9A53716DEC792C4FEB28AE606334F50F5687F04
 TX_IN[59] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[59] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[59] Script Sig (uchar[])
  00483045022100F4AFD2C3F24F313C37B52E9B063CBF8D8D78A49C36D4E6215DD20A2304F2A78C02204A71D9FF9D5F29796BD6401199F0BE0FC2F932F86523C22D8B5B8922297FD8AA0147304402203C78064853BB5414AFDBD25FFC931D72B24F33E5CA890C6CB5DAEAADCA15C46B02204AE3D570BF8031CD1B79ECD3AE226632436F09B6079DD8680795B54D7F09B05A014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00F4AFD2C3F24F31:3C37B52E9B063CBF
        8D8D78A49C36D4E6:215DD20A2304F2A7
        8C
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        4A71D9FF9D5F2979:6BD6401199F0BE0F
        C2F932F86523C22D:8B5B8922297FD8AA
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        3C78064853BB5414:AFDBD25FFC931D72
        B24F33E5CA890C6C:B5DAEAADCA15C46B
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4AE3D570BF8031CD:1B79ECD3AE226632
        436F09B6079DD868:0795B54D7F09B05A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[59] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[60]
 TX_IN[60] OutPoint hash (char[32])
  6732630A5DCA2A80F1E4870661912BF111C73F4DA7D2F9D11448C587D997B8A9
 TX_IN[60] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[60] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[60] Script Sig (uchar[])
  00483045022100F9AED6E9010CE2088C40CDA34E16D5D3E882665D323D711DB8EAE292532D3F6F02204100C79AEAE9677308018F3E00CBF8CB09D5C87EA1AFCF4DC68115FD4E2052A7014730440220264B2B1B8C495516F76587E900F7B4A024919C97C961B26B0AAD0DBAFE208FB4022064D07AB904E48321A80624F97343A44DCADFEB8D7339D5D5CF3C572288001A01014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00F9AED6E9010CE2:088C40CDA34E16D5
        D3E882665D323D71:1DB8EAE292532D3F
        6F
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        4100C79AEAE96773:08018F3E00CBF8CB
        09D5C87EA1AFCF4D:C68115FD4E2052A7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        264B2B1B8C495516:F76587E900F7B4A0
        24919C97C961B26B:0AAD0DBAFE208FB4
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        64D07AB904E48321:A80624F97343A44D
        CADFEB8D7339D5D5:CF3C572288001A01
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[60] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[61]
 TX_IN[61] OutPoint hash (char[32])
  63941663FE127AE17BB00F7014EBE9AF247C19FBEBA81734E2086235C2E43AAD
 TX_IN[61] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[61] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[61] Script Sig (uchar[])
  00483045022100B5B493AB62AC225D3FE844DFBAC73D9B94337BAAA927B12DAB1E549BD3F079860220067438D885D7380C0EC713EB7184DDFD4CF09C136C892CC12ED0A9C248777FC8014830450221009D7F1DCAA3F22611CE1C4304487547A173F77EA3A3729D6DDFD888077DBD4DA2022033E7FA5A20674D8A9D7DB84E43654564FF4097E3BC462C5A6E070AE70EAFFFD5014C69522102FCC0B6EFE92C0B994EA5D0943B5E7818AAB2E743777D1AB6F0F1BA200DDF32D02103D10E06B59A697BD7B090E171051E2751F94ED27CF44647AA9552D3E2E5C1238D2102226CF4F899A839D52F6DA79B94524E41176AD42B368C32FDE6B0A46B4CED82AF53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B5B493AB62AC22:5D3FE844DFBAC73D
        9B94337BAAA927B1:2DAB1E549BD3F079
        86
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        067438D885D7380C:0EC713EB7184DDFD
        4CF09C136C892CC1:2ED0A9C248777FC8
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009D7F1DCAA3F226:11CE1C4304487547
        A173F77EA3A3729D:6DDFD888077DBD4D
        A2
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        33E7FA5A20674D8A:9D7DB84E43654564
        FF4097E3BC462C5A:6E070AE70EAFFFD5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02FCC0B6EFE92C0B:994EA5D0943B5E78
        18AAB2E743777D1A:B6F0F1BA200DDF32
        D0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HZj8Fz5uQMBVKBgFhkF5aMVCQfGR1AaSY
    21: OP_DATA_0x21: compressed pub key
        03D10E06B59A697B:D7B090E171051E27
        51F94ED27CF44647:AA9552D3E2E5C123
        8D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HpA3CX6KCF6VgxPdKT6jp6Dcefg2W2N1e
    21: OP_DATA_0x21: compressed pub key
        02226CF4F899A839:D52F6DA79B94524E
        41176AD42B368C32:FDE6B0A46B4CED82
        AF
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1E5D5YfLNF6bxSdxsZfeaVY5RgTJoysToC
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102FCC0B6EFE9:2C0B994EA5D0943B
        5E7818AAB2E74377:7D1AB6F0F1BA200D
        DF32D02103D10E06:B59A697BD7B090E1
        71051E2751F94ED2:7CF44647AA9552D3
        E2E5C1238D210222:6CF4F899A839D52F
        6DA79B94524E4117:6AD42B368C32FDE6
        B0A46B4CED82AF53:AE
        corresponding bitcoin address is:    34H1FZneWMzmWUbMhqGGLYzH8MnoqUMyk7
 TX_IN[61] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[62]
 TX_IN[62] OutPoint hash (char[32])
  BD07ACABEC6FB969CA8FA2A1CB1469BA835F31943B9DD1BD95E5638172B94CCF
 TX_IN[62] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[62] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[62] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        35B313EC84DAFA42:96BE1FBA0C3FA08A
        3D29D5D98F3A2522:BDE02FDA25FF5E0E
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        2066005F4BF1C207:9579A8A17D5E8CC2
        5D8975CB4B657E05:16FE30F33EA7DA96
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        6F0009610937307D:A4B8D44447C9F29A
        9B88EA0277CA0B1E:8D6D53B6C461C8BD
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        089AA152A3A611E6:DA25F5AE12747F58
        37D0156676B2F45C:BAFA7ED8A2A1966C
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02906D9B90C02BA8:04854DF748E10281
        65085EFAD289F01A:8C8680876B99403F
        C6
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EgtJ1h1fnYq7uDxhfjGFtkyoYKdGUrGs4
    21: OP_DATA_0x21: compressed pub key
        02EC98BDE69B3766:29AFBE6B4F6CFECF
        EF0E5FA0BA86C247:7D7E2D522CAD0AFA
        33
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19RHGBot3AFgqq2hbGn7zK9rebfrkmqKTS
    21: OP_DATA_0x21: compressed pub key
        0288DA2618D232E8:304051F107B42B1B
        4C6C29DF6B5EAFAE:7AE9DDAEA8E874C8
        A5
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Chi68tAL6BC4qdhwUS68EczHd8uKJBEUe
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102906D9B90C0:2BA804854DF748E1
        028165085EFAD289:F01A8C8680876B99
        403FC62102EC98BD:E69B376629AFBE6B
        4F6CFECFEF0E5FA0:BA86C2477D7E2D52
        2CAD0AFA33210288:DA2618D232E83040
        51F107B42B1B4C6C:29DF6B5EAFAE7AE9
        DDAEA8E874C8A553:AE
        corresponding bitcoin address is:    37NHoJjoVrGqfNHTRvpdorW4avhM92J1d9
 TX_IN[62] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[63]
 TX_IN[63] OutPoint hash (char[32])
  7C672406C96D8FC12056660217B89CA918FFB1FEFCFD94EFEDCDC4B18C8154DF
 TX_IN[63] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[63] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[63] Script Sig (uchar[])
  00473044022045C283108B128BC46BC03AB1F662DC9503F6CEDE82F283DCFBC55B61126ED63102204AB0C75FA89C1B167639C111E8AC45A7715644765AE1BA34B1B8BCA26A58A1A201473044022024552EC1389B13241EF7AA8A03AEF251789D4D0638EDC42EDCF0AEA6F55E56610220249C826E35EB5B6CB844C3FBB0DEB2CF393DD3D119970F476E22E53E9795FE95014C69522102DE9A06786D1E6200F82FBAADEA7058A855BFA9D5F37325D0BAF4C955FEE3884921026E4A706519B284B7DD5C393D17A93E611CBFC6A8547C60636CF70F0EE397466721030168352DFF78C904CA88F557C3EEDD335E7198C8B4BC9C0E8B0A92AD7A5EF55753AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        45C283108B128BC4:6BC03AB1F662DC95
        03F6CEDE82F283DC:FBC55B61126ED631
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4AB0C75FA89C1B16:7639C111E8AC45A7
        715644765AE1BA34:B1B8BCA26A58A1A2
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        24552EC1389B1324:1EF7AA8A03AEF251
        789D4D0638EDC42E:DCF0AEA6F55E5661
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        249C826E35EB5B6C:B844C3FBB0DEB2CF
        393DD3D119970F47:6E22E53E9795FE95
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02DE9A06786D1E62:00F82FBAADEA7058
        A855BFA9D5F37325:D0BAF4C955FEE388
        49
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19b3zoA6adxKGENTMKNqyCfTK9DaP9J1vX
    21: OP_DATA_0x21: compressed pub key
        026E4A706519B284:B7DD5C393D17A93E
        611CBFC6A8547C60:636CF70F0EE39746
        67
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17hWUK2EwVg4sMHuYJeJT1aUeXErKqQGYv
    21: OP_DATA_0x21: compressed pub key
        030168352DFF78C9:04CA88F557C3EEDD
        335E7198C8B4BC9C:0E8B0A92AD7A5EF5
        57
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    198drY3bDPRzitiK2d6UapPJCkBCDMP2zV
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102DE9A06786D:1E6200F82FBAADEA
        7058A855BFA9D5F3:7325D0BAF4C955FE
        E3884921026E4A70:6519B284B7DD5C39
        3D17A93E611CBFC6:A8547C60636CF70F
        0EE3974667210301:68352DFF78C904CA
        88F557C3EEDD335E:7198C8B4BC9C0E8B
        0A92AD7A5EF55753:AE
        corresponding bitcoin address is:    3DC9TM6QRFNtJBazgfeHssj2EcetZBznwZ
 TX_IN[63] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[64]
 TX_IN[64] OutPoint hash (char[32])
  AC31CB9EE81E1DFA6DAA23B8DF6F3AF2857E5CBE2D1B0C4AEEE26A37141971F7
 TX_IN[64] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[64] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[64] Script Sig (uchar[])
  00483045022100F79FF5A4C9A1EC4BA193AB2CDC3FA3C0A25425E733D11583F04AC0C91709AD8B02200BE56F324E2AD162C072762042A9EF7C58A5A04B87C3EBA566B051A85006F73401473044022066D375CC2675C04FE0B2BBDD70B2258A87D0EDD6A0439A77A1400FD6AECB495602205D52F116F731503CD8227EE84A49A3160ADF7658EBE2A26CDBF39F04B85CF6FB014C6952210393B0677427C3D5EBC55D61B0E2F53F4341B1A9AA961EA17AF6C74BC812BE4CD1210222CEBF5CF37D313932C09B51B740274C65F39D017C23B78B061CFF0D8643B91C2102729BA92734469A854B0C61DB2902B1B60F70827626146372B6D7F31F56480DBE53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00F79FF5A4C9A1EC:4BA193AB2CDC3FA3
        C0A25425E733D115:83F04AC0C91709AD
        8B
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0BE56F324E2AD162:C072762042A9EF7C
        58A5A04B87C3EBA5:66B051A85006F734
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        66D375CC2675C04F:E0B2BBDD70B2258A
        87D0EDD6A0439A77:A1400FD6AECB4956
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        5D52F116F731503C:D8227EE84A49A316
        0ADF7658EBE2A26C:DBF39F04B85CF6FB
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0393B0677427C3D5:EBC55D61B0E2F53F
        4341B1A9AA961EA1:7AF6C74BC812BE4C
        D1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1PRjKUN1e9RQGfthuz12w56owyeqQtySJA
    21: OP_DATA_0x21: compressed pub key
        0222CEBF5CF37D31:3932C09B51B74027
        4C65F39D017C23B7:8B061CFF0D8643B9
        1C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1H47EAfYVrkvcswyiUkH9Lemp3nvT9sVJZ
    21: OP_DATA_0x21: compressed pub key
        02729BA92734469A:854B0C61DB2902B1
        B60F708276261463:72B6D7F31F56480D
        BE
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    147hSG6vPV7L2fPkiYZ96ZxheMD55Zsagi
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210393B0677427:C3D5EBC55D61B0E2
        F53F4341B1A9AA96:1EA17AF6C74BC812
        BE4CD1210222CEBF:5CF37D313932C09B
        51B740274C65F39D:017C23B78B061CFF
        0D8643B91C210272:9BA92734469A854B
        0C61DB2902B1B60F:70827626146372B6
        D7F31F56480DBE53:AE
        corresponding bitcoin address is:    3J39jyYKaT29giExcGyB7LLs3zNvmuhgFW
 TX_IN[64] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[65]
 TX_IN[65] OutPoint hash (char[32])
  C5F8B61B01D34A9A7AB21EF7F56B2692E920B5A5FB69EC6CD184FB49BC1CD602
 TX_IN[65] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[65] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[65] Script Sig (uchar[])
  0047304402202E6204CCF651926BC612AFAA363E33495D391E8E9A865585F6E312A495DF982E022046DEB773BA4C295C751303C492C09759AE3FEEB55DFCEEB5F463C3DAFC87FE7601473044022010BF11960852CB156BBD516C034623C716B2F81627E8D1A488761D48317D24CE02204B4D5DB1467925CFED0D6EEDB81EDDB6C5B0E1966088112BCA00B57B13636547014C695221025B2CF9DF7E30659A92ABF5EDEF5ECE6F311366FD5A49E5510CC07C798D3643F52103A8B39C1855EC801AEAB688FB72F2F6634CEC236709FE8ADBDBA9ABB2A32A143921027568BA73306D9B2B9EC21CD7A0E1F163BABAB533902764018F63E92B5669FB5553AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        2E6204CCF651926B:C612AFAA363E3349
        5D391E8E9A865585:F6E312A495DF982E
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        46DEB773BA4C295C:751303C492C09759
        AE3FEEB55DFCEEB5:F463C3DAFC87FE76
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        10BF11960852CB15:6BBD516C034623C7
        16B2F81627E8D1A4:88761D48317D24CE
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4B4D5DB1467925CF:ED0D6EEDB81EDDB6
        C5B0E1966088112B:CA00B57B13636547
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025B2CF9DF7E3065:9A92ABF5EDEF5ECE
        6F311366FD5A49E5:510CC07C798D3643
        F5
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Cg1eBX3i3nCf3V5R31gcbTvbHjD76hjQD
    21: OP_DATA_0x21: compressed pub key
        03A8B39C1855EC80:1AEAB688FB72F2F6
        634CEC236709FE8A:DBDBA9ABB2A32A14
        39
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1H6KW1WXqvkKpLmoWsqy1p5T2w8BwHcVCb
    21: OP_DATA_0x21: compressed pub key
        027568BA73306D9B:2B9EC21CD7A0E1F1
        63BABAB533902764:018F63E92B5669FB
        55
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1F87XqNuWSfPv76JnWpahZt44GJPGua9oz
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025B2CF9DF7E:30659A92ABF5EDEF
        5ECE6F311366FD5A:49E5510CC07C798D
        3643F52103A8B39C:1855EC801AEAB688
        FB72F2F6634CEC23:6709FE8ADBDBA9AB
        B2A32A1439210275:68BA73306D9B2B9E
        C21CD7A0E1F163BA:BAB533902764018F
        63E92B5669FB5553:AE
        corresponding bitcoin address is:    3QZB7UNgPsoEX21bfsjxN2Zh13qnG427as
 TX_IN[65] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[66]
 TX_IN[66] OutPoint hash (char[32])
  E2C6EBF7F1A8368AB3BBE18029EFBDC2965EE325C8EBEB52BA4E45534B03BDE3
 TX_IN[66] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[66] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[66] Script Sig (uchar[])
  00483045022100C9DDE03E1EB3CC98595C99A42E234273CBE7B30C2156515FA7962484AC90D77B02203A52C4F419CDD0B05B4E799E71E44F4BD0A717DB3C83048BD7D969BDB3CF5F6B014730440220177A55EF35DB28E52182EE7ECE7036C2FABBBEBC0D6B678F8C549F7594F4EE0F022076ED671674C2C690C8446B58C7A99F81161F1CD39B0E53FB0724803ABAA022AD014C6952210346B4ECB78D2F73008FB62B16BE86514C7437E987AEE6657E99D1358DA0B658A6210366231FF2EDF20B9BF049A1E706D54E38272DF34FF572DE56E1C5A5BD3203D4752103DC98240E06A8CAD17D46DECF1405BE4EDB733B7A15805D1B97C15D5267D99DDC53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C9DDE03E1EB3CC:98595C99A42E2342
        73CBE7B30C215651:5FA7962484AC90D7
        7B
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3A52C4F419CDD0B0:5B4E799E71E44F4B
        D0A717DB3C83048B:D7D969BDB3CF5F6B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        177A55EF35DB28E5:2182EE7ECE7036C2
        FABBBEBC0D6B678F:8C549F7594F4EE0F
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        76ED671674C2C690:C8446B58C7A99F81
        161F1CD39B0E53FB:0724803ABAA022AD
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0346B4ECB78D2F73:008FB62B16BE8651
        4C7437E987AEE665:7E99D1358DA0B658
        A6
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1JR3fp4R5JpkuKxbmkEn9vgoNyfhUTgCk4
    21: OP_DATA_0x21: compressed pub key
        0366231FF2EDF20B:9BF049A1E706D54E
        38272DF34FF572DE:56E1C5A5BD3203D4
        75
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KK5NG6QqvXa7YmKAUNmYSRiKAPsjnVsYt
    21: OP_DATA_0x21: compressed pub key
        03DC98240E06A8CA:D17D46DECF1405BE
        4EDB733B7A15805D:1B97C15D5267D99D
        DC
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13Yh78Te6yCqpXjDfWnaXnbD2PmqWsAnTp
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210346B4ECB78D:2F73008FB62B16BE
        86514C7437E987AE:E6657E99D1358DA0
        B658A6210366231F:F2EDF20B9BF049A1
        E706D54E38272DF3:4FF572DE56E1C5A5
        BD3203D4752103DC:98240E06A8CAD17D
        46DECF1405BE4EDB:733B7A15805D1B97
        C15D5267D99DDC53:AE
        corresponding bitcoin address is:    37o7R77kZT5t9DFPmkjMbWcYjBCE89zBcp
 TX_IN[66] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[67]
 TX_IN[67] OutPoint hash (char[32])
  A45730574AC59818522962C7F0385BC68EC95CE4E4F62B61CDF76DCF220C903D
 TX_IN[67] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[67] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[67] Script Sig (uchar[])
  00483045022100FD2FF19078B254E1A41ED0F1596DC2392D0C2A998E3EB470CB31B31F136637C3022031DF8B32A1101EE7F15A4DECE86502F8C5D22ED2D19BB73FFFBED372549E83ED01483045022100E3FEC88D3D77F68EA75F3C712E3A51570D9CA7EEBA35B029AF3D0094467B8F2A022005535EA72A2A07EBF48194838CFF660A4F4094B5741868B6E9619D0F1CFAA10A014C6952210211A7CB0CB092D7B888854F94B2BC0F0DCB001B1651A69192789C153C69C55C062103072398E75AEAD5BC131E6EF350258CDBA7A5E5B2F0240588A8702EADF013CC5D2103D654AA76B7A3E560B22F33E494882872A9E205271C5726E340246B4D373EFD0E53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00FD2FF19078B254:E1A41ED0F1596DC2
        392D0C2A998E3EB4:70CB31B31F136637
        C3
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        31DF8B32A1101EE7:F15A4DECE86502F8
        C5D22ED2D19BB73F:FFBED372549E83ED
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00E3FEC88D3D77F6:8EA75F3C712E3A51
        570D9CA7EEBA35B0:29AF3D0094467B8F
        2A
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        05535EA72A2A07EB:F48194838CFF660A
        4F4094B5741868B6:E9619D0F1CFAA10A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0211A7CB0CB092D7:B888854F94B2BC0F
        0DCB001B1651A691:92789C153C69C55C
        06
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Ke4qm2tpHHQA8Rw94vSfCt846LgGWTmhJ
    21: OP_DATA_0x21: compressed pub key
        03072398E75AEAD5:BC131E6EF350258C
        DBA7A5E5B2F02405:88A8702EADF013CC
        5D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1K11oKrkA4tLu4RcXFgSAn94D47FzDon3F
    21: OP_DATA_0x21: compressed pub key
        03D654AA76B7A3E5:60B22F33E4948828
        72A9E205271C5726:E340246B4D373EFD
        0E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15vgK4eJfxbZYxtKPYeUGbK86pFkiu4GNg
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210211A7CB0CB0:92D7B888854F94B2
        BC0F0DCB001B1651:A69192789C153C69
        C55C062103072398:E75AEAD5BC131E6E
        F350258CDBA7A5E5:B2F0240588A8702E
        ADF013CC5D2103D6:54AA76B7A3E560B2
        2F33E494882872A9:E205271C5726E340
        246B4D373EFD0E53:AE
        corresponding bitcoin address is:    3CRgjr1fqJzPUKm2HtMLeGx5YQwXCh8p8D
 TX_IN[67] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[68]
 TX_IN[68] OutPoint hash (char[32])
  82CF372A49CCF54F1C57A8ADAE83C6621984E48F7D4EE98383A1D419ADC9161F
 TX_IN[68] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[68] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[68] Script Sig (uchar[])
  0048304502210084EDBD0CC5787F5EA097AC8E0F5863798344A1FDD102725B7B316F7BF19C5692022060C0245F63BF8EE64C4B78DC8E15A90F05E2BFA9B19E9280BCFE039B0DA2717B01473044022069466DA2797B7BFC05B8015346303D49604AE4424D8E012A72BBBCAE0089E9AE0220397407507C148B687B1BA27C59F87F2AE44E814D7302D034687EAFBE10D5A880014C69522102F05A2421087E5678FC2EED95FAF3B4CD689C2D35743325E02ED882D6B3D7B0752103239D4B6428936ED2D4971491B34D3B25BC8B7D5434EE5F47F1263B3C710452F92103225AF522811CA8B6D059902240DDB5B0B62D17E48F495A841D84502B162B585253AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        0084EDBD0CC5787F:5EA097AC8E0F5863
        798344A1FDD10272:5B7B316F7BF19C56
        92
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        60C0245F63BF8EE6:4C4B78DC8E15A90F
        05E2BFA9B19E9280:BCFE039B0DA2717B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        69466DA2797B7BFC:05B8015346303D49
        604AE4424D8E012A:72BBBCAE0089E9AE
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        397407507C148B68:7B1BA27C59F87F2A
        E44E814D7302D034:687EAFBE10D5A880
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02F05A2421087E56:78FC2EED95FAF3B4
        CD689C2D35743325:E02ED882D6B3D7B0
        75
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FRmUq5jRm29iy7eLZjRYKTNxAmtGdYvq7
    21: OP_DATA_0x21: compressed pub key
        03239D4B6428936E:D2D4971491B34D3B
        25BC8B7D5434EE5F:47F1263B3C710452
        F9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1B7DhSwLqDXDWN3MWNZtQj1zpXukbFMdDP
    21: OP_DATA_0x21: compressed pub key
        03225AF522811CA8:B6D059902240DDB5
        B0B62D17E48F495A:841D84502B162B58
        52
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1K8R5ojy9bMaCpUzM4LBLbbvdmxE5ZG4SD
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102F05A242108:7E5678FC2EED95FA
        F3B4CD689C2D3574:3325E02ED882D6B3
        D7B0752103239D4B:6428936ED2D49714
        91B34D3B25BC8B7D:5434EE5F47F1263B
        3C710452F9210322:5AF522811CA8B6D0
        59902240DDB5B0B6:2D17E48F495A841D
        84502B162B585253:AE
        corresponding bitcoin address is:    32ezdA2L2gXCF6zoohxjo9YyLf4Pn6Ypjy
 TX_IN[68] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[69]
 TX_IN[69] OutPoint hash (char[32])
  C634472B3D0B7FEF1471AFB065B83BA4AB9790DBCA37CA7F589025DB307785AD
 TX_IN[69] OutPoint index (uint32_t)
  hex=13000000, reversed=00000013, decimal=19
 TX_IN[69] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[69] Script Sig (uchar[])
  00483045022100993D53530ACA860870B942A4479AADB24B1E77FF9E7FE54690630B17BB6F57B202202E36B1F316385982B0FFDE97D3380EAA32770EF9E92BCC6C6E446904C652BBBA0147304402204ACA3E6A5A773074CBCB07620F7DA31B4027FDA6E9081DD5D0263CD0F04BEB530220351F6F6C96904A8F9D7D68AD377DFE9349956355932CBE4CBDB99DC2A9909FD3014C69522102F478670237003AE3190A3AB2B0CBB7EC36D87B59517E61B97E0D2EAA432173672102485AD8E4CA194DF5C045E56C56AFC6FA209A5DB99A252D7060CB3163348E101C210270FB87713E0C3CD41BB89F5E62A000BCFA9819F325D18F5BDA81863E72F8E37453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00993D53530ACA86:0870B942A4479AAD
        B24B1E77FF9E7FE5:4690630B17BB6F57
        B2
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        2E36B1F316385982:B0FFDE97D3380EAA
        32770EF9E92BCC6C:6E446904C652BBBA
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        4ACA3E6A5A773074:CBCB07620F7DA31B
        4027FDA6E9081DD5:D0263CD0F04BEB53
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        351F6F6C96904A8F:9D7D68AD377DFE93
        49956355932CBE4C:BDB99DC2A9909FD3
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02F478670237003A:E3190A3AB2B0CBB7
        EC36D87B59517E61:B97E0D2EAA432173
        67
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EvYBBT8K7rKtEE3xp4EUajtiqRjm7QYio
    21: OP_DATA_0x21: compressed pub key
        02485AD8E4CA194D:F5C045E56C56AFC6
        FA209A5DB99A252D:7060CB3163348E10
        1C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    167PS14U83y6iTx6JHbPfukvHmtVb5C3Ly
    21: OP_DATA_0x21: compressed pub key
        0270FB87713E0C3C:D41BB89F5E62A000
        BCFA9819F325D18F:5BDA81863E72F8E3
        74
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CLfspim9setymB2HJ8TuATFYBnGf31Qit
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102F478670237:003AE3190A3AB2B0
        CBB7EC36D87B5951:7E61B97E0D2EAA43
        2173672102485AD8:E4CA194DF5C045E5
        6C56AFC6FA209A5D:B99A252D7060CB31
        63348E101C210270:FB87713E0C3CD41B
        B89F5E62A000BCFA:9819F325D18F5BDA
        81863E72F8E37453:AE
        corresponding bitcoin address is:    3QXxCVevmhtJk73GJKGwBqUZv7nEMZ5mXJ
 TX_IN[69] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[70]
 TX_IN[70] OutPoint hash (char[32])
  7F69F68EE580901B78D49C4118BE4921A732D12668CAE7FA0DE6CD387909A09E
 TX_IN[70] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[70] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[70] Script Sig (uchar[])
  0047304402202C48BBA75B721C9B06D33D1BB6D1D9468431A0D1E91BC0C3F4D0DAB130D7DB1902202159A64E50481EE5F45AE372ADE905A79F3128E22A1EAB99C7E8FC1D2333ABFF01473044022004BE8D70C9A9697FAF2145FACA292E4B86C4EC9BB86AC81010CC95E8066F46E902202FEF59E52AF327AF895BAFCC86050D47F7E10731AA95DBC950C36CD9FAF9EFBD014C69522103D555AF53B33CF28A53BED4A2851F22C47503B0D7A1C957F29F484F590F054319210229CB4F22F807DB7D5B351E0A530030BB791D837091E04B6B43D2005C17091CF321036822943B630513AD7E4B0235489C303394D0D26A9DEC80FBA7922EA90CE8E44B53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        2C48BBA75B721C9B:06D33D1BB6D1D946
        8431A0D1E91BC0C3:F4D0DAB130D7DB19
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        2159A64E50481EE5:F45AE372ADE905A7
        9F3128E22A1EAB99:C7E8FC1D2333ABFF
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        04BE8D70C9A9697F:AF2145FACA292E4B
        86C4EC9BB86AC810:10CC95E8066F46E9
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        2FEF59E52AF327AF:895BAFCC86050D47
        F7E10731AA95DBC9:50C36CD9FAF9EFBD
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03D555AF53B33CF2:8A53BED4A2851F22
        C47503B0D7A1C957:F29F484F590F0543
        19
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1JEukjmrpzFmFags37UjYnCCxZ47qkttAN
    21: OP_DATA_0x21: compressed pub key
        0229CB4F22F807DB:7D5B351E0A530030
        BB791D837091E04B:6B43D2005C17091C
        F3
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19mucB9NYvDEJokkf5eDLqSBP744KvWctU
    21: OP_DATA_0x21: compressed pub key
        036822943B630513:AD7E4B0235489C30
        3394D0D26A9DEC80:FBA7922EA90CE8E4
        4B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HgSHohTg5fn9tqTwzfwmPJPkA8dJxugtu
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103D555AF53B3:3CF28A53BED4A285
        1F22C47503B0D7A1:C957F29F484F590F
        054319210229CB4F:22F807DB7D5B351E
        0A530030BB791D83:7091E04B6B43D200
        5C17091CF3210368:22943B630513AD7E
        4B0235489C303394:D0D26A9DEC80FBA7
        922EA90CE8E44B53:AE
        corresponding bitcoin address is:    3LV7cLcT9dXUoZ91LD7FG1B1iW4sSS52tm
 TX_IN[70] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[71]
 TX_IN[71] OutPoint hash (char[32])
  6BBB7340DDECE0D18E928C7B5B044FE8010F8D9EFA9D589A381CBD1B1FF19657
 TX_IN[71] OutPoint index (uint32_t)
  hex=0D000000, reversed=0000000D, decimal=13
 TX_IN[71] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[71] Script Sig (uchar[])
  00483045022100CF86EE87F1E11B48903CB5EC37CC173F6FB4DF9700EF41D564BC2DE3576C5259022004D8099F93D705DCF3C5FF4345276A9EEB4B8B8BF44053FD85F0FFB0DB9B864D01483045022100D14C20574617CD7BB95B351102CC50FB2B5CAA01BC7863C0A026B0718EB69461022003E3618C925DCD282D5966A741BC17B79543A0ADA245A166A7C58C49C9827F5E014C69522102F478670237003AE3190A3AB2B0CBB7EC36D87B59517E61B97E0D2EAA432173672102485AD8E4CA194DF5C045E56C56AFC6FA209A5DB99A252D7060CB3163348E101C210270FB87713E0C3CD41BB89F5E62A000BCFA9819F325D18F5BDA81863E72F8E37453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00CF86EE87F1E11B:48903CB5EC37CC17
        3F6FB4DF9700EF41:D564BC2DE3576C52
        59
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        04D8099F93D705DC:F3C5FF4345276A9E
        EB4B8B8BF44053FD:85F0FFB0DB9B864D
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00D14C20574617CD:7BB95B351102CC50
        FB2B5CAA01BC7863:C0A026B0718EB694
        61
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        03E3618C925DCD28:2D5966A741BC17B7
        9543A0ADA245A166:A7C58C49C9827F5E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02F478670237003A:E3190A3AB2B0CBB7
        EC36D87B59517E61:B97E0D2EAA432173
        67
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EvYBBT8K7rKtEE3xp4EUajtiqRjm7QYio
    21: OP_DATA_0x21: compressed pub key
        02485AD8E4CA194D:F5C045E56C56AFC6
        FA209A5DB99A252D:7060CB3163348E10
        1C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    167PS14U83y6iTx6JHbPfukvHmtVb5C3Ly
    21: OP_DATA_0x21: compressed pub key
        0270FB87713E0C3C:D41BB89F5E62A000
        BCFA9819F325D18F:5BDA81863E72F8E3
        74
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CLfspim9setymB2HJ8TuATFYBnGf31Qit
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102F478670237:003AE3190A3AB2B0
        CBB7EC36D87B5951:7E61B97E0D2EAA43
        2173672102485AD8:E4CA194DF5C045E5
        6C56AFC6FA209A5D:B99A252D7060CB31
        63348E101C210270:FB87713E0C3CD41B
        B89F5E62A000BCFA:9819F325D18F5BDA
        81863E72F8E37453:AE
        corresponding bitcoin address is:    3QXxCVevmhtJk73GJKGwBqUZv7nEMZ5mXJ
 TX_IN[71] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[72]
 TX_IN[72] OutPoint hash (char[32])
  2199152A49AE95AE01E5F748BF69CA3063236066EC82CC976E5CDC56E82189EC
 TX_IN[72] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[72] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[72] Script Sig (uchar[])
  00483045022100DC01C0B4CED00C63C52B3CDECDD01A0FE528F31839DA1A119AD506D0660CF88C02206A1E14963A52BEACC3EFC3B854229AD4980FAB16EF07C52EE98E10C216789D930147304402206F35CFEA21DEFEDEED53227443EEA2FBBB563182EB23D74FA9CB2C59427AC47D02203F1BBAAF4E885BEBEFD2508071DE6EDE421D395C8E0C58A34A8165596DC358F5014C69522103DD55D05A9B6BA1411379F5D23FA6606F52106875479E2C86F5CFFA7622B502E02103FA23F6634E4D747661AF941C17C4A3E90770F39D85045FDEE888F14CED2345AA21029F73F46464AC5B425C7844C3D94CEEE8EF05674FC00B9D831BE18E01A5D8585253AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00DC01C0B4CED00C:63C52B3CDECDD01A
        0FE528F31839DA1A:119AD506D0660CF8
        8C
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6A1E14963A52BEAC:C3EFC3B854229AD4
        980FAB16EF07C52E:E98E10C216789D93
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        6F35CFEA21DEFEDE:ED53227443EEA2FB
        BB563182EB23D74F:A9CB2C59427AC47D
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        3F1BBAAF4E885BEB:EFD2508071DE6EDE
        421D395C8E0C58A3:4A8165596DC358F5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03DD55D05A9B6BA1:411379F5D23FA660
        6F52106875479E2C:86F5CFFA7622B502
        E0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    137useURauA78ikCDCbgoRBC5xrUC4ewau
    21: OP_DATA_0x21: compressed pub key
        03FA23F6634E4D74:7661AF941C17C4A3
        E90770F39D85045F:DEE888F14CED2345
        AA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1AqYJTGswvCsuVrwvYNwy1wSoGMXdprpFp
    21: OP_DATA_0x21: compressed pub key
        029F73F46464AC5B:425C7844C3D94CEE
        E8EF05674FC00B9D:831BE18E01A5D858
        52
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NfJLKdtjXieLbQ5EkUEaG1BSHdMPiELCa
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103DD55D05A9B:6BA1411379F5D23F
        A6606F5210687547:9E2C86F5CFFA7622
        B502E02103FA23F6:634E4D747661AF94
        1C17C4A3E90770F3:9D85045FDEE888F1
        4CED2345AA21029F:73F46464AC5B425C
        7844C3D94CEEE8EF:05674FC00B9D831B
        E18E01A5D8585253:AE
        corresponding bitcoin address is:    36jWsMtwD94saVoRQp8LaFuhhrLLAfbvy4
 TX_IN[72] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[73]
 TX_IN[73] OutPoint hash (char[32])
  220414751AE5FD0CC8B3E96A3AAF9E173AF8EC49554E0E86F20CD75AC30B1594
 TX_IN[73] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[73] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[73] Script Sig (uchar[])
  0047304402203A122B039996E3CB610AE888B2658B995A6BF324FD016EA7B24F5D7DCB7A9A49022001A9594187FD5151C9962C74296C5259879BA89837C42B9220C2B25BD89F13BC01483045022100FE4948D1B9907719E6476BD3DF1F2BDEA2D0131EC48FEA2C2E2A80E3D17DDD9D02202B032B5ED8ECE8485DD58F16C88BF1729D83E59428ED5C84BA2E636B516DD0CF014C69522102F9ACF4667D1927AC7B477ECD34470B7AFEF237017BF87C47FB0E5A96B6AA0E392102A6FCA18815964D150465AF3028273C91EDF1277DB82CCF3EE151234499A67403210326BE8916D27C263AB47FDCE9CFD2B73E1AB26515B6B3548251EFCDDD9392A95653AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        3A122B039996E3CB:610AE888B2658B99
        5A6BF324FD016EA7:B24F5D7DCB7A9A49
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        01A9594187FD5151:C9962C74296C5259
        879BA89837C42B92:20C2B25BD89F13BC
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00FE4948D1B99077:19E6476BD3DF1F2B
        DEA2D0131EC48FEA:2C2E2A80E3D17DDD
        9D
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        2B032B5ED8ECE848:5DD58F16C88BF172
        9D83E59428ED5C84:BA2E636B516DD0CF
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02F9ACF4667D1927:AC7B477ECD34470B
        7AFEF237017BF87C:47FB0E5A96B6AA0E
        39
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NCGmjZjwE9hsj2cxb3MLG1GS1ZfgM2HDS
    21: OP_DATA_0x21: compressed pub key
        02A6FCA18815964D:150465AF3028273C
        91EDF1277DB82CCF:3EE151234499A674
        03
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15m1QZHV9A3FbVvpHo5EkMbxYiApUa254W
    21: OP_DATA_0x21: compressed pub key
        0326BE8916D27C26:3AB47FDCE9CFD2B7
        3E1AB26515B6B354:8251EFCDDD9392A9
        56
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16j65zK8PoAwhsSpTdKTVKUPCvXpck4kx7
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102F9ACF4667D:1927AC7B477ECD34
        470B7AFEF237017B:F87C47FB0E5A96B6
        AA0E392102A6FCA1:8815964D150465AF
        3028273C91EDF127:7DB82CCF3EE15123
        4499A67403210326:BE8916D27C263AB4
        7FDCE9CFD2B73E1A:B26515B6B3548251
        EFCDDD9392A95653:AE
        corresponding bitcoin address is:    3JwTVQh3hEizW8YXTXgRwGxXjBsJVs9Vjx
 TX_IN[73] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[74]
 TX_IN[74] OutPoint hash (char[32])
  61D6D516E9AA012383BA5C64619A66BE1CE6AC2B0ED4F502E34892CEB2F4DD9B
 TX_IN[74] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[74] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[74] Script Sig (uchar[])
  00483045022100BA2B976E1A28E0C6CA61F263992DB12B888882A45074A5CECAE85202447BBD3202202C50FE1FEF1611D35B432AF46A0B9A0F15D985346520F68FFE021B202FC01BD501483045022100AB297A66A8A564DE4768568365192F6C1BF61F202C2AD8808AC9D07D5548B85B0220310F0E88D0FDA9B4E777F8B8192732A768E9814B18400730FF0077DF7E4A26BF014C69522103B02DFD3C22026716066D1687A2AD9B3F5CE84AFB4C412FB247B5653D5D1CFE332102EB7B57A645B89BF2871B926593C8393891B4E059DD7B836A0583C731180022DA2103A0B96A7DCA608C925F703F44BCB2C0DBBD7B674505AFE9C2DF998F05FF6D9AF453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00BA2B976E1A28E0:C6CA61F263992DB1
        2B888882A45074A5:CECAE85202447BBD
        32
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        2C50FE1FEF1611D3:5B432AF46A0B9A0F
        15D985346520F68F:FE021B202FC01BD5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00AB297A66A8A564:DE4768568365192F
        6C1BF61F202C2AD8:808AC9D07D5548B8
        5B
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        310F0E88D0FDA9B4:E777F8B8192732A7
        68E9814B18400730:FF0077DF7E4A26BF
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03B02DFD3C220267:16066D1687A2AD9B
        3F5CE84AFB4C412F:B247B5653D5D1CFE
        33
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EVsGjWWZZn48jtxUymrsUM3fPbLmH5F5f
    21: OP_DATA_0x21: compressed pub key
        02EB7B57A645B89B:F2871B926593C839
        3891B4E059DD7B83:6A0583C731180022
        DA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13LyLzu2HZ2XU7kFvkTD3E9LfSgg1moykj
    21: OP_DATA_0x21: compressed pub key
        03A0B96A7DCA608C:925F703F44BCB2C0
        DBBD7B674505AFE9:C2DF998F05FF6D9A
        F4
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KuUDcntX3bH1FbAZCLcHUm3PQTtkNYeqQ
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103B02DFD3C22:026716066D1687A2
        AD9B3F5CE84AFB4C:412FB247B5653D5D
        1CFE332102EB7B57:A645B89BF2871B92
        6593C8393891B4E0:59DD7B836A0583C7
        31180022DA2103A0:B96A7DCA608C925F
        703F44BCB2C0DBBD:7B674505AFE9C2DF
        998F05FF6D9AF453:AE
        corresponding bitcoin address is:    3Lmn8D6R9GEPSMEju5uv3Be7dRMCCTQfB8
 TX_IN[74] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[75]
 TX_IN[75] OutPoint hash (char[32])
  A3B15B45C18C8EC9ABA50DE4637ED6585FEF7FD681CCCC43D2105511321F7FD6
 TX_IN[75] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[75] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[75] Script Sig (uchar[])
  004830450221009FB5FB1A30953417F2D41CA76B132F2CB3C440270759E8FB21FDAEACC33C2A0E022062098468B9C463BDFC91D69FFC25BBF3FF134ABF2860AAA8E1CA26997C876E150148304502210082B9504444495BD67E89E2416720F01B5198314C883CC683A07944A0B66FC8050220414FDFB0FAE42643C9D0C7C9A54823CC21EE1BD93A5CDBB9C3DD4FFF3D3625A6014C6952210231DA78BF06B940F60CC435D07659AFF84C496FCB89A5A9B209DB089B3A4CECE821024D68FF228BD8300A70873528E342BB1D3280BAA06A1D1ACA2E10A1A8BF5C55E4210307BBE53F52DF42596F12CDCCED93B1A6866AE20E3EE3947D149A5F5367E87FC653AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009FB5FB1A309534:17F2D41CA76B132F
        2CB3C440270759E8:FB21FDAEACC33C2A
        0E
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        62098468B9C463BD:FC91D69FFC25BBF3
        FF134ABF2860AAA8:E1CA26997C876E15
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        0082B9504444495B:D67E89E2416720F0
        1B5198314C883CC6:83A07944A0B66FC8
        05
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        414FDFB0FAE42643:C9D0C7C9A54823CC
        21EE1BD93A5CDBB9:C3DD4FFF3D3625A6
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0231DA78BF06B940:F60CC435D07659AF
        F84C496FCB89A5A9:B209DB089B3A4CEC
        E8
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1DBgw9B3M5nk3EMmEcsUAMcCVs5Gq2G6g5
    21: OP_DATA_0x21: compressed pub key
        024D68FF228BD830:0A70873528E342BB
        1D3280BAA06A1D1A:CA2E10A1A8BF5C55
        E4
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QKuiRX8Q3mMdawF9rEbiDqr8pQ8d3KMPe
    21: OP_DATA_0x21: compressed pub key
        0307BBE53F52DF42:596F12CDCCED93B1
        A6866AE20E3EE394:7D149A5F5367E87F
        C6
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1D2g6cq4KaDzSx3MjY5NYwdx4HbxriQX6J
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210231DA78BF06:B940F60CC435D076
        59AFF84C496FCB89:A5A9B209DB089B3A
        4CECE821024D68FF:228BD8300A708735
        28E342BB1D3280BA:A06A1D1ACA2E10A1
        A8BF5C55E4210307:BBE53F52DF42596F
        12CDCCED93B1A686:6AE20E3EE3947D14
        9A5F5367E87FC653:AE
        corresponding bitcoin address is:    3NDNdYbBGmmyoacbzxpAagv4nKr1Lsxk3P
 TX_IN[75] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[76]
 TX_IN[76] OutPoint hash (char[32])
  532137BD2F58149E7EBA1064C8B5B831E41A24B2731982A384772B4B00CFE8D8
 TX_IN[76] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[76] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[76] Script Sig (uchar[])
  0047304402206ADF84AA1D94D7C37DF7EC9DF1A085B580957241DEA5F2A7A114322298363DE902201CFBE15D37D240B886A5F30793145674AB1C5C2DAA04623D885D8A2AA29B383E0147304402202D2DC3EB576E5B994C4E2B03748C6DA2BEFF8BB8CD5EA956A23B0C75F86C94F7022075E0DB953867D1F3D75D1484D4F6C21F415B7EEF053655112E01762F33283C08014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        6ADF84AA1D94D7C3:7DF7EC9DF1A085B5
        80957241DEA5F2A7:A114322298363DE9
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        1CFBE15D37D240B8:86A5F30793145674
        AB1C5C2DAA04623D:885D8A2AA29B383E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        2D2DC3EB576E5B99:4C4E2B03748C6DA2
        BEFF8BB8CD5EA956:A23B0C75F86C94F7
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        75E0DB953867D1F3:D75D1484D4F6C21F
        415B7EEF05365511:2E01762F33283C08
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[76] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[77]
 TX_IN[77] OutPoint hash (char[32])
  422D5BBB01D250E34A98493616B2B672D9FFD19400D3172A1B68022315A58A0B
 TX_IN[77] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[77] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[77] Script Sig (uchar[])
  0047304402202CEA33E8C81297D05BE70ABE308E40B779F855A36DFF0576555CA610A98F67B5022016B77325AD7F52E00E639671A7FF5DACA849E10875F4B59DE4F5F8FF5AF41A1001483045022100A9FBC3AE8C7A39049607EFF99D844460F7074EE1EB404FF604CEB56037E6274D02206F8D346F7380D2E239C365EE55AE89D435A7CB6692661966CA5790CFDD2E8385014C69522102AE1FC27950D7A83C42C569083DB5092161ABF7ED008784E40F8A078FBB08FDC52102F7FD89D863AEEAFBAE8FED1B5A403D27111D64527A537EB6BBF0488568D1E32921038A215026A0D3A27E47976E74298193766C0279057698E4A95BED18F078672F4553AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        2CEA33E8C81297D0:5BE70ABE308E40B7
        79F855A36DFF0576:555CA610A98F67B5
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        16B77325AD7F52E0:0E639671A7FF5DAC
        A849E10875F4B59D:E4F5F8FF5AF41A10
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A9FBC3AE8C7A39:049607EFF99D8444
        60F7074EE1EB404F:F604CEB56037E627
        4D
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6F8D346F7380D2E2:39C365EE55AE89D4
        35A7CB6692661966:CA5790CFDD2E8385
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02AE1FC27950D7A8:3C42C569083DB509
        2161ABF7ED008784:E40F8A078FBB08FD
        C5
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FPpLVS1yEnjfaaDE59nNNNjui2fB6CRTE
    21: OP_DATA_0x21: compressed pub key
        02F7FD89D863AEEA:FBAE8FED1B5A403D
        27111D64527A537E:B6BBF0488568D1E3
        29
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    132cypY36wouYq7UM8iypcRQHf1C1hTMtT
    21: OP_DATA_0x21: compressed pub key
        038A215026A0D3A2:7E47976E74298193
        766C0279057698E4:A95BED18F078672F
        45
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16JvWs9p8wTiWjm8jDUFfNGWeRGtFSUJVd
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102AE1FC27950:D7A83C42C569083D
        B5092161ABF7ED00:8784E40F8A078FBB
        08FDC52102F7FD89:D863AEEAFBAE8FED
        1B5A403D27111D64:527A537EB6BBF048
        8568D1E32921038A:215026A0D3A27E47
        976E74298193766C:0279057698E4A95B
        ED18F078672F4553:AE
        corresponding bitcoin address is:    36n7KmaZQhmZ84KX3M1QPUkCx9pH5E4d5j
 TX_IN[77] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[78]
 TX_IN[78] OutPoint hash (char[32])
  63C862E7F88748F7C7BDD3C637DBFEF5502D4FAA9DB407800D9AEF9497C592D4
 TX_IN[78] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[78] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[78] Script Sig (uchar[])
  00483045022100DB153BE5926AA5DD0E3767A4C06E902E98100ECF99D3A994B47D9ABF79B8A5000220739E98295DCA6DC8AD380C4F97EDD610109E1546D7D1FFEDDC951B1DA5FC37D5014730440220267129777C1C5B7297C29CB9C411D1216B146C9AE91FFB31DED8B533CAF24C0D0220061EF568C881D7B2022720A6FCCEDB025EFB280C5DCBBD5EF55088A34B584FF0014C69522102BDFFB38272FFF736966DB91E8B3C4DD93D2EF748F1E5F8932C984104C3850F582102F99FD6640FE8A4D750F9943166AA04B2A73E39994367E03BE1314BACE8BA8B83210361B472988399FD01D829006FA521FED048EE1DE5FE358612CC2F1F212BA75E0A53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00DB153BE5926AA5:DD0E3767A4C06E90
        2E98100ECF99D3A9:94B47D9ABF79B8A5
        00
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        739E98295DCA6DC8:AD380C4F97EDD610
        109E1546D7D1FFED:DC951B1DA5FC37D5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        267129777C1C5B72:97C29CB9C411D121
        6B146C9AE91FFB31:DED8B533CAF24C0D
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        061EF568C881D7B2:022720A6FCCEDB02
        5EFB280C5DCBBD5E:F55088A34B584FF0
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02BDFFB38272FFF7:36966DB91E8B3C4D
        D93D2EF748F1E5F8:932C984104C3850F
        58
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MaocFf4mXw4Spfm37qyhHTZAbdoEXWaFo
    21: OP_DATA_0x21: compressed pub key
        02F99FD6640FE8A4:D750F9943166AA04
        B2A73E39994367E0:3BE1314BACE8BA8B
        83
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1JuwdByN6SoRjWur3TJckgXMgtFwgCTYaE
    21: OP_DATA_0x21: compressed pub key
        0361B472988399FD:01D829006FA521FE
        D048EE1DE5FE3586:12CC2F1F212BA75E
        0A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17ui69tGAbtuWueKBiGM7Lksitycqwty71
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102BDFFB38272:FFF736966DB91E8B
        3C4DD93D2EF748F1:E5F8932C984104C3
        850F582102F99FD6:640FE8A4D750F994
        3166AA04B2A73E39:994367E03BE1314B
        ACE8BA8B83210361:B472988399FD01D8
        29006FA521FED048:EE1DE5FE358612CC
        2F1F212BA75E0A53:AE
        corresponding bitcoin address is:    3B7rfMmQsjMrGivUVaV25tFMQXQkYgBTJo
 TX_IN[78] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[79]
 TX_IN[79] OutPoint hash (char[32])
  8A339606C9F2B1C9A4E1A70215FC010D1BBD90CFE029EA66CBE5BB98CE41F317
 TX_IN[79] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[79] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[79] Script Sig (uchar[])
  00473044022003FB8DB31DE5D00BB5998992D1E332D1AC2E453A15FA2AF5049ECB9E46767C160220369A83D36CEB9B06FBB4460BEC4037E037BD779770735F3690392275A88C76D301483045022100CDEB455A0FC618F3EC32BB4EBE8974107742DCA3AF506B8EAFD76576006F7423022054589090B450699876083F7A06ECF7538FB2C59AFD92874804D6CBACBE547B37014C69522102F08BA205457079467CFD72D084A57945514CA256669C599AF8ED14C43E857F7D21023D7AEDC0D5B4ED14D3F3370B269B75EA8F244AB802CEAE526718735D72F93A1821032B8F2FB30ADF9B555884EEC6D4A7A90091B5EA98974A5DEF15D16DAF366EE7BB53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        03FB8DB31DE5D00B:B5998992D1E332D1
        AC2E453A15FA2AF5:049ECB9E46767C16
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        369A83D36CEB9B06:FBB4460BEC4037E0
        37BD779770735F36:90392275A88C76D3
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00CDEB455A0FC618:F3EC32BB4EBE8974
        107742DCA3AF506B:8EAFD76576006F74
        23
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        54589090B4506998:76083F7A06ECF753
        8FB2C59AFD928748:04D6CBACBE547B37
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02F08BA205457079:467CFD72D084A579
        45514CA256669C59:9AF8ED14C43E857F
        7D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1JScDs1umdR9tqtwHbeMpbek5bWBfTqUbZ
    21: OP_DATA_0x21: compressed pub key
        023D7AEDC0D5B4ED:14D3F3370B269B75
        EA8F244AB802CEAE:526718735D72F93A
        18
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19jBXgUGXR4on6VEiEfkGw6yYmTgZv1YuB
    21: OP_DATA_0x21: compressed pub key
        032B8F2FB30ADF9B:555884EEC6D4A7A9
        0091B5EA98974A5D:EF15D16DAF366EE7
        BB
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FEd2r4LuCWJjF85w2B3fHZUVgU4g4NNsH
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102F08BA20545:7079467CFD72D084
        A57945514CA25666:9C599AF8ED14C43E
        857F7D21023D7AED:C0D5B4ED14D3F337
        0B269B75EA8F244A:B802CEAE52671873
        5D72F93A1821032B:8F2FB30ADF9B5558
        84EEC6D4A7A90091:B5EA98974A5DEF15
        D16DAF366EE7BB53:AE
        corresponding bitcoin address is:    38YLkBXjQ5CrbKbkCiMRcmqY8g7hjXshSk
 TX_IN[79] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[80]
 TX_IN[80] OutPoint hash (char[32])
  08C0594EFF0630BC9D0C0AEC5F9C529982B838AA87904BF60F66053CDE457701
 TX_IN[80] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[80] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[80] Script Sig (uchar[])
  00483045022100C3F9E103ED52ED167EE517C09AF9E0FEEA8788CC3B13C7CE05AEC8BC5C1FE937022065BBF97127C523AECDD072095A925B2CBBE7D3FE06E17EA1D59890DAF3D3473B0147304402202E4E90CBFD2139753E83E736148BB973048C58F2E61D589D29C8CDF3311BCFDA02206B8D2813CCF62B1A15E05555E04637B37CAD17B5572D51C7C83C82EAC51701A9014C695221022CCBD4EF07F24ADF17F8B96AD34D2105EED6C14A1DFAF5A438B361E9F710978A2103BE89FBD513346FD0D2532B836EB8D843CA07B933F27FC66D514227DE8699C86F2102574FABFEDC57140E6F0A711B025D13B0AF90E8732BC778CB9247D4D9C1D5108153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C3F9E103ED52ED:167EE517C09AF9E0
        FEEA8788CC3B13C7:CE05AEC8BC5C1FE9
        37
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        65BBF97127C523AE:CDD072095A925B2C
        BBE7D3FE06E17EA1:D59890DAF3D3473B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        2E4E90CBFD213975:3E83E736148BB973
        048C58F2E61D589D:29C8CDF3311BCFDA
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        6B8D2813CCF62B1A:15E05555E04637B3
        7CAD17B5572D51C7:C83C82EAC51701A9
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        022CCBD4EF07F24A:DF17F8B96AD34D21
        05EED6C14A1DFAF5:A438B361E9F71097
        8A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    14ajYC4N7GfDQJstKBdKUmmoBy6Xr4VYUe
    21: OP_DATA_0x21: compressed pub key
        03BE89FBD513346F:D0D2532B836EB8D8
        43CA07B933F27FC6:6D514227DE8699C8
        6F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LwRNooBkmdFhV9Yqgx9LiWKZQpBmLx4tM
    21: OP_DATA_0x21: compressed pub key
        02574FABFEDC5714:0E6F0A711B025D13
        B0AF90E8732BC778:CB9247D4D9C1D510
        81
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1F5f9NNDBfzFJnbw517seUbR9m5ybsSgRU
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221022CCBD4EF07:F24ADF17F8B96AD3
        4D2105EED6C14A1D:FAF5A438B361E9F7
        10978A2103BE89FB:D513346FD0D2532B
        836EB8D843CA07B9:33F27FC66D514227
        DE8699C86F210257:4FABFEDC57140E6F
        0A711B025D13B0AF:90E8732BC778CB92
        47D4D9C1D5108153:AE
        corresponding bitcoin address is:    32RwhNs3smP6Cc2XCwEem7vAF4BQbowHBS
 TX_IN[80] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[81]
 TX_IN[81] OutPoint hash (char[32])
  E0280197BC8CA10917D4A2DC80369D3599D9A06931A75E6A8FB3891833B47AC2
 TX_IN[81] OutPoint index (uint32_t)
  hex=04000000, reversed=00000004, decimal=4
 TX_IN[81] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[81] Script Sig (uchar[])
  00483045022100A9A901623C75EEC2C4B45F493880672CDBF7F9011918677750104D0E29E966D5022067DB62D0B2E78870B8D4165BDFE6E81ECD25A53931ABD3989F21ED144F11A6F6014730440220088E05EFA3270D313F0353EBB3ACBD6D3F4927058F1A31671CE70D6F0896349F022025D13C33CCADBB612B00F0B51E16DDBD2462EC83FF3A2A38F43A5B545540925F014C69522103F31140A7AC2320AA0BD43E52C3522905F38EBBE1F01C2D4C341115357DBEFAF72102885289ED4F912F9374E1D2B4AA236180A17925079B7CD976F140F6A48998AE162102E64422ABFD3EC94B68B03C3726F3F49AA19418559B1BBF0EF4E1C311BD2A700C53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A9A901623C75EE:C2C4B45F49388067
        2CDBF7F901191867:7750104D0E29E966
        D5
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        67DB62D0B2E78870:B8D4165BDFE6E81E
        CD25A53931ABD398:9F21ED144F11A6F6
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        088E05EFA3270D31:3F0353EBB3ACBD6D
        3F4927058F1A3167:1CE70D6F0896349F
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        25D13C33CCADBB61:2B00F0B51E16DDBD
        2462EC83FF3A2A38:F43A5B545540925F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03F31140A7AC2320:AA0BD43E52C35229
        05F38EBBE1F01C2D:4C341115357DBEFA
        F7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19byco7uxyT31ffWfii76rudzgfSy4u5o5
    21: OP_DATA_0x21: compressed pub key
        02885289ED4F912F:9374E1D2B4AA2361
        80A17925079B7CD9:76F140F6A48998AE
        16
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CxQ9FXu1oif4SCq2LQ1rW8ahh2y7LtUna
    21: OP_DATA_0x21: compressed pub key
        02E64422ABFD3EC9:4B68B03C3726F3F4
        9AA19418559B1BBF:0EF4E1C311BD2A70
        0C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HVrTGARWqrt69ezWxhA6n3Nmhk1MebbE1
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103F31140A7AC:2320AA0BD43E52C3
        522905F38EBBE1F0:1C2D4C341115357D
        BEFAF72102885289:ED4F912F9374E1D2
        B4AA236180A17925:079B7CD976F140F6
        A48998AE162102E6:4422ABFD3EC94B68
        B03C3726F3F49AA1:9418559B1BBF0EF4
        E1C311BD2A700C53:AE
        corresponding bitcoin address is:    3GALLYPTnMLRVKZ5zxwAnMvD5ugeuHj8wL
 TX_IN[81] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[82]
 TX_IN[82] OutPoint hash (char[32])
  914718C965F6E2E357F50B6B6FD2ABCDE3CE2C3A65BAE298CD7C69FAC718C79C
 TX_IN[82] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[82] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[82] Script Sig (uchar[])
  00483045022100AAB41758336F94EE2BF9665A21D8FB46B5350154181E47EE1A3F1E6A8572D642022068A828E311C43DC9B6B1164E945805A9C3E8D69E8425F5A0830132D12431713E01483045022100EF437DF41A6AB1FB7E587507F5B8237F37BB3FA4A94C385A803A93FD6C20AC63022018E70A79B257FCB6110D20DA23BA7AC8AD8A9180ACD7CABD585C1FEB82C54E39014C69522102978E8E776208F5D382A5FE43D5E835D263E9E3D0A135C2BE200CFF2E4F48E5EE21029CFDCE83130B50BF66F75AC2FDE5220067648378A7D49C55E269B8E54A93D7BB2103939965070119746A300BCD996845A5A9306AE7B3417006F6E9E9580663DFB9F353AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00AAB41758336F94:EE2BF9665A21D8FB
        46B5350154181E47:EE1A3F1E6A8572D6
        42
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        68A828E311C43DC9:B6B1164E945805A9
        C3E8D69E8425F5A0:830132D12431713E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00EF437DF41A6AB1:FB7E587507F5B823
        7F37BB3FA4A94C38:5A803A93FD6C20AC
        63
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        18E70A79B257FCB6:110D20DA23BA7AC8
        AD8A9180ACD7CABD:585C1FEB82C54E39
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02978E8E776208F5:D382A5FE43D5E835
        D263E9E3D0A135C2:BE200CFF2E4F48E5
        EE
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MijdqD3Z1UhAV962E2U5p4e1m7uCHV6Y1
    21: OP_DATA_0x21: compressed pub key
        029CFDCE83130B50:BF66F75AC2FDE522
        0067648378A7D49C:55E269B8E54A93D7
        BB
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1M9jKfVMJHHaog7HfPWK7YoiurLfgZ8jP4
    21: OP_DATA_0x21: compressed pub key
        0393996507011974:6A300BCD996845A5
        A9306AE7B3417006:F6E9E9580663DFB9
        F3
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17gTh4otDiE4VNjdXWKibqmxUzrNFMxM3d
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102978E8E7762:08F5D382A5FE43D5
        E835D263E9E3D0A1:35C2BE200CFF2E4F
        48E5EE21029CFDCE:83130B50BF66F75A
        C2FDE52200676483:78A7D49C55E269B8
        E54A93D7BB210393:9965070119746A30
        0BCD996845A5A930:6AE7B3417006F6E9
        E9580663DFB9F353:AE
        corresponding bitcoin address is:    3Gh4swAUgdNLirgCXQt3o1VD1YNfRRSMoT
 TX_IN[82] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[83]
 TX_IN[83] OutPoint hash (char[32])
  380D095DF1339D8C1FAD96ED429977DEBFC663A147032DFE0C518AA060839FE8
 TX_IN[83] OutPoint index (uint32_t)
  hex=08000000, reversed=00000008, decimal=8
 TX_IN[83] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[83] Script Sig (uchar[])
  0047304402205C6AAFB9AAC160732629B57343BA9BA69CD67773CDE0381E302774130E1D5D7802202EB0EAC3481EA94AF828979E77AD0434F0050FF01D08FC30F3CF78C9B6A3B2E2014830450221009DA575316EC752640F9902FE6FDCC251B8AE47817969FF4BBC49D6B34BF31C5D02206D5EA63C7F01576D4F8459DDC00A02C93688F0D2217C62BD69F2827C0AA4F11C014C69522103AD81C5ED75E8E78A12CF6B8CC9E200428991D117AED6655F14234E782BD739C72102D241D57683AF5DD8DF91D5C31C72EE30CA6876C6C8E22BE675FC9BCEFB7CBEA12102436A5E0BBD5117B6CD718156CD46CF32BA21C8D6DAB1B0BF41163A253EEC8CAD53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        5C6AAFB9AAC16073:2629B57343BA9BA6
        9CD67773CDE0381E:302774130E1D5D78
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        2EB0EAC3481EA94A:F828979E77AD0434
        F0050FF01D08FC30:F3CF78C9B6A3B2E2
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009DA575316EC752:640F9902FE6FDCC2
        51B8AE47817969FF:4BBC49D6B34BF31C
        5D
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6D5EA63C7F01576D:4F8459DDC00A02C9
        3688F0D2217C62BD:69F2827C0AA4F11C
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03AD81C5ED75E8E7:8A12CF6B8CC9E200
        428991D117AED665:5F14234E782BD739
        C7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HhdebLEeE1U3ArtKfUkphZTUFYMRXNt2
    21: OP_DATA_0x21: compressed pub key
        02D241D57683AF5D:D8DF91D5C31C72EE
        30CA6876C6C8E22B:E675FC9BCEFB7CBE
        A1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15w2RQjHwr5tyzSGfXazvqAsw3Nhjxdo82
    21: OP_DATA_0x21: compressed pub key
        02436A5E0BBD5117:B6CD718156CD46CF
        32BA21C8D6DAB1B0:BF41163A253EEC8C
        AD
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    155igj2yZ4jGHcVnHa53oSTndyiih4hG5Z
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103AD81C5ED75:E8E78A12CF6B8CC9
        E200428991D117AE:D6655F14234E782B
        D739C72102D241D5:7683AF5DD8DF91D5
        C31C72EE30CA6876:C6C8E22BE675FC9B
        CEFB7CBEA1210243:6A5E0BBD5117B6CD
        718156CD46CF32BA:21C8D6DAB1B0BF41
        163A253EEC8CAD53:AE
        corresponding bitcoin address is:    3JyQJWrVsib4w5aMCbo9RwFi4M4kdZMaSa
 TX_IN[83] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[84]
 TX_IN[84] OutPoint hash (char[32])
  FC6A4486A6E75BA2C2B91CE0F48FA0A5CD44A6F101E8ABB32F62A5971F24BE35
 TX_IN[84] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[84] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[84] Script Sig (uchar[])
  00483045022100B5C0645C469709ED51DB9C697D00D144EC126CB6529C08305F34BCA6A75E9C3D02200BF6D2740818150A3B5CF83E7263177E09CD925228100671772F04F87C39D133014730440220703D76AE37C23A644F2248173235B45CD27A25D3945C20F5DAC96FFBE85A85D802204D3245547EBAF77834CC29C01D5035A5CE17B2DB0CA7835B6ADDAF41ABA11667014C69522102C8F19529A82A291E6C3AB58918A3077F4D72AEE0BDBF11F9079C2C0BDA8AEE9F210378AB98B8A339401DB5377E832AB0FBD4AA1F5E6DECF72CBEFCC5A069417EAC0C210386D187447A33839ED7D4BD22F160A0E507F384D021187FB871A4BA74FAC309EB53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B5C0645C469709:ED51DB9C697D00D1
        44EC126CB6529C08:305F34BCA6A75E9C
        3D
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0BF6D2740818150A:3B5CF83E7263177E
        09CD925228100671:772F04F87C39D133
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        703D76AE37C23A64:4F2248173235B45C
        D27A25D3945C20F5:DAC96FFBE85A85D8
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4D3245547EBAF778:34CC29C01D5035A5
        CE17B2DB0CA7835B:6ADDAF41ABA11667
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02C8F19529A82A29:1E6C3AB58918A307
        7F4D72AEE0BDBF11:F9079C2C0BDA8AEE
        9F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1R5DGLWm7rAnumetHwthwDC1og94Jgo9f
    21: OP_DATA_0x21: compressed pub key
        0378AB98B8A33940:1DB5377E832AB0FB
        D4AA1F5E6DECF72C:BEFCC5A069417EAC
        0C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    14wZriUAzxCNEKQZz8y4hpAhz4qUs8wjnU
    21: OP_DATA_0x21: compressed pub key
        0386D187447A3383:9ED7D4BD22F160A0
        E507F384D021187F:B871A4BA74FAC309
        EB
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1AfSvpjUzgU7nhRRLKzBmLWVKxi418airc
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102C8F19529A8:2A291E6C3AB58918
        A3077F4D72AEE0BD:BF11F9079C2C0BDA
        8AEE9F210378AB98:B8A339401DB5377E
        832AB0FBD4AA1F5E:6DECF72CBEFCC5A0
        69417EAC0C210386:D187447A33839ED7
        D4BD22F160A0E507:F384D021187FB871
        A4BA74FAC309EB53:AE
        corresponding bitcoin address is:    37MJUmnGafX7yY6NJLMqCasY63SFjT9VgJ
 TX_IN[84] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[85]
 TX_IN[85] OutPoint hash (char[32])
  F07A4E48558AE7D51B4A12550B999062AE0EB36F252D499982DA4478E73607CC
 TX_IN[85] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[85] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[85] Script Sig (uchar[])
  0047304402205BD72EA8C494AF675267DD1A8A0B8ACC3C1ACB2D3A79B8E556AD038C57FD0FD70220534D246AEFD284FF81DFA76B957F6A6517E8FC94BF2C20287A5A04417831C01B01473044022064433D2E053C7F947EE32122A78FFB3808F5BAD9BA24B2EF8A756DB7CE15928C0220489F8FE0EE0E0EADF59146CC628AC4727E3953E1C8F7D0E57E386A7ECBE91F34014C695221022447129F61E1B3D9C9223377A37547E903E526A0333CD0147E74B403BC0E34412103AD6580DED97F989E0BDBB0054A999ECC79BACE0293B207F1CEC3A4648391AD74210279A256E100363F23205BBF0522A13C031461821201611E68BFE3CD82F48B9F4A53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        5BD72EA8C494AF67:5267DD1A8A0B8ACC
        3C1ACB2D3A79B8E5:56AD038C57FD0FD7
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        534D246AEFD284FF:81DFA76B957F6A65
        17E8FC94BF2C2028:7A5A04417831C01B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        64433D2E053C7F94:7EE32122A78FFB38
        08F5BAD9BA24B2EF:8A756DB7CE15928C
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        489F8FE0EE0E0EAD:F59146CC628AC472
        7E3953E1C8F7D0E5:7E386A7ECBE91F34
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        022447129F61E1B3:D9C9223377A37547
        E903E526A0333CD0:147E74B403BC0E34
        41
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1P2KGTw7o4PA4BFeuMS1seCxB6UMck2KFw
    21: OP_DATA_0x21: compressed pub key
        03AD6580DED97F98:9E0BDBB0054A999E
        CC79BACE0293B207:F1CEC3A4648391AD
        74
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NpbegkDva5fgdJpZkGhhEUPXavrxoHMKU
    21: OP_DATA_0x21: compressed pub key
        0279A256E100363F:23205BBF0522A13C
        031461821201611E:68BFE3CD82F48B9F
        4A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17iDtuYFEcApyESNkBWe2X8vLz8cPFEH3H
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221022447129F61:E1B3D9C9223377A3
        7547E903E526A033:3CD0147E74B403BC
        0E34412103AD6580:DED97F989E0BDBB0
        054A999ECC79BACE:0293B207F1CEC3A4
        648391AD74210279:A256E100363F2320
        5BBF0522A13C0314:61821201611E68BF
        E3CD82F48B9F4A53:AE
        corresponding bitcoin address is:    3PUBoj4473YPB2xidxuVfCG9ZCRM24SqMP
 TX_IN[85] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[86]
 TX_IN[86] OutPoint hash (char[32])
  42C1FA7D463BD3B7A42D46B6F9A88E0D6C6F8F323DE4CB13DC758781263CE987
 TX_IN[86] OutPoint index (uint32_t)
  hex=13000000, reversed=00000013, decimal=19
 TX_IN[86] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[86] Script Sig (uchar[])
  00473044022052E8A2CFB0D7C64E10EF0B9690DA8DC230C2C24401DF139C66E1B57EF4DEBD5C02206C75C88FAF9304C30025E6EB9AAE705FAAC3E1B9E0632E01A86DABD451B4B0E401483045022100AB787B419D371D210F19815200465474E55E679213B2B3414132763286824B3D02202EEB2794EB358BD836EFA60C6083BB96A9B65AEB6AFDB8AEB9627E6752F65561014C6952210327D86B312DBF333D8B363CB5A7C21582F8FB4936209C77E2AA4196BB1A355FAD2103269E0AF2CF7101F0EEF6B356BE13435FA7035FB0F966B7E1478ACBDF9308BDE521034ED9438EBCDE29D79A6D86717B72890B0C48841F9DAD0A2D4E549CBCC12598E753AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        52E8A2CFB0D7C64E:10EF0B9690DA8DC2
        30C2C24401DF139C:66E1B57EF4DEBD5C
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        6C75C88FAF9304C3:0025E6EB9AAE705F
        AAC3E1B9E0632E01:A86DABD451B4B0E4
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00AB787B419D371D:210F198152004654
        74E55E679213B2B3:414132763286824B
        3D
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        2EEB2794EB358BD8:36EFA60C6083BB96
        A9B65AEB6AFDB8AE:B9627E6752F65561
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0327D86B312DBF33:3D8B363CB5A7C215
        82F8FB4936209C77:E2AA4196BB1A355F
        AD
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1D3mqhSc9pdTUhz1EzowpgMLk9tLKRYCEQ
    21: OP_DATA_0x21: compressed pub key
        03269E0AF2CF7101:F0EEF6B356BE1343
        5FA7035FB0F966B7:E1478ACBDF9308BD
        E5
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FX2XuKVfejQrdHssiuMyCniRSYVGibVQt
    21: OP_DATA_0x21: compressed pub key
        034ED9438EBCDE29:D79A6D86717B7289
        0B0C48841F9DAD0A:2D4E549CBCC12598
        E7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LEwfWqtxy6LSgVMfQ4hpVorEwSSjAq6vg
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210327D86B312D:BF333D8B363CB5A7
        C21582F8FB493620:9C77E2AA4196BB1A
        355FAD2103269E0A:F2CF7101F0EEF6B3
        56BE13435FA7035F:B0F966B7E1478ACB
        DF9308BDE521034E:D9438EBCDE29D79A
        6D86717B72890B0C:48841F9DAD0A2D4E
        549CBCC12598E753:AE
        corresponding bitcoin address is:    3PYbjddguoYqFDTfKispJMPGvtfLjcihDp
 TX_IN[86] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[87]
 TX_IN[87] OutPoint hash (char[32])
  470EE3C3711D726A882C850D2FF96E9E6044FC738234ECC9BEF0FEC5F6729117
 TX_IN[87] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[87] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[87] Script Sig (uchar[])
  00483045022100F7AA955AF75869229BB6B1A8C2366837DF1C7B8D971640C73A4C95A0BCB4FC5802205518BA9DF14279162DF70AFC0A0DEAD7ADC9BDB2D42A1F8DFE66A2F20501117801483045022100F095DD1520289F4400C70322AA5A2861D196972C49CB0235CE4FC5DECC31C3B302200180E15AD289F1B0995CB96D741A909787B6358EEFF8B8CA11DCD1B28A9A5EC1014C695221023018EF706E94E2BE1C0E5A83771A5309FC765FF2CD4A2C88501F9AD904D7CFE121036AC56CF27B40BAE9BE6ADBF1EB107AE2E059285E2A3141A3FEE684DA147B5C5221022B93667B313D9D81BC984D40221CBB23E3C75AC0F0BB4876957D9FCA2D9699CC53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00F7AA955AF75869:229BB6B1A8C23668
        37DF1C7B8D971640:C73A4C95A0BCB4FC
        58
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        5518BA9DF1427916:2DF70AFC0A0DEAD7
        ADC9BDB2D42A1F8D:FE66A2F205011178
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00F095DD1520289F:4400C70322AA5A28
        61D196972C49CB02:35CE4FC5DECC31C3
        B3
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0180E15AD289F1B0:995CB96D741A9097
        87B6358EEFF8B8CA:11DCD1B28A9A5EC1
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        023018EF706E94E2:BE1C0E5A83771A53
        09FC765FF2CD4A2C:88501F9AD904D7CF
        E1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15pUDkyQYJCUGHsEHfF3PGtpNno4Tbw7Kw
    21: OP_DATA_0x21: compressed pub key
        036AC56CF27B40BA:E9BE6ADBF1EB107A
        E2E059285E2A3141:A3FEE684DA147B5C
        52
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FDifp7wjcYFj6uoAoEpsi6gi8575AW7MV
    21: OP_DATA_0x21: compressed pub key
        022B93667B313D9D:81BC984D40221CBB
        23E3C75AC0F0BB48:76957D9FCA2D9699
        CC
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17cC36LXs3V8JSU5huKAW1KdF5hmdpCuWH
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221023018EF706E:94E2BE1C0E5A8377
        1A5309FC765FF2CD:4A2C88501F9AD904
        D7CFE121036AC56C:F27B40BAE9BE6ADB
        F1EB107AE2E05928:5E2A3141A3FEE684
        DA147B5C5221022B:93667B313D9D81BC
        984D40221CBB23E3:C75AC0F0BB487695
        7D9FCA2D9699CC53:AE
        corresponding bitcoin address is:    3AYzi9meJxwHCA5TRUT1joCxHK2ccHWVK8
 TX_IN[87] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[88]
 TX_IN[88] OutPoint hash (char[32])
  8D3DFB021A7335F3873069B3A6F57FCBD7F67C1F2429D0E0BE3BC91CF711BE2E
 TX_IN[88] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[88] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[88] Script Sig (uchar[])
  00483045022100F3DB7C01520556A067FFE813CA9B487161C5DD5ACCA0F610D3BCE08B6B884E48022040344CACAE482FF563AC3BD55525CAA3755DBB59B048C667DF7630AA5A8EE88B0147304402206478BF8C2BA6F94674DDAF0CECF2EFE81DF79B5034EBDF148ECE311FCA9E7AE802204D31286C66B2CFFAB5350970B96680B5A44C9AE2B9849E5C7D7C7D18C887A62F014C69522102B3BCCF11BB6B3A074F26CC63823608DDF3461A6D4ED50FE7FA4C18EEAB53A6E02103A109EC13C9A426350FD2091DD7D1BC0AB6B12974D357E3B331170B48F2FFF69A21022276650B6026613D05C05583F978A2F24D6CDD90837146B85F2296022A63BC4853AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00F3DB7C01520556:A067FFE813CA9B48
        7161C5DD5ACCA0F6:10D3BCE08B6B884E
        48
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        40344CACAE482FF5:63AC3BD55525CAA3
        755DBB59B048C667:DF7630AA5A8EE88B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        6478BF8C2BA6F946:74DDAF0CECF2EFE8
        1DF79B5034EBDF14:8ECE311FCA9E7AE8
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4D31286C66B2CFFA:B5350970B96680B5
        A44C9AE2B9849E5C:7D7C7D18C887A62F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02B3BCCF11BB6B3A:074F26CC63823608
        DDF3461A6D4ED50F:E7FA4C18EEAB53A6
        E0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1GUKo1pS2JSTZffGxyUse33Qu5WFyhcQuG
    21: OP_DATA_0x21: compressed pub key
        03A109EC13C9A426:350FD2091DD7D1BC
        0AB6B12974D357E3:B331170B48F2FFF6
        9A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17ykAseVdJKBN5HpMAUqMs9SiJw4YZdTC2
    21: OP_DATA_0x21: compressed pub key
        022276650B602661:3D05C05583F978A2
        F24D6CDD90837146:B85F2296022A63BC
        48
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1DFcX74QF3anf7q2kEPNhTjjtHMQdmjFbU
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102B3BCCF11BB:6B3A074F26CC6382
        3608DDF3461A6D4E:D50FE7FA4C18EEAB
        53A6E02103A109EC:13C9A426350FD209
        1DD7D1BC0AB6B129:74D357E3B331170B
        48F2FFF69A210222:76650B6026613D05
        C05583F978A2F24D:6CDD90837146B85F
        2296022A63BC4853:AE
        corresponding bitcoin address is:    35xAFvTbaB5NpXvHMYg9rAjVHLyFaWNLMc
 TX_IN[88] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[89]
 TX_IN[89] OutPoint hash (char[32])
  C5E24EFF077585D8ECAAAECCFAB675132B2DA0FE7BDB715AF22B255E690F445C
 TX_IN[89] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[89] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[89] Script Sig (uchar[])
  0048304502210084E5A0F09A26A33320441E9B23D4279255EAF808D56129B011977E04AA3585F40220594E8D191BD4361747432C2BDDD2BA05B1B23308576EA9826C5179C00F8450D00147304402204AB36A3F05176CEC932614DE1EF8C588E64EB6E927A3DD82B84DC11DC4A099DE02203E72BF9D1FB70C05DC7BCC44A38D793C9E61E0702C23310D647ADA62EF95E8AB014C69522102766FC2763906223CDF19E2C6CDC2255EADF40817DA27EC0F2643B011FDE6E7FA21031D281F6324C7BABD69E3B3478B96FC33F012A6278179F631BBB6557DA95ECB7C2102F373BF4E0DDAE911B0BCB3F24CCC9F7EDAC9622B67CA1AA19CBE95A1FF74ADC953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        0084E5A0F09A26A3:3320441E9B23D427
        9255EAF808D56129:B011977E04AA3585
        F4
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        594E8D191BD43617:47432C2BDDD2BA05
        B1B23308576EA982:6C5179C00F8450D0
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        4AB36A3F05176CEC:932614DE1EF8C588
        E64EB6E927A3DD82:B84DC11DC4A099DE
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        3E72BF9D1FB70C05:DC7BCC44A38D793C
        9E61E0702C23310D:647ADA62EF95E8AB
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02766FC276390622:3CDF19E2C6CDC225
        5EADF40817DA27EC:0F2643B011FDE6E7
        FA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17BLErT54jGpP5Je8qiMgKe8wE3FGuK8n9
    21: OP_DATA_0x21: compressed pub key
        031D281F6324C7BA:BD69E3B3478B96FC
        33F012A6278179F6:31BBB6557DA95ECB
        7C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17p2GpdtadHrBtKNgnhky1tNQ8qj2BCptx
    21: OP_DATA_0x21: compressed pub key
        02F373BF4E0DDAE9:11B0BCB3F24CCC9F
        7EDAC9622B67CA1A:A19CBE95A1FF74AD
        C9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1J87dKELsETg5x7VkjcoMycpwHdsizXhR3
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102766FC27639:06223CDF19E2C6CD
        C2255EADF40817DA:27EC0F2643B011FD
        E6E7FA21031D281F:6324C7BABD69E3B3
        478B96FC33F012A6:278179F631BBB655
        7DA95ECB7C2102F3:73BF4E0DDAE911B0
        BCB3F24CCC9F7EDA:C9622B67CA1AA19C
        BE95A1FF74ADC953:AE
        corresponding bitcoin address is:    3BknH5KGAwZsKAfMSUhH6FYU7GebsdsrHr
 TX_IN[89] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[90]
 TX_IN[90] OutPoint hash (char[32])
  119A27997D7BB3C80AA6DE171F049B63C0CEA94679E0449A2D2A51F306F4A342
 TX_IN[90] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[90] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[90] Script Sig (uchar[])
  00483045022100BB1AE20655DE1DC5223675C0D3EBF60CFF849EF06ECE5F3499CD24D2024B768002204A245CEF3286FC3A6A2622AD935554165571BCC5EEBF1E0DB078F8DEE2800A0001483045022100E29FE07ABCA6E332F881FD69A07687752DBCEF727F194549AD110760C15B701C022051A14A57AE863BDE56C3E9780B2141C27C481D1FBB121070D54C9725EBDED168014C69522103C9EEF518B17CDB210256BE4B30B3D6C7D6CD227D754734850E103DE0FEFA70FA2102D8192FDD9E17DD703EAADAB0CC6A01415EAE5B8A3DEB95D735CA0816C97C9CA4210382305B5C6A6578A86C65793F60D12EAE3B399ACD5CC48B5E894006F16E65F50353AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00BB1AE20655DE1D:C5223675C0D3EBF6
        0CFF849EF06ECE5F:3499CD24D2024B76
        80
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        4A245CEF3286FC3A:6A2622AD93555416
        5571BCC5EEBF1E0D:B078F8DEE2800A00
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00E29FE07ABCA6E3:32F881FD69A07687
        752DBCEF727F1945:49AD110760C15B70
        1C
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        51A14A57AE863BDE:56C3E9780B2141C2
        7C481D1FBB121070:D54C9725EBDED168
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03C9EEF518B17CDB:210256BE4B30B3D6
        C7D6CD227D754734:850E103DE0FEFA70
        FA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MYxpZmXcgf53DvFENTabjzKj5RrEBtXMk
    21: OP_DATA_0x21: compressed pub key
        02D8192FDD9E17DD:703EAADAB0CC6A01
        415EAE5B8A3DEB95:D735CA0816C97C9C
        A4
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15gcBZqiBrwmDUXxDW7Ym6bmmAdfomybNR
    21: OP_DATA_0x21: compressed pub key
        0382305B5C6A6578:A86C65793F60D12E
        AE3B399ACD5CC48B:5E894006F16E65F5
        03
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1BPB4nYLvPXFfHG5i8urKPx7w47k9eKq1k
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103C9EEF518B1:7CDB210256BE4B30
        B3D6C7D6CD227D75:4734850E103DE0FE
        FA70FA2102D8192F:DD9E17DD703EAADA
        B0CC6A01415EAE5B:8A3DEB95D735CA08
        16C97C9CA4210382:305B5C6A6578A86C
        65793F60D12EAE3B:399ACD5CC48B5E89
        4006F16E65F50353:AE
        corresponding bitcoin address is:    3QKhb2eKeqsmiziMFfDwfuMGecW81qiWPJ
 TX_IN[90] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[91]
 TX_IN[91] OutPoint hash (char[32])
  EF6ED73846546EB8786B10016AEB06249BD111AF795A58C10F0E2367E1007277
 TX_IN[91] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[91] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[91] Script Sig (uchar[])
  0047304402207134285F97842A4A76235BDA12E5D570AF1D6F46237CE69919C6F2560E048C7A02202FE26F39CA644ED614B8A5B61F33BA2E79C924EAE6B67A186EB0C705C5B04F6A0147304402201612493858412A81BBD4465D033E866B009C2A7D7C6FB7E221AFF3922705999E022029DF48923FB9DD20AC19D13C7AB4C395D68077605D9466E13770C908CEE87752014C69522102766FC2763906223CDF19E2C6CDC2255EADF40817DA27EC0F2643B011FDE6E7FA21031D281F6324C7BABD69E3B3478B96FC33F012A6278179F631BBB6557DA95ECB7C2102F373BF4E0DDAE911B0BCB3F24CCC9F7EDAC9622B67CA1AA19CBE95A1FF74ADC953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        7134285F97842A4A:76235BDA12E5D570
        AF1D6F46237CE699:19C6F2560E048C7A
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        2FE26F39CA644ED6:14B8A5B61F33BA2E
        79C924EAE6B67A18:6EB0C705C5B04F6A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        1612493858412A81:BBD4465D033E866B
        009C2A7D7C6FB7E2:21AFF3922705999E
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        29DF48923FB9DD20:AC19D13C7AB4C395
        D68077605D9466E1:3770C908CEE87752
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02766FC276390622:3CDF19E2C6CDC225
        5EADF40817DA27EC:0F2643B011FDE6E7
        FA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17BLErT54jGpP5Je8qiMgKe8wE3FGuK8n9
    21: OP_DATA_0x21: compressed pub key
        031D281F6324C7BA:BD69E3B3478B96FC
        33F012A6278179F6:31BBB6557DA95ECB
        7C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17p2GpdtadHrBtKNgnhky1tNQ8qj2BCptx
    21: OP_DATA_0x21: compressed pub key
        02F373BF4E0DDAE9:11B0BCB3F24CCC9F
        7EDAC9622B67CA1A:A19CBE95A1FF74AD
        C9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1J87dKELsETg5x7VkjcoMycpwHdsizXhR3
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102766FC27639:06223CDF19E2C6CD
        C2255EADF40817DA:27EC0F2643B011FD
        E6E7FA21031D281F:6324C7BABD69E3B3
        478B96FC33F012A6:278179F631BBB655
        7DA95ECB7C2102F3:73BF4E0DDAE911B0
        BCB3F24CCC9F7EDA:C9622B67CA1AA19C
        BE95A1FF74ADC953:AE
        corresponding bitcoin address is:    3BknH5KGAwZsKAfMSUhH6FYU7GebsdsrHr
 TX_IN[91] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[92]
 TX_IN[92] OutPoint hash (char[32])
  974E7B43E25FEBDBAE5B9A5AFE57D5BEFB682B80F192ECFB81F25E7DCD94FEF9
 TX_IN[92] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[92] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[92] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00D5EC797B282A2C:62F2BCE209C9E237
        7FB477F728649C55:08B73994E333F361
        34
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        0E09FA0165920C97:8157DB517F74A756
        C12A22CD18513843:5F8189340275F59F
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        477FD51258590B94:4C024A1E93687908
        015CEA219D7727B1:7763A99DE6826744
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        0239402F6E259368:F68E75453FB30807
        559EB143EC5761C9:1F3C7E3810460921
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02325930AF97DDD6:89709551F6CDF467
        7B6E27894BC0A852:864335F8C1288990
        6E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    18UZpMz6wmP6aJh4CwADfHAXp9EVa7g7q4
    21: OP_DATA_0x21: compressed pub key
        02C87BF49871FF32:B08B8E6EB1A884FD
        BD5A500CF535F827:4248654E24812BF3
        95
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CbsfRpHHkDx2ShjRupd8NhF6WAd4BBpXH
    21: OP_DATA_0x21: compressed pub key
        03F198BAD588F1A4:8BB510AFA0E61E6B
        752B809B3526DAFA:AF820BBF630D4D49
        CA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KmP6dEvhuF5YNBGWvmaXVUGXNWEgBBEXg
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102325930AF97:DDD689709551F6CD
        F4677B6E27894BC0:A852864335F8C128
        89906E2102C87BF4:9871FF32B08B8E6E
        B1A884FDBD5A500C:F535F8274248654E
        24812BF3952103F1:98BAD588F1A48BB5
        10AFA0E61E6B752B:809B3526DAFAAF82
        0BBF630D4D49CA53:AE
        corresponding bitcoin address is:    39VxMxijFQA78fP4Wko4ZSWgoeGHSivHcP
 TX_IN[92] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[93]
 TX_IN[93] OutPoint hash (char[32])
  943CC8E6AF5C2E517F224AFB852F8B90009F70E90D19B0B804E711258C3DDD8B
 TX_IN[93] OutPoint index (uint32_t)
  hex=05000000, reversed=00000005, decimal=5
 TX_IN[93] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[93] Script Sig (uchar[])
  00473044022034A7266D54D19CB367FA01C5D49318AE7D020442949AED424B9FA1AE27BDAB570220099EEF29A0000B5E5B045D2EE36C051AB8DCCD2C137D193A7DC47B075B83025A014730440220423FEB2AF591A9917F96A02B164E70F61006E7BC34E777BD80107761B56779A7022057E8967D370793AF1A42E4B5D3A99BC021D7A8CE6980C9DF005818F332C529F7014C69522103B6C643AE8A5A69F5F98A0E998A7FA8F81FAFBCC2ABBDDC42E18DBEFFCA18C19A2103CED60F8CD140C6DA98A3B2289EEEF3A928251A3C6821F799D35169AEA5EE7E25210310BDAA5C96F25472984809513C2A61A0BD70693F0D9A41E5370017047B368C4953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        34A7266D54D19CB3:67FA01C5D49318AE
        7D020442949AED42:4B9FA1AE27BDAB57
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        099EEF29A0000B5E:5B045D2EE36C051A
        B8DCCD2C137D193A:7DC47B075B83025A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        423FEB2AF591A991:7F96A02B164E70F6
        1006E7BC34E777BD:80107761B56779A7
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        57E8967D370793AF:1A42E4B5D3A99BC0
        21D7A8CE6980C9DF:005818F332C529F7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03B6C643AE8A5A69:F5F98A0E998A7FA8
        F81FAFBCC2ABBDDC:42E18DBEFFCA18C1
        9A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LSs2M9FQkFZBTsMaMeXb2cxzWovNxQ8ap
    21: OP_DATA_0x21: compressed pub key
        03CED60F8CD140C6:DA98A3B2289EEEF3
        A928251A3C6821F7:99D35169AEA5EE7E
        25
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1B6FtXoxm7o46zA7f7BBC28j63bg5jNSxr
    21: OP_DATA_0x21: compressed pub key
        0310BDAA5C96F254:72984809513C2A61
        A0BD70693F0D9A41:E5370017047B368C
        49
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MhBxjmNE9UxwiAUMbDbc4frqVTHtRtBw9
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103B6C643AE8A:5A69F5F98A0E998A
        7FA8F81FAFBCC2AB:BDDC42E18DBEFFCA
        18C19A2103CED60F:8CD140C6DA98A3B2
        289EEEF3A928251A:3C6821F799D35169
        AEA5EE7E25210310:BDAA5C96F2547298
        4809513C2A61A0BD:70693F0D9A41E537
        0017047B368C4953:AE
        corresponding bitcoin address is:    32Sk67iHtLfMnZpHVNa1xgQxfaBoDDzsK9
 TX_IN[93] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[94]
 TX_IN[94] OutPoint hash (char[32])
  ECC01100CE698359AC7948DCA7109E791368B8C16C5F1A254F3A7DB825755A0A
 TX_IN[94] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[94] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[94] Script Sig (uchar[])
  00473044022076A3EDCE55623A01371A9BFC4289772D8F6523AD60B9DC1A06F2D0B60BD5FF1F02200B3C05EA7E4B0A6DA0D61BC03F93EC8C46734E25E19E883E940353339F571AB1014730440220055206ADF2479FE31CE2218275E3B05D11C5176110829B10BFA7E534384DDD0B0220467F3B0DE6BB13973346EEFE5BD8EC26F642D347F22E37FEEE29A4352B87BCE2014C69522103CE841FFBD0BAF003C58979C5FBBB8E5EF2E85EBF9820A6AAA2CF923C29F0A87A2103FD036EB65FD7C76AA4D7EC724A15E9CD2F63CAFCA13540EAE525E0AF0CE5444C210366D87734D05535F2C9895A49F40DBE8996E412613E060B3AA51878A1471B8C2453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        76A3EDCE55623A01:371A9BFC4289772D
        8F6523AD60B9DC1A:06F2D0B60BD5FF1F
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        0B3C05EA7E4B0A6D:A0D61BC03F93EC8C
        46734E25E19E883E:940353339F571AB1
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        055206ADF2479FE3:1CE2218275E3B05D
        11C5176110829B10:BFA7E534384DDD0B
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        467F3B0DE6BB1397:3346EEFE5BD8EC26
        F642D347F22E37FE:EE29A4352B87BCE2
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03CE841FFBD0BAF0:03C58979C5FBBB8E
        5EF2E85EBF9820A6:AAA2CF923C29F0A8
        7A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1BmWtPZZhA21wae4BtNUgGbyEmcrvqBTwS
    21: OP_DATA_0x21: compressed pub key
        03FD036EB65FD7C7:6AA4D7EC724A15E9
        CD2F63CAFCA13540:EAE525E0AF0CE544
        4C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    18nyDnCMdcvo9yGzfKGM8E35XRanSWBhPL
    21: OP_DATA_0x21: compressed pub key
        0366D87734D05535:F2C9895A49F40DBE
        8996E412613E060B:3AA51878A1471B8C
        24
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13tHDFAnCQ1DBm322DXpqzjQrfYQj1R6Lk
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103CE841FFBD0:BAF003C58979C5FB
        BB8E5EF2E85EBF98:20A6AAA2CF923C29
        F0A87A2103FD036E:B65FD7C76AA4D7EC
        724A15E9CD2F63CA:FCA13540EAE525E0
        AF0CE5444C210366:D87734D05535F2C9
        895A49F40DBE8996:E412613E060B3AA5
        1878A1471B8C2453:AE
        corresponding bitcoin address is:    37Xt9EiagCpzF4Uzj3pGVe69UzpB9rnjvJ
 TX_IN[94] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[95]
 TX_IN[95] OutPoint hash (char[32])
  AAB799F7BE6CFA00DB05ACA61596F07833D2B14663BB5EB2F4E756E8F9FA5253
 TX_IN[95] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[95] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[95] Script Sig (uchar[])
  00483045022100CD1BFF0F6F1949421FA78AA8C53A84990577A53BF3414C946E69649A2A6A6AC202204589F449FC52E5C9A8EA312F5EF26DEB381CFC3043D45D2EB4624888009441AD014830450221008C549FEDF8F2A5EBCE4FB34C300D7E31C99F7EE66A3E77477CA2D1B3B7A3801602203656567360C122C3A24F6DC885B46C90CF6692F618E92F1771DEAAB0D9EA6964014C69522103A33ECCCA5B8B3D9F445277A9B85E4D387C114994561444C948081C00DCC371A521029AAD3D32F559864A3634E852087FE9BB65A54FD6DC4822392E2F0C067C0279C8210364AB42FC90BC06126698E591A5E06E727D7082E23D445766CD01C81375C08C1553AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00CD1BFF0F6F1949:421FA78AA8C53A84
        990577A53BF3414C:946E69649A2A6A6A
        C2
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        4589F449FC52E5C9:A8EA312F5EF26DEB
        381CFC3043D45D2E:B4624888009441AD
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008C549FEDF8F2A5:EBCE4FB34C300D7E
        31C99F7EE66A3E77:477CA2D1B3B7A380
        16
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        3656567360C122C3:A24F6DC885B46C90
        CF6692F618E92F17:71DEAAB0D9EA6964
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03A33ECCCA5B8B3D:9F445277A9B85E4D
        387C114994561444:C948081C00DCC371
        A5
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    14ixxqgnwkTiLqxZhsLyrVKQrvLT4n29Yc
    21: OP_DATA_0x21: compressed pub key
        029AAD3D32F55986:4A3634E852087FE9
        BB65A54FD6DC4822:392E2F0C067C0279
        C8
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1PiLdqETYEAQPMXMkE9tR1hNMR6XnFP2uV
    21: OP_DATA_0x21: compressed pub key
        0364AB42FC90BC06:126698E591A5E06E
        727D7082E23D4457:66CD01C81375C08C
        15
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1A7QWSpwfkUX4QVucd1SqFuqRmdcQfwHkJ
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103A33ECCCA5B:8B3D9F445277A9B8
        5E4D387C11499456:1444C948081C00DC
        C371A521029AAD3D:32F559864A3634E8
        52087FE9BB65A54F:D6DC4822392E2F0C
        067C0279C8210364:AB42FC90BC061266
        98E591A5E06E727D:7082E23D445766CD
        01C81375C08C1553:AE
        corresponding bitcoin address is:    3EAiYD987P3hodagdPBYnxZwDRBASrX44f
 TX_IN[95] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[96]
 TX_IN[96] OutPoint hash (char[32])
  7CFDD45AD4ADD3A604F1A5865B7FABCF1715824B394C2342CFF289732FD0F447
 TX_IN[96] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[96] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[96] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        5C3E7D0F39E682B2:5872EE289D73C67F
        25C5079E230D7F0A:2AE3461432A96D51
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        195337F12FF07C13:8663A289F2D19202
        8E2999D8C25D9638:5F8A7AF11D9F877C
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008A0B76250125BC:293D6078DE3BEC64
        4551E2AC4843A1A8:81D21C4C346CD7B2
        BF
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        114A6BF7F52776B0:9E741E422D280766
        B07AEC2576909ADF:E9034FF495BD5080
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02A0F260BBF1799C:CAB0028E9A431F82
        89466E8688FE853A:E5132CFAA288C2D5
        1F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MsGDr8L2QtS7ma3o4yFjJss7ZMKPLAfx
    21: OP_DATA_0x21: compressed pub key
        03F76EC96D3FBE39:56962C8C91F68A0E
        3F0D486D7EDA0630:BD45C0A93978718E
        55
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    14pQi7xFkV5p1JUGspNKjjqSK8wDk7A4p9
    21: OP_DATA_0x21: compressed pub key
        03B5E0715C937A32:9F527C1BEF713C86
        4BD52ACB99175630:3135D371A884407E
        73
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    18WcBkvvRfhsvPz3EHDeRV9KJH3DKwgDHA
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102A0F260BBF1:799CCAB0028E9A43
        1F8289466E8688FE:853AE5132CFAA288
        C2D51F2103F76EC9:6D3FBE3956962C8C
        91F68A0E3F0D486D:7EDA0630BD45C0A9
        3978718E552103B5:E0715C937A329F52
        7C1BEF713C864BD5:2ACB991756303135
        D371A884407E7353:AE
        corresponding bitcoin address is:    3DTMfFECPBfav13wPeYpqaXfoC1VP94KHt
 TX_IN[96] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[97]
 TX_IN[97] OutPoint hash (char[32])
  604A946BA89D3DB04AB91A0D647FD7FED4F6B88DD39D2F2C47205B30F148E455
 TX_IN[97] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[97] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[97] Script Sig (uchar[])
  00473044022054EA36DB504A55731C3E039184FE87FC037F6756D24304E69151120F05DBF9E602200EDEB5727B29AB281FA9E1D3C9F0B341596AC80211C1E6A427537C169EACACE101473044022071ACCA3EDBF039AC2702EAE41A2F154E49D3F1556013DFAF2641AB29B8956D6502203B99934905DC0510B0F4FE5E9352619E8F883B5FB8C634E1197CFD09EB9BE229014C69522103B02DFD3C22026716066D1687A2AD9B3F5CE84AFB4C412FB247B5653D5D1CFE332102EB7B57A645B89BF2871B926593C8393891B4E059DD7B836A0583C731180022DA2103A0B96A7DCA608C925F703F44BCB2C0DBBD7B674505AFE9C2DF998F05FF6D9AF453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        54EA36DB504A5573:1C3E039184FE87FC
        037F6756D24304E6:9151120F05DBF9E6
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        0EDEB5727B29AB28:1FA9E1D3C9F0B341
        596AC80211C1E6A4:27537C169EACACE1
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        71ACCA3EDBF039AC:2702EAE41A2F154E
        49D3F1556013DFAF:2641AB29B8956D65
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        3B99934905DC0510:B0F4FE5E9352619E
        8F883B5FB8C634E1:197CFD09EB9BE229
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03B02DFD3C220267:16066D1687A2AD9B
        3F5CE84AFB4C412F:B247B5653D5D1CFE
        33
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EVsGjWWZZn48jtxUymrsUM3fPbLmH5F5f
    21: OP_DATA_0x21: compressed pub key
        02EB7B57A645B89B:F2871B926593C839
        3891B4E059DD7B83:6A0583C731180022
        DA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13LyLzu2HZ2XU7kFvkTD3E9LfSgg1moykj
    21: OP_DATA_0x21: compressed pub key
        03A0B96A7DCA608C:925F703F44BCB2C0
        DBBD7B674505AFE9:C2DF998F05FF6D9A
        F4
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KuUDcntX3bH1FbAZCLcHUm3PQTtkNYeqQ
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103B02DFD3C22:026716066D1687A2
        AD9B3F5CE84AFB4C:412FB247B5653D5D
        1CFE332102EB7B57:A645B89BF2871B92
        6593C8393891B4E0:59DD7B836A0583C7
        31180022DA2103A0:B96A7DCA608C925F
        703F44BCB2C0DBBD:7B674505AFE9C2DF
        998F05FF6D9AF453:AE
        corresponding bitcoin address is:    3Lmn8D6R9GEPSMEju5uv3Be7dRMCCTQfB8
 TX_IN[97] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[98]
 TX_IN[98] OutPoint hash (char[32])
  6C17E54013985AB00E80543A5D0B64DD3E5782008A85260FC9FCA40B3F61F4D8
 TX_IN[98] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[98] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[98] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        75487094038A32AA:119BF7252DB36733
        C623C99F17EE899B:127E60AC2E1D9E35
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        5AB4180E4922A60B:0D733F25DA037211
        2F76957A58C093E2:D21BB2719400AAE5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        4A1D071A61D9C7DC:086D096ED664997A
        41D1C2800E22A84D:7A0656F75144F2BB
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        40C268B5BEB2DF4E:1ABC31730B978767
        0AE5777A6594D546:5F1059555BA5B89A
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03EDB88E6659E746:AFE69A1D5AA69679
        994939B756E5F26F:C553C1A52F01CF15
        E9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KEuzdHJr417bBxH7Pkd1ywjYaP7cnAEBy
    21: OP_DATA_0x21: compressed pub key
        02EC159F786C9D9B:BA85D398986559E3
        060970C3BEB1B68C:028A0895EA7B3781
        35
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KtfosqqCb3NWKX6jzqfuLR5ocPYFtLhgQ
    21: OP_DATA_0x21: compressed pub key
        0342D67138D4C116:691D5838F0928ADA
        0BBC8FCD01E3694C:19022684532BEEA1
        FF
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16fwupr9g4fU1fwzR7rVY48fqH3Rx2i8Y1
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103EDB88E6659:E746AFE69A1D5AA6
        9679994939B756E5:F26FC553C1A52F01
        CF15E92102EC159F:786C9D9BBA85D398
        986559E3060970C3:BEB1B68C028A0895
        EA7B378135210342:D67138D4C116691D
        5838F0928ADA0BBC:8FCD01E3694C1902
        2684532BEEA1FF53:AE
        corresponding bitcoin address is:    35HM4YxHi8FBTGa5vsiGAKk2GG6r5c8CBc
 TX_IN[98] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[99]
 TX_IN[99] OutPoint hash (char[32])
  7D091DA90C4BBFA49DEF85C8890F53DAE023469EAF10F5A8D1DCD0AEFEAF08C8
 TX_IN[99] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[99] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[99] Script Sig (uchar[])
  00483045022100BC9A91DD7845266E6AAD4F90509DF6A1C5F8D620B2C74077AAE4898E08B29D5B022034136C7091DEF0D3CC163EB45C40F8B2392522E4A5A968694EA498C9D2AC27C10147304402200E88E6C32C7B1933A0F3960DB870417FA238F6680802DCF85CA2D5374DBC3C8A0220510C4EAED0330F60A4278D98C34DE89E22A788E913AD5A90D7D06B6CCB7587E3014C695221039D3508BB693CD323B96D4C703FB1988243D166A721F7894DB9F76DBA99B9B33D210217C55A36D241FA36B7E93B9FCC0B00B96748F717A9D9E6BD22C24290C5D18F1B210369D5242F76508E7BFAD94E89E524AE942B3DF5B4BCB7C2C5D6592AB876838D1453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00BC9A91DD784526:6E6AAD4F90509DF6
        A1C5F8D620B2C740:77AAE4898E08B29D
        5B
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        34136C7091DEF0D3:CC163EB45C40F8B2
        392522E4A5A96869:4EA498C9D2AC27C1
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        0E88E6C32C7B1933:A0F3960DB870417F
        A238F6680802DCF8:5CA2D5374DBC3C8A
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        510C4EAED0330F60:A4278D98C34DE89E
        22A788E913AD5A90:D7D06B6CCB7587E3
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        039D3508BB693CD3:23B96D4C703FB198
        8243D166A721F789:4DB9F76DBA99B9B3
        3D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FLhAM3jyZgyHT5QSB7TvwZNpweVnVpihX
    21: OP_DATA_0x21: compressed pub key
        0217C55A36D241FA:36B7E93B9FCC0B00
        B96748F717A9D9E6:BD22C24290C5D18F
        1B
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    183k2erqZopiLNxABfDFJtDno25wGFbkxV
    21: OP_DATA_0x21: compressed pub key
        0369D5242F76508E:7BFAD94E89E524AE
        942B3DF5B4BCB7C2:C5D6592AB876838D
        14
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13CHYEYgBjVnCY3YSGvQbUCF9eeyqhyzey
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221039D3508BB69:3CD323B96D4C703F
        B1988243D166A721:F7894DB9F76DBA99
        B9B33D210217C55A:36D241FA36B7E93B
        9FCC0B00B96748F7:17A9D9E6BD22C242
        90C5D18F1B210369:D5242F76508E7BFA
        D94E89E524AE942B:3DF5B4BCB7C2C5D6
        592AB876838D1453:AE
        corresponding bitcoin address is:    33NiFFcJvW7fTV9sPri2wfYV71dpXHTQ3i
 TX_IN[99] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[100]
 TX_IN[100] OutPoint hash (char[32])
  15550B6D9A7B19FD943D9D147C401E09FE68BDC5E8F16CBDC158069DC237E6A3
 TX_IN[100] OutPoint index (uint32_t)
  hex=0F000000, reversed=0000000F, decimal=15
 TX_IN[100] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[100] Script Sig (uchar[])
  0047304402203FA413E3A6F8E9F7BA4B425C4F669DB8047C6F1039A58713B1900294FEB1C1E002201E07CB16A4F6D66A30AB1C60389B83D12E7DC298849215AAD7D77E19AFE208C6014730440220139F890F4EAE4906DFCD5575360D1AAD6697D66198FE9274B4D3CE0C63387C5D0220483A0D7768C483D5E363646D37F37BB5297E1FFB518607DEF936B76DE11796E7014C695221032C2B6693F8179249EA69BF649960076D77F801B7EE8B367A5B3A6E39D22A66992103D1060FBF1E784D00D8F42EA673C0F53120FDC8216AB6A0C5E6AAF0BF08CDD53A21034823F72BA6C36AD0235A70EEFA552A24DE3A8F063261521FA6AB51534E97D84553AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        3FA413E3A6F8E9F7:BA4B425C4F669DB8
        047C6F1039A58713:B1900294FEB1C1E0
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        1E07CB16A4F6D66A:30AB1C60389B83D1
        2E7DC298849215AA:D7D77E19AFE208C6
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        139F890F4EAE4906:DFCD5575360D1AAD
        6697D66198FE9274:B4D3CE0C63387C5D
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        483A0D7768C483D5:E363646D37F37BB5
        297E1FFB518607DE:F936B76DE11796E7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        032C2B6693F81792:49EA69BF64996007
        6D77F801B7EE8B36:7A5B3A6E39D22A66
        99
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FXyBvsdMk3P9SaXAdi5qUrpboHV1Cwpyk
    21: OP_DATA_0x21: compressed pub key
        03D1060FBF1E784D:00D8F42EA673C0F5
        3120FDC8216AB6A0:C5E6AAF0BF08CDD5
        3A
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NreAxvjt7saTWLobAk2CAsYFY6T4iHq7s
    21: OP_DATA_0x21: compressed pub key
        034823F72BA6C36A:D0235A70EEFA552A
        24DE3A8F06326152:1FA6AB51534E97D8
        45
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    18DfKgV1WXwBjX7dC89KekPJv9hbgvwjo9
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221032C2B6693F8:179249EA69BF6499
        60076D77F801B7EE:8B367A5B3A6E39D2
        2A66992103D1060F:BF1E784D00D8F42E
        A673C0F53120FDC8:216AB6A0C5E6AAF0
        BF08CDD53A210348:23F72BA6C36AD023
        5A70EEFA552A24DE:3A8F063261521FA6
        AB51534E97D84553:AE
        corresponding bitcoin address is:    36Vdtawy97y6txwj2zACyLafiMopPRLXfM
 TX_IN[100] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[101]
 TX_IN[101] OutPoint hash (char[32])
  0827A91636A684FE5973F58276D3728C0EF985A55E93E0439DBF8482D3372863
 TX_IN[101] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[101] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[101] Script Sig (uchar[])
  0047304402206D3F47D7585037C55E42910367FB08167E7AA94BF9C966A248D15C87233EA7230220095FA3827CA6122FFCD85FF6C7B79098ED7C1273B5902C2B96372537DDC873F801483045022100A4F0CA3455DEF8495F6262E8F1505FCB3851A4D280E5869CB076336C72CAC7F2022076348A4019FC46A2D5AC271E17DEE937A2E9A89E50681405C4BE9ED51D501DD7014C695221032B74FD6CDEA007EA7C112009377CFF905D9B3732C7394706B949D21EDBF8CB14210323612E6112D2B70DFC7FF81471D262734CC3369ECF026FAB2FFCDCD8BD61D8482103C103A11EFA3097B69703FD196ABD5A70F49F67D18F4E43BE51D29D03235C588053AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        6D3F47D7585037C5:5E42910367FB0816
        7E7AA94BF9C966A2:48D15C87233EA723
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        095FA3827CA6122F:FCD85FF6C7B79098
        ED7C1273B5902C2B:96372537DDC873F8
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A4F0CA3455DEF8:495F6262E8F1505F
        CB3851A4D280E586:9CB076336C72CAC7
        F2
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        76348A4019FC46A2:D5AC271E17DEE937
        A2E9A89E50681405:C4BE9ED51D501DD7
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        032B74FD6CDEA007:EA7C112009377CFF
        905D9B3732C73947:06B949D21EDBF8CB
        14
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EJTkMZx2TS8biiMgdnvFhiU3XifC6hJdA
    21: OP_DATA_0x21: compressed pub key
        0323612E6112D2B7:0DFC7FF81471D262
        734CC3369ECF026F:AB2FFCDCD8BD61D8
        48
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    13hpXxYntg2Vy28ybVTRb2gjwdEkSXA2vb
    21: OP_DATA_0x21: compressed pub key
        03C103A11EFA3097:B69703FD196ABD5A
        70F49F67D18F4E43:BE51D29D03235C58
        80
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1JfZVecdRAxT5UPdfEmM4YHsF4A3mWXaSG
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221032B74FD6CDE:A007EA7C11200937
        7CFF905D9B3732C7:394706B949D21EDB
        F8CB14210323612E:6112D2B70DFC7FF8
        1471D262734CC336:9ECF026FAB2FFCDC
        D8BD61D8482103C1:03A11EFA3097B697
        03FD196ABD5A70F4:9F67D18F4E43BE51
        D29D03235C588053:AE
        corresponding bitcoin address is:    35yrKQo6nTh96ShQU55KzbCvNqeqPG6eyd
 TX_IN[101] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[102]
 TX_IN[102] OutPoint hash (char[32])
  E75BCD83954ED3C1FF37989F9DB4B31819AAE2A704007E43CC8C594DA2D247F2
 TX_IN[102] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[102] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[102] Script Sig (uchar[])
  00483045022100E21FACDB532BA9572B9BB0E2C41BF0D50B3E2026CE75589544A2E5C529514D000220414CDFB9D294908157561DE69B93E4821124E3ABB1D205F8F7AB4B36A33D84AE01483045022100B5F1432051666C1F2C4E80BB3D02D7A50AA38A0D3AE03039B1984257638E58F5022034010FC5498C4A1E3062B09336346E8D20B1CEE49A0D7C91A3295C14EAF6D129014C69522103DD55D05A9B6BA1411379F5D23FA6606F52106875479E2C86F5CFFA7622B502E02103FA23F6634E4D747661AF941C17C4A3E90770F39D85045FDEE888F14CED2345AA21029F73F46464AC5B425C7844C3D94CEEE8EF05674FC00B9D831BE18E01A5D8585253AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00E21FACDB532BA9:572B9BB0E2C41BF0
        D50B3E2026CE7558:9544A2E5C529514D
        00
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        414CDFB9D2949081:57561DE69B93E482
        1124E3ABB1D205F8:F7AB4B36A33D84AE
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B5F1432051666C:1F2C4E80BB3D02D7
        A50AA38A0D3AE030:39B1984257638E58
        F5
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        34010FC5498C4A1E:3062B09336346E8D
        20B1CEE49A0D7C91:A3295C14EAF6D129
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03DD55D05A9B6BA1:411379F5D23FA660
        6F52106875479E2C:86F5CFFA7622B502
        E0
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    137useURauA78ikCDCbgoRBC5xrUC4ewau
    21: OP_DATA_0x21: compressed pub key
        03FA23F6634E4D74:7661AF941C17C4A3
        E90770F39D85045F:DEE888F14CED2345
        AA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1AqYJTGswvCsuVrwvYNwy1wSoGMXdprpFp
    21: OP_DATA_0x21: compressed pub key
        029F73F46464AC5B:425C7844C3D94CEE
        E8EF05674FC00B9D:831BE18E01A5D858
        52
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1NfJLKdtjXieLbQ5EkUEaG1BSHdMPiELCa
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103DD55D05A9B:6BA1411379F5D23F
        A6606F5210687547:9E2C86F5CFFA7622
        B502E02103FA23F6:634E4D747661AF94
        1C17C4A3E90770F3:9D85045FDEE888F1
        4CED2345AA21029F:73F46464AC5B425C
        7844C3D94CEEE8EF:05674FC00B9D831B
        E18E01A5D8585253:AE
        corresponding bitcoin address is:    36jWsMtwD94saVoRQp8LaFuhhrLLAfbvy4
 TX_IN[102] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[103]
 TX_IN[103] OutPoint hash (char[32])
  79216AE6F047DA06572D22240599E54DD89DB95CB8C5DF7242E4E43D3D43B52F
 TX_IN[103] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[103] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[103] Script Sig (uchar[])
  0047304402201B0861C79A162F38BE8396F2DCDC0BE694061301089AA7E26F4775D421CA3CEF02200DDC88C507833A21075D96FFC311A896EF45688E075F0FB2A658DE21DDE5292B014830450221008CE495277C2C2F6770638318FBF70F11DDDA80B7DC59E85C9EC3863B2C69BB7F0220037CF51471E2915534A7C343491DB87F90CDA9FF31A9BA2A80C6988CD42CD514014C695221027ED2BF0474E69D4F24D728D257F9A3B6BF4C6719151F31FFC386AF794C7F92C121030691258D09343E61ABAFF4B00FAEF7606ABCBD12C3B6B920239BC835F8259E2D210344F2424137C2AC52B9AF1C22E1A082B6F2BBCB5879850F2A0F846F46F4575EF253AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        1B0861C79A162F38:BE8396F2DCDC0BE6
        94061301089AA7E2:6F4775D421CA3CEF
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        0DDC88C507833A21:075D96FFC311A896
        EF45688E075F0FB2:A658DE21DDE5292B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        008CE495277C2C2F:6770638318FBF70F
        11DDDA80B7DC59E8:5C9EC3863B2C69BB
        7F
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        037CF51471E29155:34A7C343491DB87F
        90CDA9FF31A9BA2A:80C6988CD42CD514
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        027ED2BF0474E69D:4F24D728D257F9A3
        B6BF4C6719151F31:FFC386AF794C7F92
        C1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1DZZihfgm7wV3tLEALWWSM57MjCVmFrxdM
    21: OP_DATA_0x21: compressed pub key
        030691258D09343E:61ABAFF4B00FAEF7
        606ABCBD12C3B6B9:20239BC835F8259E
        2D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1KSHMBPFg8K4jdXYBkDL6dsS7J8WzZjKkL
    21: OP_DATA_0x21: compressed pub key
        0344F2424137C2AC:52B9AF1C22E1A082
        B6F2BBCB5879850F:2A0F846F46F4575E
        F2
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    168eVjFh3ZCoPhaEygtxdMZ8LgaVGZ25av
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221027ED2BF0474:E69D4F24D728D257
        F9A3B6BF4C671915:1F31FFC386AF794C
        7F92C12103069125:8D09343E61ABAFF4
        B00FAEF7606ABCBD:12C3B6B920239BC8
        35F8259E2D210344:F2424137C2AC52B9
        AF1C22E1A082B6F2:BBCB5879850F2A0F
        846F46F4575EF253:AE
        corresponding bitcoin address is:    3LGLDL9za1wodoEXDjZhStm8aP9ShuVe9P
 TX_IN[103] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[104]
 TX_IN[104] OutPoint hash (char[32])
  F5C4C37281AF546FF66274EB50745EF0F4CBD0DC22DE84015A47E4F65193CA0E
 TX_IN[104] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[104] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[104] Script Sig (uchar[])
  00483045022100938C7D2AFA7E36B89D1D3D70D46F61FF51A14F1F551EB2AD67D7720E4271A5FA022078747991F8D3768D4476DDA4EC10C03348C0902958003D7179047F25101E18280147304402207848640FAB8381813AFAEFC5C415AFFCDEF5614B14F8B3025FF69415D3EB7CEB02204CD71B7934D2E3CDAB6815E27CD12A9B98EAAE5F6609C351F6108CED89199713014C695221033F0DD80F9CE2671897E00A6BE4E5B18FFDB9BA45C65AAADB7EFE3A2DC4664D102103FE5035F2C9EE59BB78F324A16D8C16BFD48CCBDD4C0926D66E720E161E590D132103C165DC652F7D79C78BFB2527A7795D414F5352130C2358AAAA75D53C1924E46453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00938C7D2AFA7E36:B89D1D3D70D46F61
        FF51A14F1F551EB2:AD67D7720E4271A5
        FA
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        78747991F8D3768D:4476DDA4EC10C033
        48C0902958003D71:79047F25101E1828
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        7848640FAB838181:3AFAEFC5C415AFFC
        DEF5614B14F8B302:5FF69415D3EB7CEB
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4CD71B7934D2E3CD:AB6815E27CD12A9B
        98EAAE5F6609C351:F6108CED89199713
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        033F0DD80F9CE267:1897E00A6BE4E5B1
        8FFDB9BA45C65AAA:DB7EFE3A2DC4664D
        10
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1MrNFgRUkvN1cJvyfZUZ9XUzkxSyAubCe6
    21: OP_DATA_0x21: compressed pub key
        03FE5035F2C9EE59:BB78F324A16D8C16
        BFD48CCBDD4C0926:D66E720E161E590D
        13
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    18ddAWoyrqHj3GmrJt1pBFzrDfgY9BWw5t
    21: OP_DATA_0x21: compressed pub key
        03C165DC652F7D79:C78BFB2527A7795D
        414F5352130C2358:AAAA75D53C1924E4
        64
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1BQCfsCoqBNXaVAWqVPj8QYLdaJPa5WHyn
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221033F0DD80F9C:E2671897E00A6BE4
        E5B18FFDB9BA45C6:5AAADB7EFE3A2DC4
        664D102103FE5035:F2C9EE59BB78F324
        A16D8C16BFD48CCB:DD4C0926D66E720E
        161E590D132103C1:65DC652F7D79C78B
        FB2527A7795D414F:5352130C2358AAAA
        75D53C1924E46453:AE
        corresponding bitcoin address is:    364HHYJXdjgLBzNjcFGiJwkBajdEAE9EMa
 TX_IN[104] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[105]
 TX_IN[105] OutPoint hash (char[32])
  F5DB8A203AE8AE4DE3187864EA8C5843CA9809355097CC053DCB080FE7255754
 TX_IN[105] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[105] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[105] Script Sig (uchar[])

  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C4002A92237AA1:21953A99F0247C5C
        F7581917F8897425:6C54CF52356DDE64
        AD
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        5330F91F3567DF94:3C119DFA179CB08A
        43368185C956AEF3:A9FDD46BA53FACA3
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00821B67B01130AC:39B09BFBB28E58A8
        57EAAFC4A3EE38C9:85080492F91C0E87
        D7
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        120E15ED0D134417:9F7C56D4F32F94E9
        200F7F8A29333F56:302B4374F103457E
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03A66487D6104768:7517536F2C0E585E
        BD88E5E444CD308D:61A7364557BD8D08
        37
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    121qDxhS1ShEuVjwMFFBcV5j8GYxZrnGPv
    21: OP_DATA_0x21: compressed pub key
        02EEA46C189742CB:5727A833607A17F4
        15741153E16EC788:A7E9F1AD307A27F0
        AF
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1P6yaLgnKbSqXopkoXvRRXVeanR7Kr83HY
    21: OP_DATA_0x21: compressed pub key
        020F08D220D4DE91:16A190EAD504A7BC
        425A7AAC42A56281:DD105B79AAEA7928
        54
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1SpEVonjvC7rUZDRL8HnFjpN7LJAWafMu
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103A66487D610:47687517536F2C0E
        585EBD88E5E444CD:308D61A7364557BD
        8D08372102EEA46C:189742CB5727A833
        607A17F415741153:E16EC788A7E9F1AD
        307A27F0AF21020F:08D220D4DE9116A1
        90EAD504A7BC425A:7AAC42A56281DD10
        5B79AAEA79285453:AE
        corresponding bitcoin address is:    3QCBidDFZezoDBv26zwWxXjSjBmJMkrr9m
 TX_IN[105] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[106]
 TX_IN[106] OutPoint hash (char[32])
  32EB460AB231A38D4979AA1CF2104266BB96C5A03A5145843D311A7C1EEF164C
 TX_IN[106] OutPoint index (uint32_t)
  hex=03000000, reversed=00000003, decimal=3
 TX_IN[106] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[106] Script Sig (uchar[])
  00483045022100FCE46F95A6FE551CF49714452FC733E0791A48F237DC41BBFFFD2B77D4ADD0FE022054C6B86AD01D1A4F41AF7559C7FB6143A8D932DED13E6B8FE0FB85D71236E1260147304402206C1F7650F491C042BEFF891F7230266E8C4AE2542D76F0A071A908F2EB5D3045022023BC7610ED69DDE5ADA8967D0644DF3921A492FADFDB054DDEEBC57716007C67014C695221026672C3B12159D43BAAEB19BAF804398FCFDF9533E4CA89F9F49D58860ED915FF2102D7110E3200947FD819F5DF54855FAC81DEBACF3CBE79FCB7DB8617EDD9FDCDE32102C7256852855B44D298A30F8C1B339B8CA06FACBA2EB7AA005B83F8D155F671DF53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00FCE46F95A6FE55:1CF49714452FC733
        E0791A48F237DC41:BBFFFD2B77D4ADD0
        FE
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        54C6B86AD01D1A4F:41AF7559C7FB6143
        A8D932DED13E6B8F:E0FB85D71236E126
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        6C1F7650F491C042:BEFF891F7230266E
        8C4AE2542D76F0A0:71A908F2EB5D3045
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        23BC7610ED69DDE5:ADA8967D0644DF39
        21A492FADFDB054D:DEEBC57716007C67
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        026672C3B12159D4:3BAAEB19BAF80439
        8FCFDF9533E4CA89:F9F49D58860ED915
        FF
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Kxxh4qYqZNrEnkavu99ho425KSg2KWxru
    21: OP_DATA_0x21: compressed pub key
        02D7110E3200947F:D819F5DF54855FAC
        81DEBACF3CBE79FC:B7DB8617EDD9FDCD
        E3
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Esf5CNQ5yzHeBrXYQWJSFX1A4eNEr33g
    21: OP_DATA_0x21: compressed pub key
        02C7256852855B44:D298A30F8C1B339B
        8CA06FACBA2EB7AA:005B83F8D155F671
        DF
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1F6Hv2rXFdPU4t6pxXkkkyhuLETTa3X47G
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221026672C3B121:59D43BAAEB19BAF8
        04398FCFDF9533E4:CA89F9F49D58860E
        D915FF2102D7110E:3200947FD819F5DF
        54855FAC81DEBACF:3CBE79FCB7DB8617
        EDD9FDCDE32102C7:256852855B44D298
        A30F8C1B339B8CA0:6FACBA2EB7AA005B
        83F8D155F671DF53:AE
        corresponding bitcoin address is:    3JXGDca2j5kKK7G7PPv81LmckSL4A9xNPr
 TX_IN[106] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[107]
 TX_IN[107] OutPoint hash (char[32])
  735D4F34E30E3D3C9E27D299EEDE499378769A2C0AB1E4BD559E1DFC16B66659
 TX_IN[107] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[107] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[107] Script Sig (uchar[])
  0047304402205EEFD6DDAA56F2DE9E45AE3918124CD1BE8C20C75486720FB87449FD032B9E0302204B8D621ECB8CBD5CD19DA991DD5CC8B34E6E4350D07ABBDE01EC4AACB54AAE8201473044022004319EFEF5E7613EB4C8C6DC7A7CCAA178F073A7429A4713E0855684936CC40B022033DF1A6AF479EE35AD6225EFB87A57E095A18A614607E4CC2AEC5B86A2C18484014C69522102B248A35A380D1C1D8F52B319E9C926D2296749A82CB0FDA143684C5118C5150E210321E77D6941BDB2EEBEF6B1180FCDF42D2227063F51D95E91AECCD449480D2A8321030F335FEDA0C29CDBE777B7994DD7E97A4EA47982537C5C90DB4D145D1712175953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        5EEFD6DDAA56F2DE:9E45AE3918124CD1
        BE8C20C75486720F:B87449FD032B9E03
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4B8D621ECB8CBD5C:D19DA991DD5CC8B3
        4E6E4350D07ABBDE:01EC4AACB54AAE82
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        04319EFEF5E7613E:B4C8C6DC7A7CCAA1
        78F073A7429A4713:E0855684936CC40B
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        33DF1A6AF479EE35:AD6225EFB87A57E0
        95A18A614607E4CC:2AEC5B86A2C18484
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02B248A35A380D1C:1D8F52B319E9C926
        D2296749A82CB0FD:A143684C5118C515
        0E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1JiAx1QSiTZSX2faJPpXu64qPQZLj7rSY8
    21: OP_DATA_0x21: compressed pub key
        0321E77D6941BDB2:EEBEF6B1180FCDF4
        2D2227063F51D95E:91AECCD449480D2A
        83
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    12jajG1Hb2iK2pJE2ZX5u9d7AZRzVhi3AK
    21: OP_DATA_0x21: compressed pub key
        030F335FEDA0C29C:DBE777B7994DD7E9
        7A4EA47982537C5C:90DB4D145D171217
        59
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1PEzexW7gjtaeyTDAqezNr4KfmR6QxYHT6
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102B248A35A38:0D1C1D8F52B319E9
        C926D2296749A82C:B0FDA143684C5118
        C5150E210321E77D:6941BDB2EEBEF6B1
        180FCDF42D222706:3F51D95E91AECCD4
        49480D2A8321030F:335FEDA0C29CDBE7
        77B7994DD7E97A4E:A47982537C5C90DB
        4D145D1712175953:AE
        corresponding bitcoin address is:    386Z5qyzLM78ridFmKM6n7oQ6fZnWyffcY
 TX_IN[107] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[108]
 TX_IN[108] OutPoint hash (char[32])
  FB146B3CD868FA67B86A98B8312DABBAFF3D11313AFF44403DC01C8D5A71CD6C
 TX_IN[108] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[108] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[108] Script Sig (uchar[])
  00483045022100C200BAF3B3129F5E6632A9B766B606C42C9CB0590BAC2AD38E2A2D6C4C1DEBA102206DC50E424BE9396758B61F084EDF594E3F4C7495D13896925171A67E7C71615701483045022100DA8FE7550A9DD05E8243CE7621CEF31FCEE1D4317188CF31055638B31C2E2EA9022001E2B67486E9CB7B424AFA0A703F9B0CACAD86260046E4AC5BA68E3D5E6CB508014C6952210397BB4BB17EC24ECF1C09244CD2EF9831CAF02E3AE90649C3FE17FE4924EADBC7210232934B68C1BA79F13B0C911D6DA503B988DFBA557ECA4210B9C9002C6B49B1B12103E3E7AFB8C479FF053D834B5ABDD02AE287F02F5768A84BB2DBACD14DF218138553AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C200BAF3B3129F:5E6632A9B766B606
        C42C9CB0590BAC2A:D38E2A2D6C4C1DEB
        A1
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        6DC50E424BE93967:58B61F084EDF594E
        3F4C7495D1389692:5171A67E7C716157
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00DA8FE7550A9DD0:5E8243CE7621CEF3
        1FCEE1D4317188CF:31055638B31C2E2E
        A9
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        01E2B67486E9CB7B:424AFA0A703F9B0C
        ACAD86260046E4AC:5BA68E3D5E6CB508
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0397BB4BB17EC24E:CF1C09244CD2EF98
        31CAF02E3AE90649:C3FE17FE4924EADB
        C7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1PamJSJpiQkNWu4um8Y1Z4oKbQuiogpYFj
    21: OP_DATA_0x21: compressed pub key
        0232934B68C1BA79:F13B0C911D6DA503
        B988DFBA557ECA42:10B9C9002C6B49B1
        B1
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LmaLhcM2xKcnVyRgW3GCkGzDt4htjA657
    21: OP_DATA_0x21: compressed pub key
        03E3E7AFB8C479FF:053D834B5ABDD02A
        E287F02F5768A84B:B2DBACD14DF21813
        85
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EUVNh6QS8pRT93cAv6ucKjkXVKSQTJxQc
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210397BB4BB17E:C24ECF1C09244CD2
        EF9831CAF02E3AE9:0649C3FE17FE4924
        EADBC7210232934B:68C1BA79F13B0C91
        1D6DA503B988DFBA:557ECA4210B9C900
        2C6B49B1B12103E3:E7AFB8C479FF053D
        834B5ABDD02AE287:F02F5768A84BB2DB
        ACD14DF218138553:AE
        corresponding bitcoin address is:    3QJLBcg8AYaYa6Lqc2tWSxH3EDJGkzuYCz
 TX_IN[108] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[109]
 TX_IN[109] OutPoint hash (char[32])
  700ECA1FE0CD4B0033B4DA47AFE1D783D6CD00C3AAFA740F2860E9973F924076
 TX_IN[109] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[109] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[109] Script Sig (uchar[])
  0047304402205BBB69867E90F6F8AEF6CD1ABCAFC9E1D010D7D2303F99B2677A7C26BE45146502203087FDE633CE403B955129ED43C2F12BFC62FB6F076E32A0134647C38FCF76AA01483045022100B0F7DFBB147B9D87BE89D4DC2A549248FD05CF85743E4FB7ACE9299D508E915E02207731E2C27DE35A03EC0B7BC6140EE3211F47220FF7DBCD7B2DF2105C3518D581014C69522102C48ABCB583EF11E1C0E5C4944AABDBE3DAB9148B354D2EAD44A52D7C3FF25541210276141E469FD62E06D08D7263BAB8110BF8A12D96A711BBDA8774D0A7187A676E2103E8CE10AC00C4DEF0221E143976A24B4571D6AA4782844CC6DF4C13F7A7CE7A1953AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        5BBB69867E90F6F8:AEF6CD1ABCAFC9E1
        D010D7D2303F99B2:677A7C26BE451465
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        3087FDE633CE403B:955129ED43C2F12B
        FC62FB6F076E32A0:134647C38FCF76AA
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00B0F7DFBB147B9D:87BE89D4DC2A5492
        48FD05CF85743E4F:B7ACE9299D508E91
        5E
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        7731E2C27DE35A03:EC0B7BC6140EE321
        1F47220FF7DBCD7B:2DF2105C3518D581
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02C48ABCB583EF11:E1C0E5C4944AABDB
        E3DAB9148B354D2E:AD44A52D7C3FF255
        41
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    18kM7gWzXoFLbPqxxHYLLfa49iM5AydHJo
    21: OP_DATA_0x21: compressed pub key
        0276141E469FD62E:06D08D7263BAB811
        0BF8A12D96A711BB:DA8774D0A7187A67
        6E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1HTucieeNd66S9tiR2pGnaMorLLPwxgozQ
    21: OP_DATA_0x21: compressed pub key
        03E8CE10AC00C4DE:F0221E143976A24B
        4571D6AA4782844C:C6DF4C13F7A7CE7A
        19
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17h9p5b8UYy18W8CxcQjCzSdtsx6ATKqai
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102C48ABCB583:EF11E1C0E5C4944A
        ABDBE3DAB9148B35:4D2EAD44A52D7C3F
        F25541210276141E:469FD62E06D08D72
        63BAB8110BF8A12D:96A711BBDA8774D0
        A7187A676E2103E8:CE10AC00C4DEF022
        1E143976A24B4571:D6AA4782844CC6DF
        4C13F7A7CE7A1953:AE
        corresponding bitcoin address is:    39C3zVCxxeLAvdaN9cZdYwnMFHxfG7kv5J
 TX_IN[109] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[110]
 TX_IN[110] OutPoint hash (char[32])
  5EDB1794423F8658F7BEB19CD6D57299E94A6338429D28719015B6805D5E946B
 TX_IN[110] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[110] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[110] Script Sig (uchar[])
  00483045022100CD6D9CB3A3B379683D184F80EFF9DD0A0780B7C8432A2C3DB1046386B84B6E0D0220272956E13DC23405308E8A8968D1DEF012A5D1B5F295B4D1D40F113535F5A793014730440220453A85803EBA0F5F965FE4DAF62742E0622DF9D893D250C43519CE9DF94B822002207DCAC1B38C6560E2D53A2DDBF6E90C737D97D8C703DAF40E5BCE8340A77ED9D1014C69522102BBC6CFD9C4990704C0ABDA8D4815F51E9B9DF59BB069C67D741527A85563308721030DEE78BDBD4FE6FAF2B62BCA6AFE337D9D1FBD6F1900ED4E2F5E27FE8130AD7E2103459628C635A73C9B34780D72EF9C674E7EFD53B28803E170C308E1DC3C20588753AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00CD6D9CB3A3B379:683D184F80EFF9DD
        0A0780B7C8432A2C:3DB1046386B84B6E
        0D
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        272956E13DC23405:308E8A8968D1DEF0
        12A5D1B5F295B4D1:D40F113535F5A793
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        453A85803EBA0F5F:965FE4DAF62742E0
        622DF9D893D250C4:3519CE9DF94B8220
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        7DCAC1B38C6560E2:D53A2DDBF6E90C73
        7D97D8C703DAF40E:5BCE8340A77ED9D1
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        02BBC6CFD9C49907:04C0ABDA8D4815F5
        1E9B9DF59BB069C6:7D741527A8556330
        87
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1C4zyrZGZQ17JbahWbrLmu5rSs644EXPzk
    21: OP_DATA_0x21: compressed pub key
        030DEE78BDBD4FE6:FAF2B62BCA6AFE33
        7D9D1FBD6F1900ED:4E2F5E27FE8130AD
        7E
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1BfoMfUjorJYQa9TiSfHn9iRukZJ9wPQi7
    21: OP_DATA_0x21: compressed pub key
        03459628C635A73C:9B34780D72EF9C67
        4E7EFD53B28803E1:70C308E1DC3C2058
        87
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Kz5hk5AkhEyc9wGH6hK8fwjBcgd9dvTa4
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522102BBC6CFD9C4:990704C0ABDA8D48
        15F51E9B9DF59BB0:69C67D741527A855
        63308721030DEE78:BDBD4FE6FAF2B62B
        CA6AFE337D9D1FBD:6F1900ED4E2F5E27
        FE8130AD7E210345:9628C635A73C9B34
        780D72EF9C674E7E:FD53B28803E170C3
        08E1DC3C20588753:AE
        corresponding bitcoin address is:    3FuAPdeiTKU8DhURb1hvRR3Qm2NpVysmL9
 TX_IN[110] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[111]
 TX_IN[111] OutPoint hash (char[32])
  1835318CB9BC6776CD385435D9EA69996969D2BF201123CD077B9D22A9217FFC
 TX_IN[111] OutPoint index (uint32_t)
  hex=00000000, reversed=00000000, decimal=0
 TX_IN[111] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[111] Script Sig (uchar[])
  00483045022100C6C69D0F18CB4916FD6499F124C3775070A0B48E1507853FC28E47811DFEA137022003C98256548D8A67B71A2C2322DD1515FC60901BA62200ABE338F7353C3ACF9C01473044022017934DE626CF40232F69D9EFFB8A0B0629FB2082EA468E094C565AC6D4414515022019114352CF706A05A624B50BF95B4BA814E80B4004CF5707C03AA083479E9EDA014C695221024C320D6773E1D472755508EF2EB03DEAE85112BF794E5CAE5A0D26D9CCB1CC0821025F4DB78ECAC5A9C0FAC3784136FC83048CEE84DA9766C5D8C6FC23E5603A051D21031ABB7E5A1250D6D4133EA5776433DB8DDCFD0AC2BF96F943149A554EC136C7E453AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00C6C69D0F18CB49:16FD6499F124C377
        5070A0B48E150785:3FC28E47811DFEA1
        37
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        03C98256548D8A67:B71A2C2322DD1515
        FC60901BA62200AB:E338F7353C3ACF9C
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        17934DE626CF4023:2F69D9EFFB8A0B06
        29FB2082EA468E09:4C565AC6D4414515
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        19114352CF706A05:A624B50BF95B4BA8
        14E80B4004CF5707:C03AA083479E9EDA
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        024C320D6773E1D4:72755508EF2EB03D
        EAE85112BF794E5C:AE5A0D26D9CCB1CC
        08
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1FtFtJxsJ38o9eJkddxdjuwDKjYDEL4p5A
    21: OP_DATA_0x21: compressed pub key
        025F4DB78ECAC5A9:C0FAC3784136FC83
        048CEE84DA9766C5:D8C6FC23E5603A05
        1D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    16HsYKKBirS3xDD5CSMDzLc992PfFDaudt
    21: OP_DATA_0x21: compressed pub key
        031ABB7E5A1250D6:D4133EA5776433DB
        8DDCFD0AC2BF96F9:43149A554EC136C7
        E4
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    158vvUt78ZpdMWeB581VVzdByoxhBMnL82
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221024C320D6773:E1D472755508EF2E
        B03DEAE85112BF79:4E5CAE5A0D26D9CC
        B1CC0821025F4DB7:8ECAC5A9C0FAC378
        4136FC83048CEE84:DA9766C5D8C6FC23
        E5603A051D21031A:BB7E5A1250D6D413
        3EA5776433DB8DDC:FD0AC2BF96F94314
        9A554EC136C7E453:AE
        corresponding bitcoin address is:    31hWVuHSmGqJaRtUmKKjj7Wtqd1mebB69N
 TX_IN[111] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[112]
 TX_IN[112] OutPoint hash (char[32])
  E0F478C6680046D67B2FAE51999BDC587ECD7A4DF9200C28EA5A97FE28C2087C
 TX_IN[112] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[112] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[112] Script Sig (uchar[])
  0047304402204B682C6129AB7FB70D3AA38E3820B838F6A16C4B7445714C25073B0CE6405D6702205BC8B24D037321E9D636725107E336DD997D3F1C5DE38903AE3D7DCD27F8764801483045022100EC665094DC5C3AB0BFB4502E63A1D4C8D3D0A0DEC3BD4EF974BA94D0F6F55BDE0220358D8DB47CA28EA7CFB2E897983B283D0FA798CC9C9E1ABC3734711682C933E2014C69522103914FE8E248D0A6F4F0943CB88762DC219CB7E47DA9A1CEDF68BCF5994DA615482102BA4583D2249E09F22B92CFA0BE9968BB719A74914A1995A4F58FF182F6BBDC1D21026B4538F7B80F5F13B11275ED424A7BAC3F98BCFC6DEB0E44E52EFEA1F8BD847353AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        4B682C6129AB7FB7:0D3AA38E3820B838
        F6A16C4B7445714C:25073B0CE6405D67
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        5BC8B24D037321E9:D636725107E336DD
        997D3F1C5DE38903:AE3D7DCD27F87648
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00EC665094DC5C3A:B0BFB4502E63A1D4
        C8D3D0A0DEC3BD4E:F974BA94D0F6F55B
        DE
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        358D8DB47CA28EA7:CFB2E897983B283D
        0FA798CC9C9E1ABC:3734711682C933E2
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03914FE8E248D0A6:F4F0943CB88762DC
        219CB7E47DA9A1CE:DF68BCF5994DA615
        48
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    15Ww9fkyXJQLkRfBbeehhthSA75SYATa3H
    21: OP_DATA_0x21: compressed pub key
        02BA4583D2249E09:F22B92CFA0BE9968
        BB719A74914A1995:A4F58FF182F6BBDC
        1D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Pjm21eYYbNJ3mMthXRrwB6Nt3Qo3YgQSb
    21: OP_DATA_0x21: compressed pub key
        026B4538F7B80F5F:13B11275ED424A7B
        AC3F98BCFC6DEB0E:44E52EFEA1F8BD84
        73
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1EcUzTQK9PFzUbprhw9h5i6yQvbNaSTvLb
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103914FE8E248:D0A6F4F0943CB887
        62DC219CB7E47DA9:A1CEDF68BCF5994D
        A615482102BA4583:D2249E09F22B92CF
        A0BE9968BB719A74:914A1995A4F58FF1
        82F6BBDC1D21026B:4538F7B80F5F13B1
        1275ED424A7BAC3F:98BCFC6DEB0E44E5
        2EFEA1F8BD847353:AE
        corresponding bitcoin address is:    3Q5Q4N5hVhcjMCLo2pDUgk6fwdThCDtwdo
 TX_IN[112] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[113]
 TX_IN[113] OutPoint hash (char[32])
  3D828F9411BDF58FEBC5C53A070FBF9253ED528FD1E5F2D076EEDF501A45218B
 TX_IN[113] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[113] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[113] Script Sig (uchar[])
  00473044022033F3048E99CE96A08407C92BA79F2A99087B9E58B53859D639B15921BAD9BA09022034A0C66CFBA4B014F6349CC53439F2130CAC0E773A5EBCEB33C0540876C026A501473044022008F1C21ED5E62B18B8817DC0B8B5AC8B0F60C384F39625C192789B4B4E3C3B2F02204556365572734ED4E15E79AFB1DC44F17A96DAAD7DCE5946D6BD130CDFA6C65B014C69522103F3BAE05F1EAF0A71AE7CBBA604D506896490BF426748700E51556D17B07BA8C221038C9F834F4FA943F82351661B09853A3F4322B5A5432780F3F0C095D4C2654F0C21032F5D9CF5E8C213B961CF8A059538102174E30FA8D8ABC4A05A74C81382BD26B753AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        33F3048E99CE96A0:8407C92BA79F2A99
        087B9E58B53859D6:39B15921BAD9BA09
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        34A0C66CFBA4B014:F6349CC53439F213
        0CAC0E773A5EBCEB:33C0540876C026A5
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        08F1C21ED5E62B18:B8817DC0B8B5AC8B
        0F60C384F39625C1:92789B4B4E3C3B2F
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        4556365572734ED4:E15E79AFB1DC44F1
        7A96DAAD7DCE5946:D6BD130CDFA6C65B
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        03F3BAE05F1EAF0A:71AE7CBBA604D506
        896490BF42674870:0E51556D17B07BA8
        C2
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LLbSRHo5F4rQ5gACFjcBK4yPLaprKN1ko
    21: OP_DATA_0x21: compressed pub key
        038C9F834F4FA943:F82351661B09853A
        3F4322B5A5432780:F3F0C095D4C2654F
        0C
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1LeqyZYpPyKacFry8GifDGSfnB6uovtbfe
    21: OP_DATA_0x21: compressed pub key
        032F5D9CF5E8C213:B961CF8A05953810
        2174E30FA8D8ABC4:A05A74C81382BD26
        B7
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1F4wqysFaotfXMzirMUcqZ4abkRokAYqPo
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        522103F3BAE05F1E:AF0A71AE7CBBA604
        D506896490BF4267:48700E51556D17B0
        7BA8C221038C9F83:4F4FA943F8235166
        1B09853A3F4322B5:A5432780F3F0C095
        D4C2654F0C21032F:5D9CF5E8C213B961
        CF8A059538102174:E30FA8D8ABC4A05A
        74C81382BD26B753:AE
        corresponding bitcoin address is:    34KXEWdhq2r5nVrkcoRkryy3E6VJDrQHzD
 TX_IN[113] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[114]
 TX_IN[114] OutPoint hash (char[32])
  9232E799D8EB99BC09741C9150B8FE87F03BC33AAB89B25F96F0F6DC58FFC6D3
 TX_IN[114] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[114] Script Length (var_int)
  hex=00FE, decimal=254
 TX_IN[114] Script Sig (uchar[])
  00483045022100E4B08D3C4945D1566BF119ACF97F34CFF3944644D5FEE1FA4FBA413E7A6A62580220108C9FC9C47FE725B194307E12C2B4A79C8741D145014E1AD88396FDB7A803A401483045022100F56604EB8599BA5178BD702EC6F7B4A09495F4AD747759EF1F16B9DCA923AE1602205B34669DA493CC39B304DDD6A78B9A8E078E29B662AA1A82A39706678416A569014C6952210217A54656E64C81177BFB7E9474C00C8BDB52BCBA57FB40620371E90814A2DED92103F444E4C9F6BA31246506C8A9B6A8349C52B29D665274B5D27B21E5FAFD51F78521038EFB2B62D1385790F1FF9F9786FDB3A9F934B8A7257A3227CB212AAC6C670E9153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00E4B08D3C4945D1:566BF119ACF97F34
        CFF3944644D5FEE1:FA4FBA413E7A6A62
        58
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        108C9FC9C47FE725:B194307E12C2B4A7
        9C8741D145014E1A:D88396FDB7A803A4
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00F56604EB8599BA:5178BD702EC6F7B4
        A09495F4AD747759:EF1F16B9DCA923AE
        16
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        5B34669DA493CC39:B304DDD6A78B9A8E
        078E29B662AA1A82:A39706678416A569
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0217A54656E64C81:177BFB7E9474C00C
        8BDB52BCBA57FB40:620371E90814A2DE
        D9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    12i8uGTfBtoVjjiNV65dcBaQvm2uHm9Fr4
    21: OP_DATA_0x21: compressed pub key
        03F444E4C9F6BA31:246506C8A9B6A834
        9C52B29D665274B5:D27B21E5FAFD51F7
        85
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CpH4TYuRArGwB5sYLJNFc3tTM4rrS2HXY
    21: OP_DATA_0x21: compressed pub key
        038EFB2B62D13857:90F1FF9F9786FDB3
        A9F934B8A7257A32:27CB212AAC6C670E
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    142BXNNYfjxzYC6c7JkJosUNGeZDkrH32q
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210217A54656E6:4C81177BFB7E9474
        C00C8BDB52BCBA57:FB40620371E90814
        A2DED92103F444E4:C9F6BA31246506C8
        A9B6A8349C52B29D:665274B5D27B21E5
        FAFD51F78521038E:FB2B62D1385790F1
        FF9F9786FDB3A9F9:34B8A7257A3227CB
        212AAC6C670E9153:AE
        corresponding bitcoin address is:    3LckMTCbxbywHRG1S6wN2YRBLpvgL48pT7
 TX_IN[114] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[115]
 TX_IN[115] OutPoint hash (char[32])
  6A0FC2C7E8469C2DE270FF5D4704BD4C39A933C37F57D59C12C4792D81DA7CEF
 TX_IN[115] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[115] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[115] Script Sig (uchar[])
  0047304402204627E6B8A49C3A7034C37B608D8403FE4DC08A7CCAF78F25C521B897FB9210B502200F7910F788F3BC625F555637633381307CED610D902110FC156DD6ED87ED1138014830450221009FF138FD81B474A0F85203BDB558576E0B324E6130F4D283E09D2C9ED630CD4102201C436667F6BBD2FC4CF35BC0D647002F5F5DE471EF44CB9CEC8CC381075E5956014C695221025C912235940991675463CF9A66538D28E2E82552CE2304653867A0C1866AEF8F21022E563C9E9F22B6D1ED45E6E19297E24FC8CCD4D1F1ABA9719DF2F134F8155CB921037DA0D717A85884249E75A595E5DC4D4922CA55ED82E59374F4B7E34D75CE679153AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        4627E6B8A49C3A70:34C37B608D8403FE
        4DC08A7CCAF78F25:C521B897FB9210B5
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        0F7910F788F3BC62:5F55563763338130
        7CED610D902110FC:156DD6ED87ED1138
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        009FF138FD81B474:A0F85203BDB55857
        6E0B324E6130F4D2:83E09D2C9ED630CD
        41
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        1C436667F6BBD2FC:4CF35BC0D647002F
        5F5DE471EF44CB9C:EC8CC381075E5956
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        025C912235940991:675463CF9A66538D
        28E2E82552CE2304:653867A0C1866AEF
        8F
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1CAzF4XEgCoMVUBpSpf1g3oNTkBSbFAPJZ
    21: OP_DATA_0x21: compressed pub key
        022E563C9E9F22B6:D1ED45E6E19297E2
        4FC8CCD4D1F1ABA9:719DF2F134F8155C
        B9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    19L2YaqPPw6SfMN3QbPsfNLK4wufdpH3zD
    21: OP_DATA_0x21: compressed pub key
        037DA0D717A85884:249E75A595E5DC4D
        4922CA55ED82E593:74F4B7E34D75CE67
        91
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1QVdBcFGVRKH7dew1Cgjbd2DcJ3hYucmv
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221025C91223594:0991675463CF9A66
        538D28E2E82552CE:2304653867A0C186
        6AEF8F21022E563C:9E9F22B6D1ED45E6
        E19297E24FC8CCD4:D1F1ABA9719DF2F1
        34F8155CB921037D:A0D717A85884249E
        75A595E5DC4D4922:CA55ED82E59374F4
        B7E34D75CE679153:AE
        corresponding bitcoin address is:    33xpcPu5KBo4KHmVGy4X52vCoCc21AGPs6
 TX_IN[115] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[116]
 TX_IN[116] OutPoint hash (char[32])
  0E542143BD7CA62CDCF056DF8991A8E9265886863F5AC23E06AAFD0D87176263
 TX_IN[116] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[116] Script Length (var_int)
  hex=00FD, decimal=253
 TX_IN[116] Script Sig (uchar[])
  00473044022053FD4AC2FCDF0B6CDCBF01AE346006ED6385ADC7EAF4E86F48EC214A556BDDDC022036591FD735C060BC86B71235D96EB6FC5B1A4049E910F47E969347B2B5AA518301483045022100A260CE0126276DDE27E2AB20FD37D06896F31BA627E41EACE483AAE0F334710B022010A21D3967EC5EE0CA5EADEE664D6EFBFA4849FF621A4BE56F608FAB60F29970014C695221021A79923753BF68F6020D932087C07266D750408B8FB24D7F50C0E6A1631B435D2102E19AC5364A5D9FC906E32C7C9EA9CACAE0662C4EDF8458D64AAE1CD766282889210259BE0D2C1DE981E65C396D35F36B24CC004B0E45BD7FB03907DE156E2A7C4F6053AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        53FD4AC2FCDF0B6C:DCBF01AE346006ED
        6385ADC7EAF4E86F:48EC214A556BDDDC
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        36591FD735C060BC:86B71235D96EB6FC
        5B1A4049E910F47E:969347B2B5AA5183
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    48: OP_DATA_0x48:     push hex 48 (decimal 72) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    45: OP_LENGTH_0x45:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    21: OP_LENGTH_0x21:   this is SIG R
        00A260CE0126276D:DE27E2AB20FD37D0
        6896F31BA627E41E:ACE483AAE0F33471
        0B
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG S
        10A21D3967EC5EE0:CA5EADEE664D6EFB
        FA4849FF621A4BE5:6F608FAB60F29970
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 138 chars is less than actual sig length (142 chars) - ok
           (hex 0x45, decimal 69, 138 chars)
    length of R coordinate (66) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        021A79923753BF68:F6020D932087C072
        66D750408B8FB24D:7F50C0E6A1631B43
        5D
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1B7HNzcjcfJv97GoR9akxfCW5cpo5FYGCd
    21: OP_DATA_0x21: compressed pub key
        02E19AC5364A5D9F:C906E32C7C9EA9CA
        CAE0662C4EDF8458:D64AAE1CD7662828
        89
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1wRquXC8ecezkf8qdCaMnYiu8SiWSC38P
    21: OP_DATA_0x21: compressed pub key
        0259BE0D2C1DE981:E65C396D35F36B24
        CC004B0E45BD7FB0:3907DE156E2A7C4F
        60
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    17E9fK3EtSREZXHVqP5bBG4i85mTsX5LtY
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        5221021A79923753:BF68F6020D932087
        C07266D750408B8F:B24D7F50C0E6A163
        1B435D2102E19AC5:364A5D9FC906E32C
        7C9EA9CACAE0662C:4EDF8458D64AAE1C
        D766282889210259:BE0D2C1DE981E65C
        396D35F36B24CC00:4B0E45BD7FB03907
        DE156E2A7C4F6053:AE
        corresponding bitcoin address is:    3KegZmVDeRSgYHgsLFQvcDzgRah4Ru4en4
 TX_IN[116] Sequence (uint32_t)
  FFFFFFFF
 
TX_IN[117]
 TX_IN[117] OutPoint hash (char[32])
  7CF927F0196F99EB149DFE65081EC37ECF9224BE0163E438247F800D53C9F9C8
 TX_IN[117] OutPoint index (uint32_t)
  hex=01000000, reversed=00000001, decimal=1
 TX_IN[117] Script Length (var_int)
  hex=FC, decimal=252
 TX_IN[117] Script Sig (uchar[])
  0047304402203B2A85F249817024ABF5D68A87B412DC4E0D68961EE4DC6A7F0FBE76EC63E6230220715525AA663660F97ED27D9B6AE03A83A2C0F38C2B6A3D29CDD22A6F862D698401473044022048BC314E02BB52222BF420F456D3A8EDA1D84320CB36C8A1919CB4D7FE592596022079DA005D32CB49551B202C8FDC4083C89ACBEEF0C199A4AF955DB1458F1082B8014C6952210367FA5C1D12CE623D64F37437866BDA86F8068F2652C41DFC13948A6CAA13C0F521020B6F040E8065B09D7B9410EE9BAE1265F083B02DA9B10FD1ECC6DB47564D00C92102E96A49349F638AAA0B039D6A406683F225C865CC8E6DD2262BEED1BA372F3BAA53AE 
  ##################################################################
  ### tcls_in_sig_script.sh: decode SIG_script OPCODES from a TX ###
  ##################################################################
    00: OP_DATA_0x00:     unknown data code - ignore
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        3B2A85F249817024:ABF5D68A87B412DC
        4E0D68961EE4DC6A:7F0FBE76EC63E623
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        715525AA663660F9:7ED27D9B6AE03A83
        A2C0F38C2B6A3D29:CDD22A6F862D6984
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    47: OP_DATA_0x47:     push hex 47 (decimal 71) bytes as data
    30: OP_SEQUENCE_0x30: type tag indicating SEQUENCE, begin sigscript
    44: OP_LENGTH_0x44:   length of R + S
    02: OP_INT_0x02:      type tag indicating INTEGER
    20: OP_LENGTH_0x20:   this is SIG R
        48BC314E02BB5222:2BF420F456D3A8ED
        A1D84320CB36C8A1:919CB4D7FE592596
    02: OP_S_INT_0x02
    20: OP_LENGTH_0x20:   this is SIG S
        79DA005D32CB4955:1B202C8FDC4083C8
        9ACBEEF0C199A4AF:955DB1458F1082B8
    01: OP_SIGHASHALL:    this terminates the ECDSA signature (ASN1-DER structure)
    #########################################################
    ### procedure to strictly check DER-encoded signature ###
    #########################################################
    Minimum and maximum size constraints                        - ok
    scriptsig always starts with 0x30                           - ok
    length 136 chars is less than actual sig length (140 chars) - ok
           (hex 0x44, decimal 68, 136 chars)
    length of R coordinate (64) >= 0                            - ok
    length of S coordinate (64) >= 0                            - ok
    S-Value is within scriptsig boundaries                      - ok
    Make sure the R & S length covers the entire signature      - ok
    S-value must be smaller than N/2                            - ok
    strictly check DER-encoded signature                        - ok
    #########################################################
    4C: OP_PUSHDATA1:     (next byte is number of bytes that go to stack)
    69: OP_INTEGER 105 Bytes (0x69) go to stack
    52: OP_2: push 2 Bytes onto stack
        ######## we go multisig ########
    21: OP_DATA_0x21: compressed pub key
        0367FA5C1D12CE62:3D64F37437866BDA
        86F8068F2652C41D:FC13948A6CAA13C0
        F5
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    125mcNDxGnMK4wYFTTQL6HXr784WgiivT4
    21: OP_DATA_0x21: compressed pub key
        020B6F040E8065B0:9D7B9410EE9BAE12
        65F083B02DA9B10F:D1ECC6DB47564D00
        C9
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1JD8LCvMxTYCYHiZ3nGohM62WcgjzSP6mC
    21: OP_DATA_0x21: compressed pub key
        02E96A49349F638A:AA0B039D6A406683
        F225C865CC8E6DD2:262BEED1BA372F3B
        AA
        This is MultiSig's Public Key (X9.63 COMPRESSED form)
        corresponding bitcoin address is:    1Mej4H2dPd1hKTdbTAeQDPpx9Kj4CLoV8C
    53: OP_3: push 3 Bytes onto stack
        Multisig needs 3 pubkeys
    AE: OP_CHECKMULTISIG, terminating multisig
        ####### Multisignature end ######
        52210367FA5C1D12:CE623D64F3743786
        6BDA86F8068F2652:C41DFC13948A6CAA
        13C0F521020B6F04:0E8065B09D7B9410
        EE9BAE1265F083B0:2DA9B10FD1ECC6DB
        47564D00C92102E9:6A49349F638AAA0B
        039D6A406683F225:C865CC8E6DD2262B
        EED1BA372F3BAA53:AE
        corresponding bitcoin address is:    3484dbW8jbhtLVHsaUxtgHj6assdLoh9bs
 TX_IN[117] Sequence (uint32_t)
  FFFFFFFF
 
 
TX_OUT COUNT, hex=02, decimal=2
TX_OUT[0]
 TX_OUT[0] Value (uint64_t)
  hex=C649F01100000000, reversed_hex=0000000011F049C6, dec=300960198, bitcoin=3.00960198
 TX_OUT[0] PK_Script Length (var_int)
  hex=17, dec=23
 TX_OUT[0] pk_script (uchar[])
  A914B0303ECB9E26AD262DA3C986D1256965897EEF6287
    A9: OP_HASH160
    14: OP_Data14 (= decimal 20)
        B0303ECB9E26AD26:2DA3C986D1256965
        897EEF62
    87: OP_EQUAL
  This is a P2SH script:
   -p2sh B0303ECB9E26AD262DA3C986D1256965897EEF62
  and translates base58 encoded into this bitcoin address:
   3HkceSvRtjcPgzxPsNvRQYnV4NPRe744ir
TX_OUT[1]
 TX_OUT[1] Value (uint64_t)
  hex=00E40B5402000000, reversed_hex=00000002540BE400, dec=10000000000, bitcoin=100.00000000
 TX_OUT[1] PK_Script Length (var_int)
  hex=17, dec=23
 TX_OUT[1] pk_script (uchar[])
  A9147E89B532389C565F7A8598F62928BC487A9A8FC287
    A9: OP_HASH160
    14: OP_Data14 (= decimal 20)
        7E89B532389C565F:7A8598F62928BC48
        7A9A8FC2
    87: OP_EQUAL
  This is a P2SH script:
   -p2sh 7E89B532389C565F7A8598F62928BC487A9A8FC2
  and translates base58 encoded into this bitcoin address:
   3DE62pWQHuU5EuLQjGzF5hswaD5ni8KbhE
 
 LOCK_TIME
00000000
