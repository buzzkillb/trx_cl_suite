#####################################
### Issues / errors in processing ###
#####################################

I10: 18jul16 svn:
==================
testcases_trx2txt.sh: testcase 20 fails on OpenBSD, cause parameter buffer is only 2048 Bytes

I14: 30jul16, svn:
==================
try cold storage with this: 1JmPRD_unspent.txt

I16: 31jul16, svn:
==================
testcases_trx_2txt.sh: testcase 9 on OpenBSD failes this way:
need to take care for buffering input?
TESTCASE 9c: 
cut: [-bcf] list: 2072 too large (max 2048)
cut: [-bcf] list: 2080 too large (max 2048)
cut: [-bcf] list: 2082 too large (max 2048)
...

I19: 09Oct2016, svn:
====================
I think the maximum size of a trx is 100 kb. How many trx does that make? 
How can this be implemented?
--> minimum signature is ~50 Bytes, prev trx = 32 Bytes + PKScript 20 Bytes plus, plus, plus... so a minimum trx is roughly 227 Bytes. This would limit to ~440 particular trx? And if a trx has many inputs and many outputs?

I22: 12Oct2016, svn:
====================
trx_create.sh - testcase 6: wenn er doch ins Netz geht, und die TRX mit '-t' holt,
kann er auch gleich checken, ob genug "input Satoshis" da sind, um den Transferbetrag und die TRXFEE zu bezahlen...

I24: 14Oct2016, svn:
====================
trx_create.sh - trxfee calculation:
# trx fees are calculated  with a trx fee per byte, which is changing...
# currently in Sep 2016 it is roughly 50 Satoshis per Byte. Exact length can only
# be determined during signing process, but here is a rough calc: each input
# requires later on a signature (length=70 Bytes/140 chars), which replaces
# the existing PKSCRIPT (length 25 Bytes, 50 chars). Each input must be signed,
# so roughly 90 chars signature are added. Normal 1 input one output P2PKH trx are
# roughly 227 Bytes ... THIS NEEDS FURTHER ANALYSIS !!!
--> need to get empirical data to improve math calculation, P2PKH is min 227 bytes, but P2SH can be much longer, and when SegWit and MerkleTrees come in, even much shorter.
--> when multi-input transactions are used, is the 50Satoshi/Bytes calc still true? What would a reasonable trxfee, if trx is 1000 Bytes?

I25: 17Oct2016, svn:
====================
if network is "on", then get the average last trx fee as proposal in the system... 
wget --no-check-certificate https://bitcoinfees.21.co/api/v1/fees/list
awk 'BEGIN { RS="},{"; OFS="\n" } { print $1 }' list | grep \"minDelay\":0,\"maxDelay\":0 | head -n1

or look here: https://blockchain.info/de/stats or https://api.blockchain.info/stats
divide total trx costs by amount of trx?
"total_fees_btc":7571592387
"n_tx":245576
= ~30000 Satoshis

I26: 19Oct2016, svn:
====================
start to think about a config file, having default values like:
min_trxfee=50
max_trx_size=100 # kilobytes
SIG_MIN_LENGTH_CHARS=18
SIG_MAX_LENGTH_CHARS=146
...

I27: xxOct2016, svn:
====================
trx_sign.sh: 
STEP 8:  need to do a var_int check here ...
STEP 17: when there is a trx with multiple output, need to create a loop


I27: xxOct2016, svn:
====================
need to analyze 4input trx from address 1JmPRDELzWZqRBKtdiak3iiyZrPQT3gxcM 
looks like the signature does not validate. Write small shell script like key2pem.sh?
from compressed key:
ADDRHEX=03cc5debc62369bd861900b167bc6add5f1a6249bdab4146d5ce698879988dced0
HASHHEX=48d2c9c76dc282eb7075a0fce543b9d615c0c2d5b78b41603c2d6cf46e2e77b0
SIGHEX=304402202acf376226c4f287ba82eb1e43f14192f0ea7e731f9d472a8510d9b09b9fcabe0220786b482911495e094e514bf706ff680ccf2ea183adf66e9c3699559f9f748f4e012103cc5debc62369bd861900b167bc6add5f1a6249bdab4146d5ce698879988dced0


I27: xxOct2016, svn:
====================
when tmp_urtx.txt file is missing, then wrong reply by sign script:
./tcls_sign.sh -f tmp_urtx.txt -w XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXQPcN4 -p 03cc5debc62369bd861900b167bc6add5f1a6249bdab4146d5ce698879988dced0
######################################################
### trx_sign.sh: sign an unsigned, raw Bitcoin trx ###
######################################################
cat: tmp_urtx.txt: No such file or directory
*** Error: unsigned raw transaction normally begins with Version '01000000'
           here we have . Please adjust, and try again. 
           Exiting gracefully



#####################################
### Extensions / new Requirements ###
#####################################
E1: Testnet
===============
can it be extended for usage in testnet?

E2: MultiSig
===============
For important values: make use of a 2of3 multisig with one in cold storage
generate 3 addresses (and 3 private keys) A, B & C... and 
create 1 multisig address (D) using those 3 in a 2-of-3 configuration

the multisig address starts with a "3", all the others (A,B & C) should be "1". 
send funds into the multisig address D (starts with a "3")... 
make sure all the private keys for your A, B & C addresses are all backed up/stored independently of each other. 
to take funds out of D, create a transaction using one of A,B or C.. and then co-sign the transaction using one of the other addresses.

E3: Sending
===============
can a signed trx be sent to the net without tools?
--> https://bitcointalk.org/index.php?topic=1043518.0
curl -X POST -d tx=010000000158891e8f28100642464417f53845c3953a43e31b35d061bdbf6ca3a64fffabb8000000008c493046022100a9d501a6f59c45a24e65e5030903cfd80ba33910f24d6a505961d64fa5042b4f02210089fa7cc00ab2b5fc15499fa259a057e6d0911d4e849f1720cc6bc58e941fe7e20141041a2756dd506e45a1142c7f7f03ae9d3d9954f8543f4c3ca56f025df66f1afcba6086cec8d4135cbb5f5f1d731f25ba0884fc06945c9bbf69b9b543ca91866e79ffffffff01204e0000000000001976a914d04b020dab70a7dd7055db3bbc70d27c1b25a99c88ac00000000 https://blockchain.info/pushtx

